// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`generate spec > generates spec complex 1`] = `
{
  "components": {
    "examples": {
      "create_index_connector_request": {
        "summary": "Create an index connector.",
        "value": {
          "config": {
            "index": "test-index",
          },
          "connector_type_id": ".index",
          "name": "my-connector",
        },
      },
      "create_index_connector_response": {
        "summary": "A new index connector.",
        "value": {
          "config": {
            "executionTimeField": null,
            "index": "test-index",
            "refresh": false,
          },
          "connector_type_id": ".index",
          "id": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
          "is_deprecated": false,
          "is_missing_secrets": false,
          "is_preconfigured": false,
          "name": "my-connector",
        },
      },
      "get_connector_response": {
        "summary": "A list of connector types",
        "value": {
          "config": {},
          "connector_type_id": ".server-log",
          "id": "df770e30-8b8b-11ed-a780-3b746c987a81",
          "is_deprecated": false,
          "is_missing_secrets": false,
          "is_preconfigured": false,
          "name": "my_server_log_connector",
        },
      },
      "get_connector_types_response": {
        "summary": "A list of connector types",
        "value": [
          {
            "enabled": true,
            "enabled_in_config": true,
            "enabled_in_license": true,
            "id": ".swimlane",
            "minimum_license_required": "gold",
            "name": "Swimlane",
            "supported_feature_ids": [
              "alerting",
              "cases",
              "siem",
            ],
          },
          {
            "enabled": true,
            "enabled_in_config": true,
            "enabled_in_license": true,
            "id": ".index",
            "minimum_license_required": "basic",
            "name": "Index",
            "supported_feature_ids": [
              "alerting",
              "uptime",
              "siem",
            ],
          },
          {
            "enabled": true,
            "enabled_in_config": true,
            "enabled_in_license": true,
            "id": ".server-log",
            "minimum_license_required": "basic",
            "name": "Server log",
            "supported_feature_ids": [
              "alerting",
              "uptime",
            ],
          },
        ],
      },
      "get_connectors_response": {
        "summary": "A list of connectors",
        "value": [
          {
            "connector_type_id": ".email",
            "id": "preconfigured-email-connector",
            "is_deprecated": false,
            "is_preconfigured": true,
            "name": "my-preconfigured-email-notification",
            "referenced_by_count": 0,
          },
          {
            "config": {
              "executionTimeField": null,
              "index": "test-index",
              "refresh": false,
            },
            "connector_type_id": ".index",
            "id": "e07d0c80-8b8b-11ed-a780-3b746c987a81",
            "is_deprecated": false,
            "is_missing_secrets": false,
            "is_preconfigured": false,
            "name": "my-index-connector",
            "referenced_by_count": 2,
          },
        ],
      },
      "run_index_connector_request": {
        "summary": "Run an index connector.",
        "value": {
          "params": {
            "documents": [
              {
                "id": "my_doc_id",
                "message": "hello, world",
                "name": "my_doc_name",
              },
            ],
          },
        },
      },
      "run_index_connector_response": {
        "summary": "Response from running an index connector.",
        "value": {
          "connector_id": "fd38c600-96a5-11ed-bb79-353b74189cba",
          "data": {
            "errors": false,
            "items": [
              {
                "create": {
                  "_id": "4JtvwYUBrcyxt2NnfW3y",
                  "_index": "my-index",
                  "_primary_term": 1,
                  "_seq_no": 0,
                  "_shards": {
                    "failed": 0,
                    "successful": 1,
                    "total": 2,
                  },
                  "_version": 1,
                  "result": "created",
                  "status": 201,
                },
              },
            ],
            "took": 135,
          },
          "status": "ok",
        },
      },
      "run_jira_connector_request": {
        "summary": "Run a Jira connector to retrieve the list of issue types.",
        "value": {
          "params": {
            "subAction": "issueTypes",
          },
        },
      },
      "run_jira_connector_response": {
        "summary": "Response from retrieving the list of issue types for a Jira connector.",
        "value": {
          "connector_id": "b3aad810-edbe-11ec-82d1-11348ecbf4a6",
          "data": [
            {
              "id": 10024,
              "name": "Improvement",
            },
            {
              "id": 10006,
              "name": "Task",
            },
            {
              "id": 10007,
              "name": "Sub-task",
            },
            {
              "id": 10025,
              "name": "New Feature",
            },
            {
              "id": 10023,
              "name": "Bug",
            },
            {
              "id": 10000,
              "name": "Epic",
            },
          ],
          "status": "ok",
        },
      },
      "run_server_log_connector_request": {
        "summary": "Run a server log connector.",
        "value": {
          "params": {
            "level": "warn",
            "message": "Test warning message.",
          },
        },
      },
      "run_server_log_connector_response": {
        "summary": "Response from running a server log connector.",
        "value": {
          "connector_id": "7fc7b9a0-ecc9-11ec-8736-e7d63118c907",
          "status": "ok",
        },
      },
      "run_servicenow_itom_connector_request": {
        "summary": "Run a ServiceNow ITOM connector to retrieve the list of choices.",
        "value": {
          "params": {
            "subAction": "getChoices",
            "subActionParams": {
              "fields": [
                "severity",
                "urgency",
              ],
            },
          },
        },
      },
      "run_servicenow_itom_connector_response": {
        "summary": "Response from retrieving the list of choices for a ServiceNow ITOM connector.",
        "value": {
          "connector_id": "9d9be270-2fd2-11ed-b0e0-87533c532698",
          "data": [
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Critical",
              "value": 1,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Major",
              "value": 2,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Minor",
              "value": 3,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Warning",
              "value": 4,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "OK",
              "value": 5,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Clear",
              "value": 0,
            },
            {
              "dependent_value": "",
              "element": "urgency",
              "label": "1 - High",
              "value": 1,
            },
            {
              "dependent_value": "",
              "element": "urgency",
              "label": "2 - Medium",
              "value": 2,
            },
            {
              "dependent_value": "",
              "element": "urgency",
              "label": "3 - Low",
              "value": 3,
            },
          ],
          "status": "ok",
        },
      },
      "run_swimlane_connector_request": {
        "summary": "Run a Swimlane connector to create an incident.",
        "value": {
          "params": {
            "subAction": "pushToService",
            "subActionParams": {
              "comments": [
                {
                  "comment": "A comment about the incident.",
                  "commentId": 1,
                },
              ],
              "incident": {
                "caseId": "1000",
                "caseName": "Case name",
                "description": "Description of the incident.",
              },
            },
          },
        },
      },
      "run_swimlane_connector_response": {
        "summary": "Response from creating a Swimlane incident.",
        "value": {
          "connector_id": "a4746470-2f94-11ed-b0e0-87533c532698",
          "data": {
            "comments": [
              {
                "commentId": 1,
                "pushedDate": "2022-09-08T16:52:27.865Z",
              },
            ],
            "id": "aKPmBHWzmdRQtx6Mx",
            "pushedDate": "2022-09-08T16:52:27.866Z",
            "title": "TEST-457",
            "url": "https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx",
          },
          "status": "ok",
        },
      },
      "update_index_connector_request": {
        "summary": "Update an index connector.",
        "value": {
          "config": {
            "index": "updated-index",
          },
          "name": "updated-connector",
        },
      },
    },
    "parameters": {
      "action_id": {
        "description": "An identifier for the action.",
        "in": "path",
        "name": "actionId",
        "required": true,
        "schema": {
          "example": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
          "type": "string",
        },
      },
      "connector_id": {
        "description": "An identifier for the connector.",
        "in": "path",
        "name": "connectorId",
        "required": true,
        "schema": {
          "example": "df770e30-8b8b-11ed-a780-3b746c987a81",
          "type": "string",
        },
      },
      "kbn_xsrf": {
        "description": "Cross-site request forgery protection",
        "in": "header",
        "name": "kbn-xsrf",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
      "space_id": {
        "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
        "in": "path",
        "name": "spaceId",
        "required": true,
        "schema": {
          "example": "default",
          "type": "string",
        },
      },
    },
    "responses": {
      "200_actions": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/action_response_properties",
            },
          },
        },
        "description": "Indicates a successful call.",
      },
      "401": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "enum": [
                    "Unauthorized",
                  ],
                  "example": "Unauthorized",
                  "type": "string",
                },
                "message": {
                  "type": "string",
                },
                "statusCode": {
                  "enum": [
                    401,
                  ],
                  "example": 401,
                  "type": "integer",
                },
              },
              "title": "Unauthorized response",
              "type": "object",
            },
          },
        },
        "description": "Authorization information is missing or invalid.",
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "enum": [
                    "Not Found",
                  ],
                  "example": "Not Found",
                  "type": "string",
                },
                "message": {
                  "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                  "type": "string",
                },
                "statusCode": {
                  "enum": [
                    404,
                  ],
                  "example": 404,
                  "type": "integer",
                },
              },
              "title": "Not found response",
              "type": "object",
            },
          },
        },
        "description": "Object is not found.",
      },
    },
    "schemas": {
      "action_response_properties": {
        "description": "The properties vary depending on the action type.",
        "properties": {
          "actionTypeId": {
            "type": "string",
          },
          "config": {
            "type": "object",
          },
          "id": {
            "type": "string",
          },
          "isDeprecated": {
            "description": "Indicates whether the action type is deprecated.",
            "type": "boolean",
          },
          "isMissingSecrets": {
            "description": "Indicates whether secrets are missing for the action.",
            "type": "boolean",
          },
          "isPreconfigured": {
            "description": "Indicates whether it is a preconfigured action.",
            "type": "boolean",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "Action response properties",
        "type": "object",
      },
      "config_properties_cases_webhook": {
        "description": "Defines properties for connectors when type is \`.cases-webhook\`.",
        "properties": {
          "createCommentJson": {
            "description": "A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is \`case.comment\`. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
            "example": {
              "body": {
                "[object Object]": null,
              },
            },
            "type": "string",
          },
          "createCommentMethod": {
            "default": "put",
            "description": "The REST API HTTP request method to create a case comment in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
            "enum": [
              "patch",
              "post",
              "put",
            ],
            "type": "string",
          },
          "createCommentUrl": {
            "description": "The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts setting\`, add the hostname to the allowed hosts.
",
            "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment",
            "type": "string",
          },
          "createIncidentJson": {
            "description": "A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
            "example": {
              "fields": {
                "description": {
                  "[object Object]": null,
                },
                "labels": {
                  "[object Object]": null,
                },
                "summary": {
                  "[object Object]": null,
                },
              },
            },
            "type": "string",
          },
          "createIncidentMethod": {
            "default": "post",
            "description": "The REST API HTTP request method to create a case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
            "enum": [
              "patch",
              "post",
              "put",
            ],
            "type": "string",
          },
          "createIncidentResponseKey": {
            "description": "The JSON key in the create case response that contains the external case ID.",
            "type": "string",
          },
          "createIncidentUrl": {
            "description": "The REST API URL to create a case in the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
            "type": "string",
          },
          "getIncidentResponseExternalTitleKey": {
            "description": "The JSON key in get case response that contains the external case title.",
            "type": "string",
          },
          "getIncidentUrl": {
            "description": "The REST API URL to get the case by ID from the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
            "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}",
            "type": "string",
          },
          "hasAuth": {
            "default": true,
            "description": "If true, a username and password for login type authentication must be provided.",
            "type": "boolean",
          },
          "headers": {
            "description": "A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
",
            "type": "string",
          },
          "updateIncidentJson": {
            "description": "The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
            "example": {
              "fields": {
                "description": {
                  "[object Object]": null,
                },
                "labels": {
                  "[object Object]": null,
                },
                "summary": {
                  "[object Object]": null,
                },
              },
            },
            "type": "string",
          },
          "updateIncidentMethod": {
            "default": "put",
            "description": "The REST API HTTP request method to update the case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
            "enum": [
              "patch",
              "post",
              "put",
            ],
            "type": "string",
          },
          "updateIncidentUrl": {
            "description": "The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
            "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}",
            "type": "string",
          },
          "viewIncidentUrl": {
            "description": "The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
",
            "example": "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}",
            "type": "string",
          },
        },
        "required": [
          "createIncidentJson",
          "createIncidentResponseKey",
          "createIncidentUrl",
          "getIncidentResponseExternalTitleKey",
          "getIncidentUrl",
          "updateIncidentJson",
          "updateIncidentUrl",
          "viewIncidentUrl",
        ],
        "title": "Connector request properties for Webhook - Case Management connector",
        "type": "object",
      },
      "config_properties_email": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.email\`.",
        "title": "Connector request properties for an email connector",
        "type": "object",
      },
      "config_properties_index": {
        "description": "Defines properties for connectors when type is \`.index\`.",
        "properties": {
          "executionTimeField": {
            "default": null,
            "description": "Specifies a field that will contain the time the alert condition was detected.",
            "nullable": true,
            "type": "string",
          },
          "index": {
            "description": "The Elasticsearch index to be written to.",
            "type": "string",
          },
          "refresh": {
            "default": false,
            "description": "The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
",
            "type": "boolean",
          },
        },
        "required": [
          "index",
        ],
        "title": "Connector request properties for an index connector",
        "type": "object",
      },
      "config_properties_jira": {
        "description": "Defines properties for connectors when type is \`.jira\`.",
        "properties": {
          "apiUrl": {
            "description": "The Jira instance URL.",
            "type": "string",
          },
          "projectKey": {
            "description": "The Jira project key.",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
          "projectKey",
        ],
        "title": "Connector request properties for a Jira connector",
        "type": "object",
      },
      "config_properties_opsgenie": {
        "description": "Defines properties for connectors when type is \`.opsgenie\`.",
        "properties": {
          "apiUrl": {
            "description": "The Opsgenie URL. For example, \`https://api.opsgenie.com\` or \`https://api.eu.opsgenie.com\`. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
        ],
        "title": "Connector request properties for an Opsgenie connector",
        "type": "object",
      },
      "config_properties_pagerduty": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.pagerduty\`.",
        "title": "Connector request properties for a PagerDuty connector",
        "type": "object",
      },
      "config_properties_resilient": {
        "description": "Defines properties for connectors when type is \`.resilient\`.",
        "properties": {
          "apiUrl": {
            "description": "The IBM Resilient instance URL.",
            "type": "string",
          },
          "orgId": {
            "description": "The IBM Resilient organization ID.",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
          "orgId",
        ],
        "title": "Connector request properties for a IBM Resilient connector",
        "type": "object",
      },
      "config_properties_servicenow": {
        "description": "Defines properties for connectors when type is \`.servicenow\`.",
        "properties": {
          "apiUrl": {
            "description": "The ServiceNow instance URL.",
            "type": "string",
          },
          "clientId": {
            "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "isOAuth": {
            "default": false,
            "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
            "type": "boolean",
          },
          "jwtKeyId": {
            "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "userIdentifierValue": {
            "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "usesTableApi": {
            "default": true,
            "description": "Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to \`false\`, the Elastic application should be installed in ServiceNow.
",
            "type": "boolean",
          },
        },
        "required": [
          "apiUrl",
        ],
        "title": "Connector request properties for a ServiceNow ITSM connector",
        "type": "object",
      },
      "config_properties_servicenow_itom": {
        "description": "Defines properties for connectors when type is \`.servicenow\`.",
        "properties": {
          "apiUrl": {
            "description": "The ServiceNow instance URL.",
            "type": "string",
          },
          "clientId": {
            "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "isOAuth": {
            "default": false,
            "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
            "type": "boolean",
          },
          "jwtKeyId": {
            "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "userIdentifierValue": {
            "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
        ],
        "title": "Connector request properties for a ServiceNow ITSM connector",
        "type": "object",
      },
      "config_properties_swimlane": {
        "description": "Defines properties for connectors when type is \`.swimlane\`.",
        "properties": {
          "apiUrl": {
            "description": "The Swimlane instance URL.",
            "type": "string",
          },
          "appId": {
            "description": "The Swimlane application ID.",
            "type": "string",
          },
          "connectorType": {
            "description": "The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.",
            "enum": [
              "all",
              "alerts",
              "cases",
            ],
            "type": "string",
          },
          "mappings": {
            "description": "The field mapping.",
            "properties": {
              "alertIdConfig": {
                "description": "Mapping for the alert ID.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Alert identifier mapping",
                "type": "object",
              },
              "caseIdConfig": {
                "description": "Mapping for the case ID.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case identifier mapping",
                "type": "object",
              },
              "caseNameConfig": {
                "description": "Mapping for the case name.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case name mapping",
                "type": "object",
              },
              "commentsConfig": {
                "description": "Mapping for the case comments.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case comment mapping",
                "type": "object",
              },
              "descriptionConfig": {
                "description": "Mapping for the case description.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case description mapping",
                "type": "object",
              },
              "ruleNameConfig": {
                "description": "Mapping for the name of the alert's rule.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Rule name mapping",
                "type": "object",
              },
              "severityConfig": {
                "description": "Mapping for the severity.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Severity mapping",
                "type": "object",
              },
            },
            "title": "Connector mappings properties for a Swimlane connector",
            "type": "object",
          },
        },
        "required": [
          "apiUrl",
          "appId",
          "connectorType",
        ],
        "title": "Connector request properties for a Swimlane connector",
        "type": "object",
      },
      "config_properties_tines": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.tines\`.",
        "title": "Connector request properties for a Tines connector",
        "type": "object",
      },
      "config_properties_webhook": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.webhook\`.",
        "title": "Connector request properties for a Webhook connector",
        "type": "object",
      },
      "config_properties_xmatters": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.xmatters\`.",
        "title": "Connector request properties for a xMatters connector",
        "type": "object",
      },
      "connector_response_properties": {
        "description": "The properties vary depending on the connector type.",
        "discriminator": {
          "propertyName": "connector_type_id",
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/connector_response_properties_cases_webhook",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_email",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_index",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_jira",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_opsgenie",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_pagerduty",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_resilient",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_serverlog",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_servicenow",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_servicenow_itom",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_servicenow_sir",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_slack_api",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_slack_webhook",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_swimlane",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_teams",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_tines",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_webhook",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_xmatters",
          },
        ],
        "title": "Connector response properties",
      },
      "connector_response_properties_cases_webhook": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_cases_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".cases-webhook",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector request properties for a Webhook - Case Management connector",
        "type": "object",
      },
      "connector_response_properties_email": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_email",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".email",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an email connector",
        "type": "object",
      },
      "connector_response_properties_index": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_index",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".index",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an index connector",
        "type": "object",
      },
      "connector_response_properties_jira": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_jira",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".jira",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Jira connector",
        "type": "object",
      },
      "connector_response_properties_opsgenie": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_opsgenie",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".opsgenie",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an Opsgenie connector",
        "type": "object",
      },
      "connector_response_properties_pagerduty": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_pagerduty",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".pagerduty",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a PagerDuty connector",
        "type": "object",
      },
      "connector_response_properties_resilient": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_resilient",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".resilient",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a IBM Resilient connector",
        "type": "object",
      },
      "connector_response_properties_serverlog": {
        "properties": {
          "config": {
            "nullable": true,
            "type": "object",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".server-log",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a server log connector",
        "type": "object",
      },
      "connector_response_properties_servicenow": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a ServiceNow ITSM connector",
        "type": "object",
      },
      "connector_response_properties_servicenow_itom": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow_itom",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-itom",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a ServiceNow ITOM connector",
        "type": "object",
      },
      "connector_response_properties_servicenow_sir": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-sir",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a ServiceNow SecOps connector",
        "type": "object",
      },
      "connector_response_properties_slack_api": {
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack_api",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Slack connector",
        "type": "object",
      },
      "connector_response_properties_slack_webhook": {
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Slack connector",
        "type": "object",
      },
      "connector_response_properties_swimlane": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_swimlane",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".swimlane",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Swimlane connector",
        "type": "object",
      },
      "connector_response_properties_teams": {
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".teams",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Microsoft Teams connector",
        "type": "object",
      },
      "connector_response_properties_tines": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_tines",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".tines",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Tines connector",
        "type": "object",
      },
      "connector_response_properties_webhook": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".webhook",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Webhook connector",
        "type": "object",
      },
      "connector_response_properties_xmatters": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_xmatters",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".xmatters",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an xMatters connector",
        "type": "object",
      },
      "connector_types": {
        "description": "The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`, \`.opsgenie\`, or \`.server-log\`.",
        "enum": [
          ".cases-webhook",
          ".email",
          ".index",
          ".jira",
          ".opsgenie",
          ".pagerduty",
          ".resilient",
          ".servicenow",
          ".servicenow-itom",
          ".servicenow-sir",
          ".server-log",
          ".slack",
          ".swimlane",
          ".teams",
          ".tines",
          ".webhook",
          ".xmatters",
        ],
        "example": ".server-log",
        "title": "Connector types",
        "type": "string",
      },
      "create_connector_request_cases_webhook": {
        "description": "The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_cases_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".cases-webhook",
            ],
            "example": ".cases-webhook",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_cases_webhook",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
        ],
        "title": "Create Webhook - Case Managment connector request",
        "type": "object",
      },
      "create_connector_request_email": {
        "description": "The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_email",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".email",
            ],
            "example": ".email",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_email",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create email connector request",
        "type": "object",
      },
      "create_connector_request_index": {
        "description": "The index connector indexes a document into Elasticsearch.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_index",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".index",
            ],
            "example": ".index",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
        ],
        "title": "Create index connector request",
        "type": "object",
      },
      "create_connector_request_jira": {
        "description": "The Jira connector uses the REST API v2 to create Jira issues.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_jira",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".jira",
            ],
            "example": ".jira",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_jira",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Jira connector request",
        "type": "object",
      },
      "create_connector_request_opsgenie": {
        "description": "The Opsgenie connector uses the Opsgenie alert API.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_opsgenie",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".opsgenie",
            ],
            "example": ".opsgenie",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_opsgenie",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Opsgenie connector request",
        "type": "object",
      },
      "create_connector_request_pagerduty": {
        "description": "The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_pagerduty",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".pagerduty",
            ],
            "example": ".pagerduty",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_pagerduty",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create PagerDuty connector request",
        "type": "object",
      },
      "create_connector_request_resilient": {
        "description": "The IBM Resilient connector uses the RESILIENT REST v2 to create IBM Resilient incidents.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_resilient",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".resilient",
            ],
            "example": ".resilient",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_resilient",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create IBM Resilient connector request",
        "type": "object",
      },
      "create_connector_request_serverlog": {
        "description": "This connector writes an entry to the Kibana server log.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".server-log",
            ],
            "example": ".server-log",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "name",
        ],
        "title": "Create server log connector request",
        "type": "object",
      },
      "create_connector_request_servicenow": {
        "description": "The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow",
            ],
            "example": ".servicenow",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow ITSM connector request",
        "type": "object",
      },
      "create_connector_request_servicenow_itom": {
        "description": "The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow_itom",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-itom",
            ],
            "example": ".servicenow-itom",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow ITOM connector request",
        "type": "object",
      },
      "create_connector_request_servicenow_sir": {
        "description": "The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-sir",
            ],
            "example": ".servicenow-sir",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow SecOps connector request",
        "type": "object",
      },
      "create_connector_request_slack_api": {
        "description": "The Slack connector uses Slack Incoming Webhooks.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack_api",
            ],
            "example": ".slack_api",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_api",
          },
        },
        "required": [
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Slack connector request",
        "type": "object",
      },
      "create_connector_request_slack_webhook": {
        "description": "The Slack connector uses Slack Incoming Webhooks.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack",
            ],
            "example": ".slack",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_webhook",
          },
        },
        "required": [
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Slack connector request",
        "type": "object",
      },
      "create_connector_request_swimlane": {
        "description": "The Swimlane connector uses the Swimlane REST API to create Swimlane records.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_swimlane",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".swimlane",
            ],
            "example": ".swimlane",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_swimlane",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Swimlane connector request",
        "type": "object",
      },
      "create_connector_request_teams": {
        "description": "The Microsoft Teams connector uses Incoming Webhooks.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".teams",
            ],
            "example": ".teams",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_teams",
          },
        },
        "required": [
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Microsoft Teams connector request",
        "type": "object",
      },
      "create_connector_request_tines": {
        "description": "The Tines connector uses Tines Webhook actions to send events via POST request.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_tines",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".tines",
            ],
            "example": ".tines",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_tines",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Tines connector request",
        "type": "object",
      },
      "create_connector_request_webhook": {
        "description": "The Webhook connector uses axios to send a POST or PUT request to a web service.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".webhook",
            ],
            "example": ".webhook",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_webhook",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Webhook connector request",
        "type": "object",
      },
      "create_connector_request_xmatters": {
        "description": "The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_xmatters",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".xmatters",
            ],
            "example": ".xmatters",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_xmatters",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create xMatters connector request",
        "type": "object",
      },
      "features": {
        "description": "The feature that uses the connector. Valid values are \`alerting\`, \`cases\`, \`uptime\`, and \`siem\`.
",
        "enum": [
          "alerting",
          "cases",
          "uptime",
          "siem",
        ],
        "type": "string",
      },
      "is_deprecated": {
        "description": "Indicates whether the connector type is deprecated.",
        "example": false,
        "type": "boolean",
      },
      "is_missing_secrets": {
        "description": "Indicates whether secrets are missing for the connector. Secrets configuration properties vary depending on the connector type.",
        "example": false,
        "type": "boolean",
      },
      "is_preconfigured": {
        "description": "Indicates whether it is a preconfigured connector. If true, the \`config\` and \`is_missing_secrets\` properties are omitted from the response.",
        "example": false,
        "type": "boolean",
      },
      "run_connector_params_documents": {
        "description": "Test an action that indexes a document into Elasticsearch.",
        "properties": {
          "documents": {
            "description": "The documents in JSON format for index connectors.",
            "items": {
              "additionalProperties": true,
              "type": "object",
            },
            "type": "array",
          },
        },
        "required": [
          "documents",
        ],
        "title": "Index connector parameters",
        "type": "object",
      },
      "run_connector_params_level_message": {
        "description": "Test an action that writes an entry to the Kibana server log.",
        "properties": {
          "level": {
            "default": "info",
            "description": "The log level of the message for server log connectors.",
            "enum": [
              "debug",
              "error",
              "fatal",
              "info",
              "trace",
              "warn",
            ],
            "type": "string",
          },
          "message": {
            "description": "The message for server log connectors.",
            "type": "string",
          },
        },
        "required": [
          "message",
        ],
        "title": "Server log connector parameters",
        "type": "object",
      },
      "run_connector_subaction_addevent": {
        "description": "The \`addEvent\` subaction for ServiceNow ITOM connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "addEvent",
            ],
            "type": "string",
          },
          "subActionParams": {
            "description": "The set of configuration properties for the action.",
            "properties": {
              "additional_info": {
                "description": "Additional information about the event.",
                "type": "string",
              },
              "description": {
                "description": "The details about the event.",
                "type": "string",
              },
              "event_class": {
                "description": "A specific instance of the source.",
                "type": "string",
              },
              "message_key": {
                "description": "All actions sharing this key are associated with the same ServiceNow alert. The default value is \`<rule ID>:<alert instance ID>\`.",
                "type": "string",
              },
              "metric_name": {
                "description": "The name of the metric.",
                "type": "string",
              },
              "node": {
                "description": "The host that the event was triggered for.",
                "type": "string",
              },
              "resource": {
                "description": "The name of the resource.",
                "type": "string",
              },
              "severity": {
                "description": "The severity of the event.",
                "type": "string",
              },
              "source": {
                "description": "The name of the event source type.",
                "type": "string",
              },
              "time_of_event": {
                "description": "The time of the event.",
                "type": "string",
              },
              "type": {
                "description": "The type of event.",
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The addEvent subaction",
        "type": "object",
      },
      "run_connector_subaction_closealert": {
        "description": "The \`closeAlert\` subaction for Opsgenie connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "closeAlert",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "alias": {
                "description": "The unique identifier used for alert deduplication in Opsgenie. The alias must match the value used when creating the alert.",
                "type": "string",
              },
              "note": {
                "description": "Additional information for the alert.",
                "type": "string",
              },
              "source": {
                "description": "The display name for the source of the alert.",
                "type": "string",
              },
              "user": {
                "description": "The display name for the owner.",
                "type": "string",
              },
            },
            "required": [
              "alias",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The closeAlert subaction",
        "type": "object",
      },
      "run_connector_subaction_createalert": {
        "description": "The \`createAlert\` subaction for Opsgenie connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "createAlert",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "actions": {
                "description": "The custom actions available to the alert.",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "alias": {
                "description": "The unique identifier used for alert deduplication in Opsgenie.",
                "type": "string",
              },
              "description": {
                "description": "A description that provides detailed information about the alert.",
                "type": "string",
              },
              "details": {
                "additionalProperties": true,
                "description": "The custom properties of the alert.",
                "example": {
                  "key1": "value1",
                  "key2": "value2",
                },
                "type": "object",
              },
              "entity": {
                "description": "The domain of the alert. For example, the application or server name.",
                "type": "string",
              },
              "message": {
                "description": "The alert message.",
                "type": "string",
              },
              "note": {
                "description": "Additional information for the alert.",
                "type": "string",
              },
              "priority": {
                "description": "The priority level for the alert.",
                "enum": [
                  "P1",
                  "P2",
                  "P3",
                  "P4",
                  "P5",
                ],
                "type": "string",
              },
              "responders": {
                "description": "The entities to receive notifications about the alert. If \`type\` is \`user\`, either \`id\` or \`username\` is required. If \`type\` is \`team\`, either \`id\` or \`name\` is required.
",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The identifier for the entity.",
                      "type": "string",
                    },
                    "name": {
                      "description": "The name of the entity.",
                      "type": "string",
                    },
                    "type": {
                      "description": "The type of responders, in this case \`escalation\`.",
                      "enum": [
                        "escalation",
                        "schedule",
                        "team",
                        "user",
                      ],
                      "type": "string",
                    },
                    "username": {
                      "description": "A valid email address for the user.",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "type": "array",
              },
              "source": {
                "description": "The display name for the source of the alert.",
                "type": "string",
              },
              "tags": {
                "description": "The tags for the alert.",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "user": {
                "description": "The display name for the owner.",
                "type": "string",
              },
              "visibleTo": {
                "description": "The teams and users that the alert will be visible to without sending a notification. Only one of \`id\`, \`name\`, or \`username\` is required.",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The identifier for the entity.",
                      "type": "string",
                    },
                    "name": {
                      "description": "The name of the entity.",
                      "type": "string",
                    },
                    "type": {
                      "description": "Valid values are \`team\` and \`user\`.",
                      "enum": [
                        "team",
                        "user",
                      ],
                      "type": "string",
                    },
                    "username": {
                      "description": "The user name. This property is required only when the \`type\` is \`user\`.",
                      "type": "string",
                    },
                  },
                  "required": [
                    "type",
                  ],
                  "type": "object",
                },
                "type": "array",
              },
            },
            "required": [
              "message",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The createAlert subaction",
        "type": "object",
      },
      "run_connector_subaction_fieldsbyissuetype": {
        "description": "The \`fieldsByIssueType\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "fieldsByIssueType",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "id": {
                "description": "The Jira issue type identifier.",
                "example": 10024,
                "type": "string",
              },
            },
            "required": [
              "id",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The fieldsByIssueType subaction",
        "type": "object",
      },
      "run_connector_subaction_getchoices": {
        "description": "The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "getChoices",
            ],
            "type": "string",
          },
          "subActionParams": {
            "description": "The set of configuration properties for the action.",
            "properties": {
              "fields": {
                "description": "An array of fields.",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [
              "fields",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The getChoices subaction",
        "type": "object",
      },
      "run_connector_subaction_getfields": {
        "description": "The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "getFields",
            ],
            "type": "string",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The getFields subaction",
        "type": "object",
      },
      "run_connector_subaction_getincident": {
        "description": "The \`getIncident\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "getIncident",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "externalId": {
                "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.",
                "example": 71778,
                "type": "string",
              },
            },
            "required": [
              "externalId",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The getIncident subaction",
        "type": "object",
      },
      "run_connector_subaction_issue": {
        "description": "The \`issue\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "issue",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "id": {
                "description": "The Jira issue identifier.",
                "example": 71778,
                "type": "string",
              },
            },
            "required": [
              "id",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The issue subaction",
        "type": "object",
      },
      "run_connector_subaction_issues": {
        "description": "The \`issues\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "issues",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "title": {
                "description": "The title of the Jira issue.",
                "type": "string",
              },
            },
            "required": [
              "title",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The issues subaction",
        "type": "object",
      },
      "run_connector_subaction_issuetypes": {
        "description": "The \`issueTypes\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "issueTypes",
            ],
            "type": "string",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The issueTypes subaction",
        "type": "object",
      },
      "run_connector_subaction_pushtoservice": {
        "description": "The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "pushToService",
            ],
            "type": "string",
          },
          "subActionParams": {
            "description": "The set of configuration properties for the action.",
            "properties": {
              "comments": {
                "description": "Additional information that is sent to Jira, ServiceNow ITSM, ServiceNow SecOps, or Swimlane.",
                "items": {
                  "properties": {
                    "comment": {
                      "description": "A comment related to the incident. For example, describe how to troubleshoot the issue.",
                      "type": "string",
                    },
                    "commentId": {
                      "description": "A unique identifier for the comment.",
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
                "type": "array",
              },
              "incident": {
                "description": "Information necessary to create or update a Jira, ServiceNow ITSM, ServiveNow SecOps, or Swimlane incident.",
                "properties": {
                  "alertId": {
                    "description": "The alert identifier for Swimlane connectors.",
                    "type": "string",
                  },
                  "caseId": {
                    "description": "The case identifier for the incident for Swimlane connectors.",
                    "type": "string",
                  },
                  "caseName": {
                    "description": "The case name for the incident for Swimlane connectors.",
                    "type": "string",
                  },
                  "category": {
                    "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "correlation_display": {
                    "description": "A descriptive label of the alert for correlation purposes for ServiceNow ITSM and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "correlation_id": {
                    "description": "The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as \`{{ruleID}}:{{alert ID}}\` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of \`{{ruleID}}:{{alert ID}}\` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
",
                    "type": "string",
                  },
                  "description": {
                    "description": "The description of the incident for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
                    "type": "string",
                  },
                  "dest_ip": {
                    "description": "A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "externalId": {
                    "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
",
                    "type": "string",
                  },
                  "impact": {
                    "description": "The impact of the incident for ServiceNow ITSM connectors.",
                    "type": "string",
                  },
                  "issueType": {
                    "description": "The type of incident for Jira connectors. For example, 10006. To obtain the list of valid values, set \`subAction\` to \`issueTypes\`.",
                    "type": "integer",
                  },
                  "labels": {
                    "description": "The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "malware_hash": {
                    "description": "A list of malware hashes related to the security incident for ServiceNow SecOps connectors. The hashes are added as observables to the security incident.",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "malware_url": {
                    "description": "A list of malware URLs related to the security incident for ServiceNow SecOps connectors. The URLs are added as observables to the security incident.",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                    "type": "string",
                  },
                  "parent": {
                    "description": "The ID or key of the parent issue for Jira connectors. Applies only to \`Sub-task\` types of issues.",
                    "type": "string",
                  },
                  "priority": {
                    "description": "The priority of the incident in Jira and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "ruleName": {
                    "description": "The rule name for Swimlane connectors.",
                    "type": "string",
                  },
                  "severity": {
                    "description": "The severity of the incident for ServiceNow ITSM and Swimlane connectors.",
                    "type": "string",
                  },
                  "short_description": {
                    "description": "A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
",
                    "type": "string",
                  },
                  "source_ip": {
                    "description": "A list of source IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "subcategory": {
                    "description": "The subcategory of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "summary": {
                    "description": "A summary of the incident for Jira connectors.",
                    "type": "string",
                  },
                  "title": {
                    "description": "A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
",
                    "type": "string",
                  },
                  "urgency": {
                    "description": "The urgency of the incident for ServiceNow ITSM connectors.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The pushToService subaction",
        "type": "object",
      },
      "secrets_properties_cases_webhook": {
        "properties": {
          "password": {
            "description": "The password for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
            "type": "string",
          },
          "user": {
            "description": "The username for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
            "type": "string",
          },
        },
        "title": "Connector secrets properties for Webhook - Case Management connector",
        "type": "object",
      },
      "secrets_properties_email": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.email\`.",
        "title": "Connector secrets properties for an email connector",
        "type": "object",
      },
      "secrets_properties_jira": {
        "description": "Defines secrets for connectors when type is \`.jira\`.",
        "properties": {
          "apiToken": {
            "description": "The Jira API authentication token for HTTP basic authentication.",
            "type": "string",
          },
          "email": {
            "description": "The account email for HTTP Basic authentication.",
            "type": "string",
          },
        },
        "required": [
          "apiToken",
          "email",
        ],
        "title": "Connector secrets properties for a Jira connector",
        "type": "object",
      },
      "secrets_properties_opsgenie": {
        "description": "Defines secrets for connectors when type is \`.opsgenie\`.",
        "properties": {
          "apiKey": {
            "description": "The Opsgenie API authentication key for HTTP Basic authentication.",
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "title": "Connector secrets properties for an Opsgenie connector",
        "type": "object",
      },
      "secrets_properties_pagerduty": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.pagerduty\`.",
        "title": "Connector secrets properties for a PagerDuty connector",
        "type": "object",
      },
      "secrets_properties_resilient": {
        "description": "Defines secrets for connectors when type is \`.resilient\`.",
        "properties": {
          "apiKeyId": {
            "description": "The authentication key ID for HTTP Basic authentication.",
            "type": "string",
          },
          "apiKeySecret": {
            "description": "The authentication key secret for HTTP Basic authentication.",
            "type": "string",
          },
        },
        "required": [
          "apiKeyId",
          "apiKeySecret",
        ],
        "title": "Connector secrets properties for IBM Resilient connector",
        "type": "object",
      },
      "secrets_properties_servicenow": {
        "description": "Defines secrets for connectors when type is \`.servicenow\`, \`.servicenow-sir\`, or \`.servicenow-itom\`.",
        "properties": {
          "clientSecret": {
            "description": "The client secret assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.",
            "type": "string",
          },
          "password": {
            "description": "The password for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
            "type": "string",
          },
          "privateKey": {
            "description": "The RSA private key that you created for use in ServiceNow. This property is required when \`isOAuth\` is \`true\`.",
            "type": "string",
          },
          "privateKeyPassword": {
            "description": "The password for the RSA private key. This property is required when \`isOAuth\` is \`true\` and you set a password on your private key.",
            "type": "string",
          },
          "username": {
            "description": "The username for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
            "type": "string",
          },
        },
        "title": "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors",
        "type": "object",
      },
      "secrets_properties_slack_api": {
        "description": "Defines secrets for connectors when type is \`.slack\`.",
        "properties": {
          "token": {
            "description": "Slack bot user OAuth token.",
            "type": "string",
          },
        },
        "required": [
          "token",
        ],
        "title": "Connector secrets properties for a Web API Slack connector",
        "type": "object",
      },
      "secrets_properties_slack_webhook": {
        "description": "Defines secrets for connectors when type is \`.slack\`.",
        "properties": {
          "webhookUrl": {
            "description": "Slack webhook url.",
            "type": "string",
          },
        },
        "required": [
          "webhookUrl",
        ],
        "title": "Connector secrets properties for a Webhook Slack connector",
        "type": "object",
      },
      "secrets_properties_swimlane": {
        "description": "Defines secrets for connectors when type is \`.swimlane\`.",
        "properties": {
          "apiToken": {
            "description": "Swimlane API authentication token.",
            "type": "string",
          },
        },
        "title": "Connector secrets properties for a Swimlane connector",
        "type": "object",
      },
      "secrets_properties_teams": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.teams\`.",
        "title": "Connector secrets properties for a Microsoft Teams connector",
        "type": "object",
      },
      "secrets_properties_tines": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.tines\`.",
        "title": "Connector secrets properties for a Tines connector",
        "type": "object",
      },
      "secrets_properties_webhook": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.webhook\`.",
        "title": "Connector secrets properties for a Webhook connector",
        "type": "object",
      },
      "secrets_properties_xmatters": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.xmatters\`.",
        "title": "Connector secrets properties for an xMatters connector",
        "type": "object",
      },
      "update_connector_request_cases_webhook": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_cases_webhook",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_cases_webhook",
          },
        },
        "required": [
          "config",
          "name",
        ],
        "title": "Update Webhook - Case Managment connector request",
        "type": "object",
      },
      "update_connector_request_index": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_index",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "name",
        ],
        "title": "Update index connector request",
        "type": "object",
      },
      "update_connector_request_jira": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_jira",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_jira",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update Jira connector request",
        "type": "object",
      },
      "update_connector_request_opsgenie": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_opsgenie",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_opsgenie",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update Opsgenie connector request",
        "type": "object",
      },
      "update_connector_request_resilient": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_resilient",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_resilient",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update IBM Resilient connector request",
        "type": "object",
      },
      "update_connector_request_serverlog": {
        "properties": {
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "title": "Update server log connector request",
        "type": "object",
      },
      "update_connector_request_servicenow": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update ServiceNow ITSM connector or ServiceNow SecOps request",
        "type": "object",
      },
      "update_connector_request_servicenow_itom": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow_itom",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow ITOM connector request",
        "type": "object",
      },
      "update_connector_request_slack_api": {
        "properties": {
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_api",
            "description": "The secrets object containing the necessary fields for authentication.",
            "type": "object",
          },
        },
        "required": [
          "name",
          "secrets",
        ],
        "title": "Update Slack connector request",
        "type": "object",
      },
      "update_connector_request_slack_webhook": {
        "properties": {
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_webhook",
            "description": "The secrets object containing the necessary fields for authentication.",
            "type": "object",
          },
        },
        "required": [
          "name",
          "secrets",
        ],
        "title": "Update Slack connector request",
        "type": "object",
      },
      "update_connector_request_swimlane": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_swimlane",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_swimlane",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update Swimlane connector request",
        "type": "object",
      },
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "in": "header",
        "name": "ApiKey",
        "type": "apiKey",
      },
      "basicAuth": {
        "scheme": "basic",
        "type": "http",
      },
    },
  },
  "info": {
    "contact": {
      "name": "Connectors Team",
    },
    "description": "OpenAPI schema for Connectors endpoints",
    "license": {
      "name": "Elastic License 2.0",
      "url": "https://www.elastic.co/licensing/elastic-license",
    },
    "title": "Connectors",
    "version": "0.1",
  },
  "openapi": "3.0.1",
  "paths": {
    "/s/{spaceId}/api/actions": {
      "get": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the get all connectors API instead.",
        "operationId": "legacyGetConnectors",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/action_response_properties",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves all connectors.",
        "tags": [
          "connectors",
        ],
      },
      "post": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the create connector API instead.",
        "operationId": "legacyCreateConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "actionTypeId": {
                    "description": "The connector type identifier.",
                    "type": "string",
                  },
                  "config": {
                    "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                    "type": "object",
                  },
                  "name": {
                    "description": "The display name for the connector.",
                    "type": "string",
                  },
                  "secrets": {
                    "description": "The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
",
                    "type": "object",
                  },
                },
                "title": "Legacy create connector request properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200_actions",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Creates a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/action/{actionId}": {
      "delete": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
",
        "operationId": "legacyDeleteConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Deletes a connector.",
        "tags": [
          "connectors",
        ],
      },
      "get": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the get connector API instead.",
        "operationId": "legacyGetConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200_actions",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a connector by ID.",
        "tags": [
          "connectors",
        ],
      },
      "put": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the update connector API instead.",
        "operationId": "legacyUpdateConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "properties": {
                  "config": {
                    "description": "The new connector configuration. Configuration properties vary depending on the connector type.",
                    "type": "object",
                  },
                  "name": {
                    "description": "The new name for the connector.",
                    "type": "string",
                  },
                  "secrets": {
                    "description": "The updated secrets configuration for the connector. Secrets properties vary depending on the connector type.",
                    "type": "object",
                  },
                },
                "title": "Legacy update connector request body properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200_actions",
          },
          "404": {
            "$ref": "#/components/responses/404",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Updates the attributes for a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/action/{actionId}/_execute": {
      "post": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the run connector API instead.",
        "operationId": "legacyRunConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "properties": {
                  "params": {
                    "description": "The parameters of the connector. Parameter properties vary depending on the connector type.",
                    "type": "object",
                  },
                },
                "required": [
                  "params",
                ],
                "title": "Legacy run connector request body properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "actionId": {
                      "type": "string",
                    },
                    "data": {
                      "oneOf": [
                        {
                          "additionalProperties": true,
                          "description": "Information returned from the action.",
                          "type": "object",
                        },
                        {
                          "description": "An array of information returned from the action.",
                          "items": {
                            "type": "object",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "status": {
                      "description": "The status of the action.",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Runs a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector": {
      "post": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "createConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createIndexConnectorRequest": {
                  "$ref": "#/components/examples/create_index_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "discriminator": {
                  "propertyName": "connector_type_id",
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_email",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_index",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_jira",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_opsgenie",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_pagerduty",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_resilient",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_serverlog",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_api",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_swimlane",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_teams",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_tines",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_xmatters",
                  },
                ],
                "title": "Create connector request body properties",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "createIndexConnectorResponse": {
                    "$ref": "#/components/examples/create_index_connector_response",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Creates a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector/{connectorId}": {
      "delete": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
",
        "operationId": "deleteConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Deletes a connector.",
        "tags": [
          "connectors",
        ],
      },
      "get": {
        "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "getConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getConnectorResponse": {
                    "$ref": "#/components/examples/get_connector_response",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a connector by ID.",
        "tags": [
          "connectors",
        ],
      },
      "post": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "createConnectorId",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
          {
            "description": "A UUID v1 or v4 identifier for the connector. If you omit this parameter, an identifier is randomly generated.",
            "in": "path",
            "name": "connectorId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createIndexConnectorRequest": {
                  "$ref": "#/components/examples/create_index_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "discriminator": {
                  "propertyName": "connector_type_id",
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_email",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_index",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_jira",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_opsgenie",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_pagerduty",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_resilient",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_serverlog",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_api",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_swimlane",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_teams",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_tines",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_xmatters",
                  },
                ],
                "title": "Create connector request body properties",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "createIndexConnectorResponse": {
                    "$ref": "#/components/examples/create_index_connector_response",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Creates a connector.",
        "tags": [
          "connectors",
        ],
      },
      "put": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "updateConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "updateIndexConnectorRequest": {
                  "$ref": "#/components/examples/update_index_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/update_connector_request_cases_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_index",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_jira",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_opsgenie",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_resilient",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_serverlog",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_servicenow",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_servicenow_itom",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_slack_api",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_slack_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_swimlane",
                  },
                ],
                "title": "Update connector request body properties",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Bad Request",
                      "type": "string",
                    },
                    "message": {
                      "example": "error validating action type config: [index]: expected value of type [string] but got [undefined]",
                      "type": "string",
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Indicates a bad request.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
          "404": {
            "$ref": "#/components/responses/404",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Updates the attributes for a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector/{connectorId}/_execute": {
      "post": {
        "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\` indices privileges.
",
        "operationId": "runConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "runIndexConnectorRequest": {
                  "$ref": "#/components/examples/run_index_connector_request",
                },
                "runJiraConnectorRequest": {
                  "$ref": "#/components/examples/run_jira_connector_request",
                },
                "runServerLogConnectorRequest": {
                  "$ref": "#/components/examples/run_server_log_connector_request",
                },
                "runServiceNowITOMConnectorRequest": {
                  "$ref": "#/components/examples/run_servicenow_itom_connector_request",
                },
                "runSwimlaneConnectorRequest": {
                  "$ref": "#/components/examples/run_swimlane_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "properties": {
                  "params": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/run_connector_params_documents",
                      },
                      {
                        "$ref": "#/components/schemas/run_connector_params_level_message",
                      },
                      {
                        "description": "Test an action that involves a subaction.",
                        "discriminator": {
                          "propertyName": "subAction",
                        },
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_addevent",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_closealert",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_createalert",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_fieldsbyissuetype",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_getchoices",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_getfields",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_getincident",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_issue",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_issues",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_issuetypes",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_pushtoservice",
                          },
                        ],
                        "title": "Subaction parameters",
                      },
                    ],
                  },
                },
                "required": [
                  "params",
                ],
                "title": "Run connector request body properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "runIndexConnectorResponse": {
                    "$ref": "#/components/examples/run_index_connector_response",
                  },
                  "runJiraConnectorResponse": {
                    "$ref": "#/components/examples/run_jira_connector_response",
                  },
                  "runServerLogConnectorResponse": {
                    "$ref": "#/components/examples/run_server_log_connector_response",
                  },
                  "runServiceNowITOMConnectorResponse": {
                    "$ref": "#/components/examples/run_servicenow_itom_connector_response",
                  },
                  "runSwimlaneConnectorResponse": {
                    "$ref": "#/components/examples/run_swimlane_connector_response",
                  },
                },
                "schema": {
                  "properties": {
                    "connector_id": {
                      "description": "The identifier for the connector.",
                      "type": "string",
                    },
                    "data": {
                      "oneOf": [
                        {
                          "additionalProperties": true,
                          "description": "Information returned from the action.",
                          "type": "object",
                        },
                        {
                          "description": "An array of information returned from the action.",
                          "items": {
                            "type": "object",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "status": {
                      "description": "The status of the action.",
                      "enum": [
                        "error",
                        "ok",
                      ],
                      "type": "string",
                    },
                  },
                  "required": [
                    "connector_id",
                    "status",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Runs a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector_types": {
      "get": {
        "description": "You do not need any Kibana feature privileges to run this API.
",
        "operationId": "getConnectorTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
          {
            "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
            "in": "query",
            "name": "feature_id",
            "schema": {
              "$ref": "#/components/schemas/features",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getConnectorTypesResponse": {
                    "$ref": "#/components/examples/get_connector_types_response",
                  },
                },
                "schema": {
                  "description": "The properties vary for each connector type.",
                  "items": {
                    "properties": {
                      "enabled": {
                        "description": "Indicates whether the connector type is enabled in Kibana.",
                        "example": true,
                        "type": "boolean",
                      },
                      "enabled_in_config": {
                        "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                        "example": true,
                        "type": "boolean",
                      },
                      "enabled_in_license": {
                        "description": "Indicates whether the connector is enabled in the license.",
                        "example": true,
                        "type": "boolean",
                      },
                      "id": {
                        "$ref": "#/components/schemas/connector_types",
                      },
                      "minimum_license_required": {
                        "description": "The license that is required to use the connector type.",
                        "example": "basic",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the connector type.",
                        "example": "Index",
                        "type": "string",
                      },
                      "supported_feature_ids": {
                        "description": "The Kibana features that are supported by the connector type.",
                        "example": [
                          "alerting",
                          "uptime",
                          "siem",
                        ],
                        "items": {
                          "$ref": "#/components/schemas/features",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                  "title": "Get connector types response body properties",
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a list of all connector types.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connectors": {
      "get": {
        "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "getConnectors",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getConnectorsResponse": {
                    "$ref": "#/components/examples/get_connectors_response",
                  },
                },
                "schema": {
                  "items": {
                    "description": "The properties vary for each connector type.",
                    "properties": {
                      "config": {
                        "additionalProperties": true,
                        "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                        "nullable": true,
                        "type": "object",
                      },
                      "connector_type_id": {
                        "$ref": "#/components/schemas/connector_types",
                      },
                      "id": {
                        "description": "The identifier for the connector.",
                        "example": "b0766e10-d190-11ec-b04c-776c77d14fca",
                        "type": "string",
                      },
                      "is_deprecated": {
                        "$ref": "#/components/schemas/is_deprecated",
                      },
                      "is_missing_secrets": {
                        "$ref": "#/components/schemas/is_missing_secrets",
                      },
                      "is_preconfigured": {
                        "$ref": "#/components/schemas/is_preconfigured",
                      },
                      "name": {
                        "description": "The display name for the connector.",
                        "example": "my-connector",
                        "type": "string",
                      },
                      "referenced_by_count": {
                        "default": 0,
                        "description": "Indicates the number of saved objects that reference the connector. If \`is_preconfigured\` is true, this value is not calculated.",
                        "example": 2,
                        "type": "integer",
                      },
                    },
                    "required": [
                      "connector_type_id",
                      "id",
                      "is_deprecated",
                      "is_preconfigured",
                      "name",
                      "referenced_by_count",
                    ],
                    "title": "Get connectors response body properties",
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves all connectors.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/list_action_types": {
      "get": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the get all connector types API instead.",
        "operationId": "legacyGetConnectorTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The properties vary for each connector type.",
                  "items": {
                    "properties": {
                      "enabled": {
                        "description": "Indicates whether the connector type is enabled in Kibana.",
                        "type": "boolean",
                      },
                      "enabledInConfig": {
                        "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                        "type": "boolean",
                      },
                      "enabledInLicense": {
                        "description": "Indicates whether the connector is enabled in the license.",
                        "example": true,
                        "type": "boolean",
                      },
                      "id": {
                        "description": "The unique identifier for the connector type.",
                        "type": "string",
                      },
                      "minimumLicenseRequired": {
                        "description": "The license that is required to use the connector type.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the connector type.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "title": "Legacy get connector types response body properties",
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a list of all connector types.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
  },
  "security": [
    {
      "basicAuth": [],
    },
    {
      "apiKeyAuth": [],
    },
  ],
  "servers": [
    {
      "description": "local",
      "url": "http://localhost:5601",
    },
  ],
  "tags": [
    {
      "description": "Connector APIs enable you to create and manage connectors.",
      "name": "connectors",
    },
  ],
}
`;

exports[`generate spec > generates spec simple 1`] = `
{
  "components": {
    "schemas": {
      "AnotherSchema": {
        "properties": {
          "address": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "type": "object",
      },
      "NewSchema": {
        "properties": {
          "age": {
            "type": "integer",
          },
          "email": {
            "type": "string",
          },
        },
        "required": [
          "email",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "Your API",
    "version": "1.0.0",
  },
  "openapi": "3.0.1",
  "paths": {
    "/example": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NewSchema",
                  },
                  {
                    "$ref": "#/components/schemas/AnotherSchema",
                  },
                ],
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "description": "OK",
          },
        },
        "summary": "Create a new example",
      },
    },
  },
}
`;

exports[`generates complex spec 1`] = `
{
  "components": {
    "examples": {
      "create_index_connector_request": {
        "summary": "Create an index connector.",
        "value": {
          "config": {
            "index": "test-index",
          },
          "connector_type_id": ".index",
          "name": "my-connector",
        },
      },
      "create_index_connector_response": {
        "summary": "A new index connector.",
        "value": {
          "config": {
            "executionTimeField": null,
            "index": "test-index",
            "refresh": false,
          },
          "connector_type_id": ".index",
          "id": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
          "is_deprecated": false,
          "is_missing_secrets": false,
          "is_preconfigured": false,
          "name": "my-connector",
        },
      },
      "get_connector_response": {
        "summary": "A list of connector types",
        "value": {
          "config": {},
          "connector_type_id": ".server-log",
          "id": "df770e30-8b8b-11ed-a780-3b746c987a81",
          "is_deprecated": false,
          "is_missing_secrets": false,
          "is_preconfigured": false,
          "name": "my_server_log_connector",
        },
      },
      "get_connector_types_response": {
        "summary": "A list of connector types",
        "value": [
          {
            "enabled": true,
            "enabled_in_config": true,
            "enabled_in_license": true,
            "id": ".swimlane",
            "minimum_license_required": "gold",
            "name": "Swimlane",
            "supported_feature_ids": [
              "alerting",
              "cases",
              "siem",
            ],
          },
          {
            "enabled": true,
            "enabled_in_config": true,
            "enabled_in_license": true,
            "id": ".index",
            "minimum_license_required": "basic",
            "name": "Index",
            "supported_feature_ids": [
              "alerting",
              "uptime",
              "siem",
            ],
          },
          {
            "enabled": true,
            "enabled_in_config": true,
            "enabled_in_license": true,
            "id": ".server-log",
            "minimum_license_required": "basic",
            "name": "Server log",
            "supported_feature_ids": [
              "alerting",
              "uptime",
            ],
          },
        ],
      },
      "get_connectors_response": {
        "summary": "A list of connectors",
        "value": [
          {
            "connector_type_id": ".email",
            "id": "preconfigured-email-connector",
            "is_deprecated": false,
            "is_preconfigured": true,
            "name": "my-preconfigured-email-notification",
            "referenced_by_count": 0,
          },
          {
            "config": {
              "executionTimeField": null,
              "index": "test-index",
              "refresh": false,
            },
            "connector_type_id": ".index",
            "id": "e07d0c80-8b8b-11ed-a780-3b746c987a81",
            "is_deprecated": false,
            "is_missing_secrets": false,
            "is_preconfigured": false,
            "name": "my-index-connector",
            "referenced_by_count": 2,
          },
        ],
      },
      "run_index_connector_request": {
        "summary": "Run an index connector.",
        "value": {
          "params": {
            "documents": [
              {
                "id": "my_doc_id",
                "message": "hello, world",
                "name": "my_doc_name",
              },
            ],
          },
        },
      },
      "run_index_connector_response": {
        "summary": "Response from running an index connector.",
        "value": {
          "connector_id": "fd38c600-96a5-11ed-bb79-353b74189cba",
          "data": {
            "errors": false,
            "items": [
              {
                "create": {
                  "_id": "4JtvwYUBrcyxt2NnfW3y",
                  "_index": "my-index",
                  "_primary_term": 1,
                  "_seq_no": 0,
                  "_shards": {
                    "failed": 0,
                    "successful": 1,
                    "total": 2,
                  },
                  "_version": 1,
                  "result": "created",
                  "status": 201,
                },
              },
            ],
            "took": 135,
          },
          "status": "ok",
        },
      },
      "run_jira_connector_request": {
        "summary": "Run a Jira connector to retrieve the list of issue types.",
        "value": {
          "params": {
            "subAction": "issueTypes",
          },
        },
      },
      "run_jira_connector_response": {
        "summary": "Response from retrieving the list of issue types for a Jira connector.",
        "value": {
          "connector_id": "b3aad810-edbe-11ec-82d1-11348ecbf4a6",
          "data": [
            {
              "id": 10024,
              "name": "Improvement",
            },
            {
              "id": 10006,
              "name": "Task",
            },
            {
              "id": 10007,
              "name": "Sub-task",
            },
            {
              "id": 10025,
              "name": "New Feature",
            },
            {
              "id": 10023,
              "name": "Bug",
            },
            {
              "id": 10000,
              "name": "Epic",
            },
          ],
          "status": "ok",
        },
      },
      "run_server_log_connector_request": {
        "summary": "Run a server log connector.",
        "value": {
          "params": {
            "level": "warn",
            "message": "Test warning message.",
          },
        },
      },
      "run_server_log_connector_response": {
        "summary": "Response from running a server log connector.",
        "value": {
          "connector_id": "7fc7b9a0-ecc9-11ec-8736-e7d63118c907",
          "status": "ok",
        },
      },
      "run_servicenow_itom_connector_request": {
        "summary": "Run a ServiceNow ITOM connector to retrieve the list of choices.",
        "value": {
          "params": {
            "subAction": "getChoices",
            "subActionParams": {
              "fields": [
                "severity",
                "urgency",
              ],
            },
          },
        },
      },
      "run_servicenow_itom_connector_response": {
        "summary": "Response from retrieving the list of choices for a ServiceNow ITOM connector.",
        "value": {
          "connector_id": "9d9be270-2fd2-11ed-b0e0-87533c532698",
          "data": [
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Critical",
              "value": 1,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Major",
              "value": 2,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Minor",
              "value": 3,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Warning",
              "value": 4,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "OK",
              "value": 5,
            },
            {
              "dependent_value": "",
              "element": "severity",
              "label": "Clear",
              "value": 0,
            },
            {
              "dependent_value": "",
              "element": "urgency",
              "label": "1 - High",
              "value": 1,
            },
            {
              "dependent_value": "",
              "element": "urgency",
              "label": "2 - Medium",
              "value": 2,
            },
            {
              "dependent_value": "",
              "element": "urgency",
              "label": "3 - Low",
              "value": 3,
            },
          ],
          "status": "ok",
        },
      },
      "run_swimlane_connector_request": {
        "summary": "Run a Swimlane connector to create an incident.",
        "value": {
          "params": {
            "subAction": "pushToService",
            "subActionParams": {
              "comments": [
                {
                  "comment": "A comment about the incident.",
                  "commentId": 1,
                },
              ],
              "incident": {
                "caseId": "1000",
                "caseName": "Case name",
                "description": "Description of the incident.",
              },
            },
          },
        },
      },
      "run_swimlane_connector_response": {
        "summary": "Response from creating a Swimlane incident.",
        "value": {
          "connector_id": "a4746470-2f94-11ed-b0e0-87533c532698",
          "data": {
            "comments": [
              {
                "commentId": 1,
                "pushedDate": "2022-09-08T16:52:27.865Z",
              },
            ],
            "id": "aKPmBHWzmdRQtx6Mx",
            "pushedDate": "2022-09-08T16:52:27.866Z",
            "title": "TEST-457",
            "url": "https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx",
          },
          "status": "ok",
        },
      },
      "update_index_connector_request": {
        "summary": "Update an index connector.",
        "value": {
          "config": {
            "index": "updated-index",
          },
          "name": "updated-connector",
        },
      },
    },
    "parameters": {
      "action_id": {
        "description": "An identifier for the action.",
        "in": "path",
        "name": "actionId",
        "required": true,
        "schema": {
          "example": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
          "type": "string",
        },
      },
      "connector_id": {
        "description": "An identifier for the connector.",
        "in": "path",
        "name": "connectorId",
        "required": true,
        "schema": {
          "example": "df770e30-8b8b-11ed-a780-3b746c987a81",
          "type": "string",
        },
      },
      "kbn_xsrf": {
        "description": "Cross-site request forgery protection",
        "in": "header",
        "name": "kbn-xsrf",
        "required": true,
        "schema": {
          "type": "string",
        },
      },
      "space_id": {
        "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
        "in": "path",
        "name": "spaceId",
        "required": true,
        "schema": {
          "example": "default",
          "type": "string",
        },
      },
    },
    "responses": {
      "200_actions": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/action_response_properties",
            },
          },
        },
        "description": "Indicates a successful call.",
      },
      "401": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "enum": [
                    "Unauthorized",
                  ],
                  "example": "Unauthorized",
                  "type": "string",
                },
                "message": {
                  "type": "string",
                },
                "statusCode": {
                  "enum": [
                    401,
                  ],
                  "example": 401,
                  "type": "integer",
                },
              },
              "title": "Unauthorized response",
              "type": "object",
            },
          },
        },
        "description": "Authorization information is missing or invalid.",
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "error": {
                  "enum": [
                    "Not Found",
                  ],
                  "example": "Not Found",
                  "type": "string",
                },
                "message": {
                  "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                  "type": "string",
                },
                "statusCode": {
                  "enum": [
                    404,
                  ],
                  "example": 404,
                  "type": "integer",
                },
              },
              "title": "Not found response",
              "type": "object",
            },
          },
        },
        "description": "Object is not found.",
      },
    },
    "schemas": {
      "action_response_properties": {
        "description": "The properties vary depending on the action type.",
        "properties": {
          "actionTypeId": {
            "type": "string",
          },
          "config": {
            "type": "object",
          },
          "id": {
            "type": "string",
          },
          "isDeprecated": {
            "description": "Indicates whether the action type is deprecated.",
            "type": "boolean",
          },
          "isMissingSecrets": {
            "description": "Indicates whether secrets are missing for the action.",
            "type": "boolean",
          },
          "isPreconfigured": {
            "description": "Indicates whether it is a preconfigured action.",
            "type": "boolean",
          },
          "name": {
            "type": "string",
          },
        },
        "title": "Action response properties",
        "type": "object",
      },
      "config_properties_cases_webhook": {
        "description": "Defines properties for connectors when type is \`.cases-webhook\`.",
        "properties": {
          "createCommentJson": {
            "description": "A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is \`case.comment\`. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
            "example": {
              "body": {
                "[object Object]": null,
              },
            },
            "type": "string",
          },
          "createCommentMethod": {
            "default": "put",
            "description": "The REST API HTTP request method to create a case comment in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
            "enum": [
              "patch",
              "post",
              "put",
            ],
            "type": "string",
          },
          "createCommentUrl": {
            "description": "The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts setting\`, add the hostname to the allowed hosts.
",
            "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment",
            "type": "string",
          },
          "createIncidentJson": {
            "description": "A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
            "example": {
              "fields": {
                "description": {
                  "[object Object]": null,
                },
                "labels": {
                  "[object Object]": null,
                },
                "summary": {
                  "[object Object]": null,
                },
              },
            },
            "type": "string",
          },
          "createIncidentMethod": {
            "default": "post",
            "description": "The REST API HTTP request method to create a case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
            "enum": [
              "patch",
              "post",
              "put",
            ],
            "type": "string",
          },
          "createIncidentResponseKey": {
            "description": "The JSON key in the create case response that contains the external case ID.",
            "type": "string",
          },
          "createIncidentUrl": {
            "description": "The REST API URL to create a case in the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
            "type": "string",
          },
          "getIncidentResponseExternalTitleKey": {
            "description": "The JSON key in get case response that contains the external case title.",
            "type": "string",
          },
          "getIncidentUrl": {
            "description": "The REST API URL to get the case by ID from the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
            "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}",
            "type": "string",
          },
          "hasAuth": {
            "default": true,
            "description": "If true, a username and password for login type authentication must be provided.",
            "type": "boolean",
          },
          "headers": {
            "description": "A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
",
            "type": "string",
          },
          "updateIncidentJson": {
            "description": "The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
            "example": {
              "fields": {
                "description": {
                  "[object Object]": null,
                },
                "labels": {
                  "[object Object]": null,
                },
                "summary": {
                  "[object Object]": null,
                },
              },
            },
            "type": "string",
          },
          "updateIncidentMethod": {
            "default": "put",
            "description": "The REST API HTTP request method to update the case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
            "enum": [
              "patch",
              "post",
              "put",
            ],
            "type": "string",
          },
          "updateIncidentUrl": {
            "description": "The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
            "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}",
            "type": "string",
          },
          "viewIncidentUrl": {
            "description": "The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
",
            "example": "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}",
            "type": "string",
          },
        },
        "required": [
          "createIncidentJson",
          "createIncidentResponseKey",
          "createIncidentUrl",
          "getIncidentResponseExternalTitleKey",
          "getIncidentUrl",
          "updateIncidentJson",
          "updateIncidentUrl",
          "viewIncidentUrl",
        ],
        "title": "Connector request properties for Webhook - Case Management connector",
        "type": "object",
      },
      "config_properties_email": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.email\`.",
        "title": "Connector request properties for an email connector",
        "type": "object",
      },
      "config_properties_index": {
        "description": "Defines properties for connectors when type is \`.index\`.",
        "properties": {
          "executionTimeField": {
            "default": null,
            "description": "Specifies a field that will contain the time the alert condition was detected.",
            "nullable": true,
            "type": "string",
          },
          "index": {
            "description": "The Elasticsearch index to be written to.",
            "type": "string",
          },
          "refresh": {
            "default": false,
            "description": "The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
",
            "type": "boolean",
          },
        },
        "required": [
          "index",
        ],
        "title": "Connector request properties for an index connector",
        "type": "object",
      },
      "config_properties_jira": {
        "description": "Defines properties for connectors when type is \`.jira\`.",
        "properties": {
          "apiUrl": {
            "description": "The Jira instance URL.",
            "type": "string",
          },
          "projectKey": {
            "description": "The Jira project key.",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
          "projectKey",
        ],
        "title": "Connector request properties for a Jira connector",
        "type": "object",
      },
      "config_properties_opsgenie": {
        "description": "Defines properties for connectors when type is \`.opsgenie\`.",
        "properties": {
          "apiUrl": {
            "description": "The Opsgenie URL. For example, \`https://api.opsgenie.com\` or \`https://api.eu.opsgenie.com\`. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
        ],
        "title": "Connector request properties for an Opsgenie connector",
        "type": "object",
      },
      "config_properties_pagerduty": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.pagerduty\`.",
        "title": "Connector request properties for a PagerDuty connector",
        "type": "object",
      },
      "config_properties_resilient": {
        "description": "Defines properties for connectors when type is \`.resilient\`.",
        "properties": {
          "apiUrl": {
            "description": "The IBM Resilient instance URL.",
            "type": "string",
          },
          "orgId": {
            "description": "The IBM Resilient organization ID.",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
          "orgId",
        ],
        "title": "Connector request properties for a IBM Resilient connector",
        "type": "object",
      },
      "config_properties_servicenow": {
        "description": "Defines properties for connectors when type is \`.servicenow\`.",
        "properties": {
          "apiUrl": {
            "description": "The ServiceNow instance URL.",
            "type": "string",
          },
          "clientId": {
            "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "isOAuth": {
            "default": false,
            "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
            "type": "boolean",
          },
          "jwtKeyId": {
            "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "userIdentifierValue": {
            "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "usesTableApi": {
            "default": true,
            "description": "Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to \`false\`, the Elastic application should be installed in ServiceNow.
",
            "type": "boolean",
          },
        },
        "required": [
          "apiUrl",
        ],
        "title": "Connector request properties for a ServiceNow ITSM connector",
        "type": "object",
      },
      "config_properties_servicenow_itom": {
        "description": "Defines properties for connectors when type is \`.servicenow\`.",
        "properties": {
          "apiUrl": {
            "description": "The ServiceNow instance URL.",
            "type": "string",
          },
          "clientId": {
            "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "isOAuth": {
            "default": false,
            "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
            "type": "boolean",
          },
          "jwtKeyId": {
            "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
          "userIdentifierValue": {
            "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
            "type": "string",
          },
        },
        "required": [
          "apiUrl",
        ],
        "title": "Connector request properties for a ServiceNow ITSM connector",
        "type": "object",
      },
      "config_properties_swimlane": {
        "description": "Defines properties for connectors when type is \`.swimlane\`.",
        "properties": {
          "apiUrl": {
            "description": "The Swimlane instance URL.",
            "type": "string",
          },
          "appId": {
            "description": "The Swimlane application ID.",
            "type": "string",
          },
          "connectorType": {
            "description": "The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.",
            "enum": [
              "all",
              "alerts",
              "cases",
            ],
            "type": "string",
          },
          "mappings": {
            "description": "The field mapping.",
            "properties": {
              "alertIdConfig": {
                "description": "Mapping for the alert ID.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Alert identifier mapping",
                "type": "object",
              },
              "caseIdConfig": {
                "description": "Mapping for the case ID.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case identifier mapping",
                "type": "object",
              },
              "caseNameConfig": {
                "description": "Mapping for the case name.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case name mapping",
                "type": "object",
              },
              "commentsConfig": {
                "description": "Mapping for the case comments.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case comment mapping",
                "type": "object",
              },
              "descriptionConfig": {
                "description": "Mapping for the case description.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Case description mapping",
                "type": "object",
              },
              "ruleNameConfig": {
                "description": "Mapping for the name of the alert's rule.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Rule name mapping",
                "type": "object",
              },
              "severityConfig": {
                "description": "Mapping for the severity.",
                "properties": {
                  "fieldType": {
                    "description": "The type of field in Swimlane.",
                    "type": "string",
                  },
                  "id": {
                    "description": "The identifier for the field in Swimlane.",
                    "type": "string",
                  },
                  "key": {
                    "description": "The key for the field in Swimlane.",
                    "type": "string",
                  },
                  "name": {
                    "description": "The name of the field in Swimlane.",
                    "type": "string",
                  },
                },
                "required": [
                  "fieldType",
                  "id",
                  "key",
                  "name",
                ],
                "title": "Severity mapping",
                "type": "object",
              },
            },
            "title": "Connector mappings properties for a Swimlane connector",
            "type": "object",
          },
        },
        "required": [
          "apiUrl",
          "appId",
          "connectorType",
        ],
        "title": "Connector request properties for a Swimlane connector",
        "type": "object",
      },
      "config_properties_tines": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.tines\`.",
        "title": "Connector request properties for a Tines connector",
        "type": "object",
      },
      "config_properties_webhook": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.webhook\`.",
        "title": "Connector request properties for a Webhook connector",
        "type": "object",
      },
      "config_properties_xmatters": {
        "additionalProperties": true,
        "description": "Defines properties for connectors when type is \`.xmatters\`.",
        "title": "Connector request properties for a xMatters connector",
        "type": "object",
      },
      "connector_response_properties": {
        "description": "The properties vary depending on the connector type.",
        "discriminator": {
          "propertyName": "connector_type_id",
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/connector_response_properties_cases_webhook",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_email",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_index",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_jira",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_opsgenie",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_pagerduty",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_resilient",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_serverlog",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_servicenow",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_servicenow_itom",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_servicenow_sir",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_slack_api",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_slack_webhook",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_swimlane",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_teams",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_tines",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_webhook",
          },
          {
            "$ref": "#/components/schemas/connector_response_properties_xmatters",
          },
        ],
        "title": "Connector response properties",
      },
      "connector_response_properties_cases_webhook": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_cases_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".cases-webhook",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector request properties for a Webhook - Case Management connector",
        "type": "object",
      },
      "connector_response_properties_email": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_email",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".email",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an email connector",
        "type": "object",
      },
      "connector_response_properties_index": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_index",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".index",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an index connector",
        "type": "object",
      },
      "connector_response_properties_jira": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_jira",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".jira",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Jira connector",
        "type": "object",
      },
      "connector_response_properties_opsgenie": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_opsgenie",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".opsgenie",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an Opsgenie connector",
        "type": "object",
      },
      "connector_response_properties_pagerduty": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_pagerduty",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".pagerduty",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a PagerDuty connector",
        "type": "object",
      },
      "connector_response_properties_resilient": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_resilient",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".resilient",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a IBM Resilient connector",
        "type": "object",
      },
      "connector_response_properties_serverlog": {
        "properties": {
          "config": {
            "nullable": true,
            "type": "object",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".server-log",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a server log connector",
        "type": "object",
      },
      "connector_response_properties_servicenow": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a ServiceNow ITSM connector",
        "type": "object",
      },
      "connector_response_properties_servicenow_itom": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow_itom",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-itom",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a ServiceNow ITOM connector",
        "type": "object",
      },
      "connector_response_properties_servicenow_sir": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-sir",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a ServiceNow SecOps connector",
        "type": "object",
      },
      "connector_response_properties_slack_api": {
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack_api",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Slack connector",
        "type": "object",
      },
      "connector_response_properties_slack_webhook": {
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Slack connector",
        "type": "object",
      },
      "connector_response_properties_swimlane": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_swimlane",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".swimlane",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Swimlane connector",
        "type": "object",
      },
      "connector_response_properties_teams": {
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".teams",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Microsoft Teams connector",
        "type": "object",
      },
      "connector_response_properties_tines": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_tines",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".tines",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Tines connector",
        "type": "object",
      },
      "connector_response_properties_webhook": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".webhook",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for a Webhook connector",
        "type": "object",
      },
      "connector_response_properties_xmatters": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_xmatters",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".xmatters",
            ],
            "type": "string",
          },
          "id": {
            "description": "The identifier for the connector.",
            "type": "string",
          },
          "is_deprecated": {
            "$ref": "#/components/schemas/is_deprecated",
          },
          "is_missing_secrets": {
            "$ref": "#/components/schemas/is_missing_secrets",
          },
          "is_preconfigured": {
            "$ref": "#/components/schemas/is_preconfigured",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "id",
          "is_deprecated",
          "is_preconfigured",
          "name",
        ],
        "title": "Connector response properties for an xMatters connector",
        "type": "object",
      },
      "connector_types": {
        "description": "The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`, \`.opsgenie\`, or \`.server-log\`.",
        "enum": [
          ".cases-webhook",
          ".email",
          ".index",
          ".jira",
          ".opsgenie",
          ".pagerduty",
          ".resilient",
          ".servicenow",
          ".servicenow-itom",
          ".servicenow-sir",
          ".server-log",
          ".slack",
          ".swimlane",
          ".teams",
          ".tines",
          ".webhook",
          ".xmatters",
        ],
        "example": ".server-log",
        "title": "Connector types",
        "type": "string",
      },
      "create_connector_request_cases_webhook": {
        "description": "The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_cases_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".cases-webhook",
            ],
            "example": ".cases-webhook",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_cases_webhook",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
        ],
        "title": "Create Webhook - Case Managment connector request",
        "type": "object",
      },
      "create_connector_request_email": {
        "description": "The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_email",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".email",
            ],
            "example": ".email",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_email",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create email connector request",
        "type": "object",
      },
      "create_connector_request_index": {
        "description": "The index connector indexes a document into Elasticsearch.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_index",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".index",
            ],
            "example": ".index",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
        ],
        "title": "Create index connector request",
        "type": "object",
      },
      "create_connector_request_jira": {
        "description": "The Jira connector uses the REST API v2 to create Jira issues.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_jira",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".jira",
            ],
            "example": ".jira",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_jira",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Jira connector request",
        "type": "object",
      },
      "create_connector_request_opsgenie": {
        "description": "The Opsgenie connector uses the Opsgenie alert API.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_opsgenie",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".opsgenie",
            ],
            "example": ".opsgenie",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_opsgenie",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Opsgenie connector request",
        "type": "object",
      },
      "create_connector_request_pagerduty": {
        "description": "The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_pagerduty",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".pagerduty",
            ],
            "example": ".pagerduty",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_pagerduty",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create PagerDuty connector request",
        "type": "object",
      },
      "create_connector_request_resilient": {
        "description": "The IBM Resilient connector uses the RESILIENT REST v2 to create IBM Resilient incidents.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_resilient",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".resilient",
            ],
            "example": ".resilient",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_resilient",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create IBM Resilient connector request",
        "type": "object",
      },
      "create_connector_request_serverlog": {
        "description": "This connector writes an entry to the Kibana server log.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".server-log",
            ],
            "example": ".server-log",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
        },
        "required": [
          "connector_type_id",
          "name",
        ],
        "title": "Create server log connector request",
        "type": "object",
      },
      "create_connector_request_servicenow": {
        "description": "The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow",
            ],
            "example": ".servicenow",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow ITSM connector request",
        "type": "object",
      },
      "create_connector_request_servicenow_itom": {
        "description": "The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow_itom",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-itom",
            ],
            "example": ".servicenow-itom",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow ITOM connector request",
        "type": "object",
      },
      "create_connector_request_servicenow_sir": {
        "description": "The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".servicenow-sir",
            ],
            "example": ".servicenow-sir",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow SecOps connector request",
        "type": "object",
      },
      "create_connector_request_slack_api": {
        "description": "The Slack connector uses Slack Incoming Webhooks.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack_api",
            ],
            "example": ".slack_api",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_api",
          },
        },
        "required": [
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Slack connector request",
        "type": "object",
      },
      "create_connector_request_slack_webhook": {
        "description": "The Slack connector uses Slack Incoming Webhooks.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".slack",
            ],
            "example": ".slack",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_webhook",
          },
        },
        "required": [
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Slack connector request",
        "type": "object",
      },
      "create_connector_request_swimlane": {
        "description": "The Swimlane connector uses the Swimlane REST API to create Swimlane records.",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_swimlane",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".swimlane",
            ],
            "example": ".swimlane",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_swimlane",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Swimlane connector request",
        "type": "object",
      },
      "create_connector_request_teams": {
        "description": "The Microsoft Teams connector uses Incoming Webhooks.",
        "properties": {
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".teams",
            ],
            "example": ".teams",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_teams",
          },
        },
        "required": [
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Microsoft Teams connector request",
        "type": "object",
      },
      "create_connector_request_tines": {
        "description": "The Tines connector uses Tines Webhook actions to send events via POST request.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_tines",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".tines",
            ],
            "example": ".tines",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_tines",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Tines connector request",
        "type": "object",
      },
      "create_connector_request_webhook": {
        "description": "The Webhook connector uses axios to send a POST or PUT request to a web service.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_webhook",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".webhook",
            ],
            "example": ".webhook",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_webhook",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create Webhook connector request",
        "type": "object",
      },
      "create_connector_request_xmatters": {
        "description": "The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_xmatters",
          },
          "connector_type_id": {
            "description": "The type of connector.",
            "enum": [
              ".xmatters",
            ],
            "example": ".xmatters",
            "type": "string",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_xmatters",
          },
        },
        "required": [
          "config",
          "connector_type_id",
          "name",
          "secrets",
        ],
        "title": "Create xMatters connector request",
        "type": "object",
      },
      "features": {
        "description": "The feature that uses the connector. Valid values are \`alerting\`, \`cases\`, \`uptime\`, and \`siem\`.
",
        "enum": [
          "alerting",
          "cases",
          "uptime",
          "siem",
        ],
        "type": "string",
      },
      "is_deprecated": {
        "description": "Indicates whether the connector type is deprecated.",
        "example": false,
        "type": "boolean",
      },
      "is_missing_secrets": {
        "description": "Indicates whether secrets are missing for the connector. Secrets configuration properties vary depending on the connector type.",
        "example": false,
        "type": "boolean",
      },
      "is_preconfigured": {
        "description": "Indicates whether it is a preconfigured connector. If true, the \`config\` and \`is_missing_secrets\` properties are omitted from the response.",
        "example": false,
        "type": "boolean",
      },
      "run_connector_params_documents": {
        "description": "Test an action that indexes a document into Elasticsearch.",
        "properties": {
          "documents": {
            "description": "The documents in JSON format for index connectors.",
            "items": {
              "additionalProperties": true,
              "type": "object",
            },
            "type": "array",
          },
        },
        "required": [
          "documents",
        ],
        "title": "Index connector parameters",
        "type": "object",
      },
      "run_connector_params_level_message": {
        "description": "Test an action that writes an entry to the Kibana server log.",
        "properties": {
          "level": {
            "default": "info",
            "description": "The log level of the message for server log connectors.",
            "enum": [
              "debug",
              "error",
              "fatal",
              "info",
              "trace",
              "warn",
            ],
            "type": "string",
          },
          "message": {
            "description": "The message for server log connectors.",
            "type": "string",
          },
        },
        "required": [
          "message",
        ],
        "title": "Server log connector parameters",
        "type": "object",
      },
      "run_connector_subaction_addevent": {
        "description": "The \`addEvent\` subaction for ServiceNow ITOM connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "addEvent",
            ],
            "type": "string",
          },
          "subActionParams": {
            "description": "The set of configuration properties for the action.",
            "properties": {
              "additional_info": {
                "description": "Additional information about the event.",
                "type": "string",
              },
              "description": {
                "description": "The details about the event.",
                "type": "string",
              },
              "event_class": {
                "description": "A specific instance of the source.",
                "type": "string",
              },
              "message_key": {
                "description": "All actions sharing this key are associated with the same ServiceNow alert. The default value is \`<rule ID>:<alert instance ID>\`.",
                "type": "string",
              },
              "metric_name": {
                "description": "The name of the metric.",
                "type": "string",
              },
              "node": {
                "description": "The host that the event was triggered for.",
                "type": "string",
              },
              "resource": {
                "description": "The name of the resource.",
                "type": "string",
              },
              "severity": {
                "description": "The severity of the event.",
                "type": "string",
              },
              "source": {
                "description": "The name of the event source type.",
                "type": "string",
              },
              "time_of_event": {
                "description": "The time of the event.",
                "type": "string",
              },
              "type": {
                "description": "The type of event.",
                "type": "string",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The addEvent subaction",
        "type": "object",
      },
      "run_connector_subaction_closealert": {
        "description": "The \`closeAlert\` subaction for Opsgenie connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "closeAlert",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "alias": {
                "description": "The unique identifier used for alert deduplication in Opsgenie. The alias must match the value used when creating the alert.",
                "type": "string",
              },
              "note": {
                "description": "Additional information for the alert.",
                "type": "string",
              },
              "source": {
                "description": "The display name for the source of the alert.",
                "type": "string",
              },
              "user": {
                "description": "The display name for the owner.",
                "type": "string",
              },
            },
            "required": [
              "alias",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The closeAlert subaction",
        "type": "object",
      },
      "run_connector_subaction_createalert": {
        "description": "The \`createAlert\` subaction for Opsgenie connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "createAlert",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "actions": {
                "description": "The custom actions available to the alert.",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "alias": {
                "description": "The unique identifier used for alert deduplication in Opsgenie.",
                "type": "string",
              },
              "description": {
                "description": "A description that provides detailed information about the alert.",
                "type": "string",
              },
              "details": {
                "additionalProperties": true,
                "description": "The custom properties of the alert.",
                "example": {
                  "key1": "value1",
                  "key2": "value2",
                },
                "type": "object",
              },
              "entity": {
                "description": "The domain of the alert. For example, the application or server name.",
                "type": "string",
              },
              "message": {
                "description": "The alert message.",
                "type": "string",
              },
              "note": {
                "description": "Additional information for the alert.",
                "type": "string",
              },
              "priority": {
                "description": "The priority level for the alert.",
                "enum": [
                  "P1",
                  "P2",
                  "P3",
                  "P4",
                  "P5",
                ],
                "type": "string",
              },
              "responders": {
                "description": "The entities to receive notifications about the alert. If \`type\` is \`user\`, either \`id\` or \`username\` is required. If \`type\` is \`team\`, either \`id\` or \`name\` is required.
",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The identifier for the entity.",
                      "type": "string",
                    },
                    "name": {
                      "description": "The name of the entity.",
                      "type": "string",
                    },
                    "type": {
                      "description": "The type of responders, in this case \`escalation\`.",
                      "enum": [
                        "escalation",
                        "schedule",
                        "team",
                        "user",
                      ],
                      "type": "string",
                    },
                    "username": {
                      "description": "A valid email address for the user.",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
                "type": "array",
              },
              "source": {
                "description": "The display name for the source of the alert.",
                "type": "string",
              },
              "tags": {
                "description": "The tags for the alert.",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "user": {
                "description": "The display name for the owner.",
                "type": "string",
              },
              "visibleTo": {
                "description": "The teams and users that the alert will be visible to without sending a notification. Only one of \`id\`, \`name\`, or \`username\` is required.",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The identifier for the entity.",
                      "type": "string",
                    },
                    "name": {
                      "description": "The name of the entity.",
                      "type": "string",
                    },
                    "type": {
                      "description": "Valid values are \`team\` and \`user\`.",
                      "enum": [
                        "team",
                        "user",
                      ],
                      "type": "string",
                    },
                    "username": {
                      "description": "The user name. This property is required only when the \`type\` is \`user\`.",
                      "type": "string",
                    },
                  },
                  "required": [
                    "type",
                  ],
                  "type": "object",
                },
                "type": "array",
              },
            },
            "required": [
              "message",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The createAlert subaction",
        "type": "object",
      },
      "run_connector_subaction_fieldsbyissuetype": {
        "description": "The \`fieldsByIssueType\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "fieldsByIssueType",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "id": {
                "description": "The Jira issue type identifier.",
                "example": 10024,
                "type": "string",
              },
            },
            "required": [
              "id",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The fieldsByIssueType subaction",
        "type": "object",
      },
      "run_connector_subaction_getchoices": {
        "description": "The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "getChoices",
            ],
            "type": "string",
          },
          "subActionParams": {
            "description": "The set of configuration properties for the action.",
            "properties": {
              "fields": {
                "description": "An array of fields.",
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            },
            "required": [
              "fields",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The getChoices subaction",
        "type": "object",
      },
      "run_connector_subaction_getfields": {
        "description": "The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "getFields",
            ],
            "type": "string",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The getFields subaction",
        "type": "object",
      },
      "run_connector_subaction_getincident": {
        "description": "The \`getIncident\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "getIncident",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "externalId": {
                "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.",
                "example": 71778,
                "type": "string",
              },
            },
            "required": [
              "externalId",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The getIncident subaction",
        "type": "object",
      },
      "run_connector_subaction_issue": {
        "description": "The \`issue\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "issue",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "id": {
                "description": "The Jira issue identifier.",
                "example": 71778,
                "type": "string",
              },
            },
            "required": [
              "id",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The issue subaction",
        "type": "object",
      },
      "run_connector_subaction_issues": {
        "description": "The \`issues\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "issues",
            ],
            "type": "string",
          },
          "subActionParams": {
            "properties": {
              "title": {
                "description": "The title of the Jira issue.",
                "type": "string",
              },
            },
            "required": [
              "title",
            ],
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The issues subaction",
        "type": "object",
      },
      "run_connector_subaction_issuetypes": {
        "description": "The \`issueTypes\` subaction for Jira connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "issueTypes",
            ],
            "type": "string",
          },
        },
        "required": [
          "subAction",
        ],
        "title": "The issueTypes subaction",
        "type": "object",
      },
      "run_connector_subaction_pushtoservice": {
        "description": "The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
        "properties": {
          "subAction": {
            "description": "The action to test.",
            "enum": [
              "pushToService",
            ],
            "type": "string",
          },
          "subActionParams": {
            "description": "The set of configuration properties for the action.",
            "properties": {
              "comments": {
                "description": "Additional information that is sent to Jira, ServiceNow ITSM, ServiceNow SecOps, or Swimlane.",
                "items": {
                  "properties": {
                    "comment": {
                      "description": "A comment related to the incident. For example, describe how to troubleshoot the issue.",
                      "type": "string",
                    },
                    "commentId": {
                      "description": "A unique identifier for the comment.",
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
                "type": "array",
              },
              "incident": {
                "description": "Information necessary to create or update a Jira, ServiceNow ITSM, ServiveNow SecOps, or Swimlane incident.",
                "properties": {
                  "alertId": {
                    "description": "The alert identifier for Swimlane connectors.",
                    "type": "string",
                  },
                  "caseId": {
                    "description": "The case identifier for the incident for Swimlane connectors.",
                    "type": "string",
                  },
                  "caseName": {
                    "description": "The case name for the incident for Swimlane connectors.",
                    "type": "string",
                  },
                  "category": {
                    "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "correlation_display": {
                    "description": "A descriptive label of the alert for correlation purposes for ServiceNow ITSM and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "correlation_id": {
                    "description": "The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as \`{{ruleID}}:{{alert ID}}\` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of \`{{ruleID}}:{{alert ID}}\` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
",
                    "type": "string",
                  },
                  "description": {
                    "description": "The description of the incident for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
                    "type": "string",
                  },
                  "dest_ip": {
                    "description": "A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "externalId": {
                    "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
",
                    "type": "string",
                  },
                  "impact": {
                    "description": "The impact of the incident for ServiceNow ITSM connectors.",
                    "type": "string",
                  },
                  "issueType": {
                    "description": "The type of incident for Jira connectors. For example, 10006. To obtain the list of valid values, set \`subAction\` to \`issueTypes\`.",
                    "type": "integer",
                  },
                  "labels": {
                    "description": "The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "malware_hash": {
                    "description": "A list of malware hashes related to the security incident for ServiceNow SecOps connectors. The hashes are added as observables to the security incident.",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "malware_url": {
                    "description": "A list of malware URLs related to the security incident for ServiceNow SecOps connectors. The URLs are added as observables to the security incident.",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                    "type": "string",
                  },
                  "parent": {
                    "description": "The ID or key of the parent issue for Jira connectors. Applies only to \`Sub-task\` types of issues.",
                    "type": "string",
                  },
                  "priority": {
                    "description": "The priority of the incident in Jira and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "ruleName": {
                    "description": "The rule name for Swimlane connectors.",
                    "type": "string",
                  },
                  "severity": {
                    "description": "The severity of the incident for ServiceNow ITSM and Swimlane connectors.",
                    "type": "string",
                  },
                  "short_description": {
                    "description": "A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
",
                    "type": "string",
                  },
                  "source_ip": {
                    "description": "A list of source IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.",
                    "oneOf": [
                      {
                        "type": "string",
                      },
                      {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    ],
                  },
                  "subcategory": {
                    "description": "The subcategory of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                    "type": "string",
                  },
                  "summary": {
                    "description": "A summary of the incident for Jira connectors.",
                    "type": "string",
                  },
                  "title": {
                    "description": "A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
",
                    "type": "string",
                  },
                  "urgency": {
                    "description": "The urgency of the incident for ServiceNow ITSM connectors.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "type": "object",
          },
        },
        "required": [
          "subAction",
          "subActionParams",
        ],
        "title": "The pushToService subaction",
        "type": "object",
      },
      "secrets_properties_cases_webhook": {
        "properties": {
          "password": {
            "description": "The password for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
            "type": "string",
          },
          "user": {
            "description": "The username for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
            "type": "string",
          },
        },
        "title": "Connector secrets properties for Webhook - Case Management connector",
        "type": "object",
      },
      "secrets_properties_email": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.email\`.",
        "title": "Connector secrets properties for an email connector",
        "type": "object",
      },
      "secrets_properties_jira": {
        "description": "Defines secrets for connectors when type is \`.jira\`.",
        "properties": {
          "apiToken": {
            "description": "The Jira API authentication token for HTTP basic authentication.",
            "type": "string",
          },
          "email": {
            "description": "The account email for HTTP Basic authentication.",
            "type": "string",
          },
        },
        "required": [
          "apiToken",
          "email",
        ],
        "title": "Connector secrets properties for a Jira connector",
        "type": "object",
      },
      "secrets_properties_opsgenie": {
        "description": "Defines secrets for connectors when type is \`.opsgenie\`.",
        "properties": {
          "apiKey": {
            "description": "The Opsgenie API authentication key for HTTP Basic authentication.",
            "type": "string",
          },
        },
        "required": [
          "apiKey",
        ],
        "title": "Connector secrets properties for an Opsgenie connector",
        "type": "object",
      },
      "secrets_properties_pagerduty": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.pagerduty\`.",
        "title": "Connector secrets properties for a PagerDuty connector",
        "type": "object",
      },
      "secrets_properties_resilient": {
        "description": "Defines secrets for connectors when type is \`.resilient\`.",
        "properties": {
          "apiKeyId": {
            "description": "The authentication key ID for HTTP Basic authentication.",
            "type": "string",
          },
          "apiKeySecret": {
            "description": "The authentication key secret for HTTP Basic authentication.",
            "type": "string",
          },
        },
        "required": [
          "apiKeyId",
          "apiKeySecret",
        ],
        "title": "Connector secrets properties for IBM Resilient connector",
        "type": "object",
      },
      "secrets_properties_servicenow": {
        "description": "Defines secrets for connectors when type is \`.servicenow\`, \`.servicenow-sir\`, or \`.servicenow-itom\`.",
        "properties": {
          "clientSecret": {
            "description": "The client secret assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.",
            "type": "string",
          },
          "password": {
            "description": "The password for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
            "type": "string",
          },
          "privateKey": {
            "description": "The RSA private key that you created for use in ServiceNow. This property is required when \`isOAuth\` is \`true\`.",
            "type": "string",
          },
          "privateKeyPassword": {
            "description": "The password for the RSA private key. This property is required when \`isOAuth\` is \`true\` and you set a password on your private key.",
            "type": "string",
          },
          "username": {
            "description": "The username for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
            "type": "string",
          },
        },
        "title": "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors",
        "type": "object",
      },
      "secrets_properties_slack_api": {
        "description": "Defines secrets for connectors when type is \`.slack\`.",
        "properties": {
          "token": {
            "description": "Slack bot user OAuth token.",
            "type": "string",
          },
        },
        "required": [
          "token",
        ],
        "title": "Connector secrets properties for a Web API Slack connector",
        "type": "object",
      },
      "secrets_properties_slack_webhook": {
        "description": "Defines secrets for connectors when type is \`.slack\`.",
        "properties": {
          "webhookUrl": {
            "description": "Slack webhook url.",
            "type": "string",
          },
        },
        "required": [
          "webhookUrl",
        ],
        "title": "Connector secrets properties for a Webhook Slack connector",
        "type": "object",
      },
      "secrets_properties_swimlane": {
        "description": "Defines secrets for connectors when type is \`.swimlane\`.",
        "properties": {
          "apiToken": {
            "description": "Swimlane API authentication token.",
            "type": "string",
          },
        },
        "title": "Connector secrets properties for a Swimlane connector",
        "type": "object",
      },
      "secrets_properties_teams": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.teams\`.",
        "title": "Connector secrets properties for a Microsoft Teams connector",
        "type": "object",
      },
      "secrets_properties_tines": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.tines\`.",
        "title": "Connector secrets properties for a Tines connector",
        "type": "object",
      },
      "secrets_properties_webhook": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.webhook\`.",
        "title": "Connector secrets properties for a Webhook connector",
        "type": "object",
      },
      "secrets_properties_xmatters": {
        "additionalProperties": true,
        "description": "Defines secrets for connectors when type is \`.xmatters\`.",
        "title": "Connector secrets properties for an xMatters connector",
        "type": "object",
      },
      "update_connector_request_cases_webhook": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_cases_webhook",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_cases_webhook",
          },
        },
        "required": [
          "config",
          "name",
        ],
        "title": "Update Webhook - Case Managment connector request",
        "type": "object",
      },
      "update_connector_request_index": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_index",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "config",
          "name",
        ],
        "title": "Update index connector request",
        "type": "object",
      },
      "update_connector_request_jira": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_jira",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_jira",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update Jira connector request",
        "type": "object",
      },
      "update_connector_request_opsgenie": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_opsgenie",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_opsgenie",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update Opsgenie connector request",
        "type": "object",
      },
      "update_connector_request_resilient": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_resilient",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_resilient",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update IBM Resilient connector request",
        "type": "object",
      },
      "update_connector_request_serverlog": {
        "properties": {
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "title": "Update server log connector request",
        "type": "object",
      },
      "update_connector_request_servicenow": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update ServiceNow ITSM connector or ServiceNow SecOps request",
        "type": "object",
      },
      "update_connector_request_servicenow_itom": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_servicenow_itom",
          },
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_servicenow",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Create ServiceNow ITOM connector request",
        "type": "object",
      },
      "update_connector_request_slack_api": {
        "properties": {
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_api",
            "description": "The secrets object containing the necessary fields for authentication.",
            "type": "object",
          },
        },
        "required": [
          "name",
          "secrets",
        ],
        "title": "Update Slack connector request",
        "type": "object",
      },
      "update_connector_request_slack_webhook": {
        "properties": {
          "name": {
            "description": "The display name for the connector.",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_slack_webhook",
            "description": "The secrets object containing the necessary fields for authentication.",
            "type": "object",
          },
        },
        "required": [
          "name",
          "secrets",
        ],
        "title": "Update Slack connector request",
        "type": "object",
      },
      "update_connector_request_swimlane": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/config_properties_swimlane",
          },
          "name": {
            "description": "The display name for the connector.",
            "example": "my-connector",
            "type": "string",
          },
          "secrets": {
            "$ref": "#/components/schemas/secrets_properties_swimlane",
          },
        },
        "required": [
          "config",
          "name",
          "secrets",
        ],
        "title": "Update Swimlane connector request",
        "type": "object",
      },
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "in": "header",
        "name": "ApiKey",
        "type": "apiKey",
      },
      "basicAuth": {
        "scheme": "basic",
        "type": "http",
      },
    },
  },
  "info": {
    "contact": {
      "name": "Connectors Team",
    },
    "description": "OpenAPI schema for Connectors endpoints",
    "license": {
      "name": "Elastic License 2.0",
      "url": "https://www.elastic.co/licensing/elastic-license",
    },
    "title": "Connectors",
    "version": "0.1",
  },
  "openapi": "3.0.1",
  "paths": {
    "/s/{spaceId}/api/actions": {
      "get": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the get all connectors API instead.",
        "operationId": "legacyGetConnectors",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/action_response_properties",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves all connectors.",
        "tags": [
          "connectors",
        ],
      },
      "post": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the create connector API instead.",
        "operationId": "legacyCreateConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "actionTypeId": {
                    "description": "The connector type identifier.",
                    "type": "string",
                  },
                  "config": {
                    "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                    "type": "object",
                  },
                  "name": {
                    "description": "The display name for the connector.",
                    "type": "string",
                  },
                  "secrets": {
                    "description": "The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
",
                    "type": "object",
                  },
                },
                "title": "Legacy create connector request properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200_actions",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Creates a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/action/{actionId}": {
      "delete": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
",
        "operationId": "legacyDeleteConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Deletes a connector.",
        "tags": [
          "connectors",
        ],
      },
      "get": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the get connector API instead.",
        "operationId": "legacyGetConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200_actions",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a connector by ID.",
        "tags": [
          "connectors",
        ],
      },
      "put": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the update connector API instead.",
        "operationId": "legacyUpdateConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "properties": {
                  "config": {
                    "description": "The new connector configuration. Configuration properties vary depending on the connector type.",
                    "type": "object",
                  },
                  "name": {
                    "description": "The new name for the connector.",
                    "type": "string",
                  },
                  "secrets": {
                    "description": "The updated secrets configuration for the connector. Secrets properties vary depending on the connector type.",
                    "type": "object",
                  },
                },
                "title": "Legacy update connector request body properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200_actions",
          },
          "404": {
            "$ref": "#/components/responses/404",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Updates the attributes for a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/action/{actionId}/_execute": {
      "post": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the run connector API instead.",
        "operationId": "legacyRunConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/action_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "properties": {
                  "params": {
                    "description": "The parameters of the connector. Parameter properties vary depending on the connector type.",
                    "type": "object",
                  },
                },
                "required": [
                  "params",
                ],
                "title": "Legacy run connector request body properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "actionId": {
                      "type": "string",
                    },
                    "data": {
                      "oneOf": [
                        {
                          "additionalProperties": true,
                          "description": "Information returned from the action.",
                          "type": "object",
                        },
                        {
                          "description": "An array of information returned from the action.",
                          "items": {
                            "type": "object",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "status": {
                      "description": "The status of the action.",
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Runs a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector": {
      "post": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "createConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createIndexConnectorRequest": {
                  "$ref": "#/components/examples/create_index_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "discriminator": {
                  "propertyName": "connector_type_id",
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_email",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_index",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_jira",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_opsgenie",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_pagerduty",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_resilient",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_serverlog",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_api",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_swimlane",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_teams",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_tines",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_xmatters",
                  },
                ],
                "title": "Create connector request body properties",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "createIndexConnectorResponse": {
                    "$ref": "#/components/examples/create_index_connector_response",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Creates a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector/{connectorId}": {
      "delete": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
",
        "operationId": "deleteConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Deletes a connector.",
        "tags": [
          "connectors",
        ],
      },
      "get": {
        "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "getConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getConnectorResponse": {
                    "$ref": "#/components/examples/get_connector_response",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a connector by ID.",
        "tags": [
          "connectors",
        ],
      },
      "post": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "createConnectorId",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
          {
            "description": "A UUID v1 or v4 identifier for the connector. If you omit this parameter, an identifier is randomly generated.",
            "in": "path",
            "name": "connectorId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "createIndexConnectorRequest": {
                  "$ref": "#/components/examples/create_index_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "discriminator": {
                  "propertyName": "connector_type_id",
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_email",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_index",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_jira",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_opsgenie",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_pagerduty",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_resilient",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_serverlog",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_api",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_swimlane",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_teams",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_tines",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/create_connector_request_xmatters",
                  },
                ],
                "title": "Create connector request body properties",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "createIndexConnectorResponse": {
                    "$ref": "#/components/examples/create_index_connector_response",
                  },
                },
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Creates a connector.",
        "tags": [
          "connectors",
        ],
      },
      "put": {
        "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "updateConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "updateIndexConnectorRequest": {
                  "$ref": "#/components/examples/update_index_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/update_connector_request_cases_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_index",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_jira",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_opsgenie",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_resilient",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_serverlog",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_servicenow",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_servicenow_itom",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_slack_api",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_slack_webhook",
                  },
                  {
                    "$ref": "#/components/schemas/update_connector_request_swimlane",
                  },
                ],
                "title": "Update connector request body properties",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/connector_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "example": "Bad Request",
                      "type": "string",
                    },
                    "message": {
                      "example": "error validating action type config: [index]: expected value of type [string] but got [undefined]",
                      "type": "string",
                    },
                    "statusCode": {
                      "example": 400,
                      "type": "integer",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "Indicates a bad request.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
          "404": {
            "$ref": "#/components/responses/404",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Updates the attributes for a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector/{connectorId}/_execute": {
      "post": {
        "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\` indices privileges.
",
        "operationId": "runConnector",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf",
          },
          {
            "$ref": "#/components/parameters/connector_id",
          },
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "runIndexConnectorRequest": {
                  "$ref": "#/components/examples/run_index_connector_request",
                },
                "runJiraConnectorRequest": {
                  "$ref": "#/components/examples/run_jira_connector_request",
                },
                "runServerLogConnectorRequest": {
                  "$ref": "#/components/examples/run_server_log_connector_request",
                },
                "runServiceNowITOMConnectorRequest": {
                  "$ref": "#/components/examples/run_servicenow_itom_connector_request",
                },
                "runSwimlaneConnectorRequest": {
                  "$ref": "#/components/examples/run_swimlane_connector_request",
                },
              },
              "schema": {
                "description": "The properties vary depending on the connector type.",
                "properties": {
                  "params": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/run_connector_params_documents",
                      },
                      {
                        "$ref": "#/components/schemas/run_connector_params_level_message",
                      },
                      {
                        "description": "Test an action that involves a subaction.",
                        "discriminator": {
                          "propertyName": "subAction",
                        },
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_addevent",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_closealert",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_createalert",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_fieldsbyissuetype",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_getchoices",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_getfields",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_getincident",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_issue",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_issues",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_issuetypes",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_subaction_pushtoservice",
                          },
                        ],
                        "title": "Subaction parameters",
                      },
                    ],
                  },
                },
                "required": [
                  "params",
                ],
                "title": "Run connector request body properties",
                "type": "object",
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "runIndexConnectorResponse": {
                    "$ref": "#/components/examples/run_index_connector_response",
                  },
                  "runJiraConnectorResponse": {
                    "$ref": "#/components/examples/run_jira_connector_response",
                  },
                  "runServerLogConnectorResponse": {
                    "$ref": "#/components/examples/run_server_log_connector_response",
                  },
                  "runServiceNowITOMConnectorResponse": {
                    "$ref": "#/components/examples/run_servicenow_itom_connector_response",
                  },
                  "runSwimlaneConnectorResponse": {
                    "$ref": "#/components/examples/run_swimlane_connector_response",
                  },
                },
                "schema": {
                  "properties": {
                    "connector_id": {
                      "description": "The identifier for the connector.",
                      "type": "string",
                    },
                    "data": {
                      "oneOf": [
                        {
                          "additionalProperties": true,
                          "description": "Information returned from the action.",
                          "type": "object",
                        },
                        {
                          "description": "An array of information returned from the action.",
                          "items": {
                            "type": "object",
                          },
                          "type": "array",
                        },
                      ],
                    },
                    "status": {
                      "description": "The status of the action.",
                      "enum": [
                        "error",
                        "ok",
                      ],
                      "type": "string",
                    },
                  },
                  "required": [
                    "connector_id",
                    "status",
                  ],
                  "type": "object",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Runs a connector.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connector_types": {
      "get": {
        "description": "You do not need any Kibana feature privileges to run this API.
",
        "operationId": "getConnectorTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
          {
            "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
            "in": "query",
            "name": "feature_id",
            "schema": {
              "$ref": "#/components/schemas/features",
            },
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getConnectorTypesResponse": {
                    "$ref": "#/components/examples/get_connector_types_response",
                  },
                },
                "schema": {
                  "description": "The properties vary for each connector type.",
                  "items": {
                    "properties": {
                      "enabled": {
                        "description": "Indicates whether the connector type is enabled in Kibana.",
                        "example": true,
                        "type": "boolean",
                      },
                      "enabled_in_config": {
                        "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                        "example": true,
                        "type": "boolean",
                      },
                      "enabled_in_license": {
                        "description": "Indicates whether the connector is enabled in the license.",
                        "example": true,
                        "type": "boolean",
                      },
                      "id": {
                        "$ref": "#/components/schemas/connector_types",
                      },
                      "minimum_license_required": {
                        "description": "The license that is required to use the connector type.",
                        "example": "basic",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the connector type.",
                        "example": "Index",
                        "type": "string",
                      },
                      "supported_feature_ids": {
                        "description": "The Kibana features that are supported by the connector type.",
                        "example": [
                          "alerting",
                          "uptime",
                          "siem",
                        ],
                        "items": {
                          "$ref": "#/components/schemas/features",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                  "title": "Get connector types response body properties",
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a list of all connector types.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/connectors": {
      "get": {
        "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
        "operationId": "getConnectors",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "getConnectorsResponse": {
                    "$ref": "#/components/examples/get_connectors_response",
                  },
                },
                "schema": {
                  "items": {
                    "description": "The properties vary for each connector type.",
                    "properties": {
                      "config": {
                        "additionalProperties": true,
                        "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                        "nullable": true,
                        "type": "object",
                      },
                      "connector_type_id": {
                        "$ref": "#/components/schemas/connector_types",
                      },
                      "id": {
                        "description": "The identifier for the connector.",
                        "example": "b0766e10-d190-11ec-b04c-776c77d14fca",
                        "type": "string",
                      },
                      "is_deprecated": {
                        "$ref": "#/components/schemas/is_deprecated",
                      },
                      "is_missing_secrets": {
                        "$ref": "#/components/schemas/is_missing_secrets",
                      },
                      "is_preconfigured": {
                        "$ref": "#/components/schemas/is_preconfigured",
                      },
                      "name": {
                        "description": "The display name for the connector.",
                        "example": "my-connector",
                        "type": "string",
                      },
                      "referenced_by_count": {
                        "default": 0,
                        "description": "Indicates the number of saved objects that reference the connector. If \`is_preconfigured\` is true, this value is not calculated.",
                        "example": 2,
                        "type": "integer",
                      },
                    },
                    "required": [
                      "connector_type_id",
                      "id",
                      "is_deprecated",
                      "is_preconfigured",
                      "name",
                      "referenced_by_count",
                    ],
                    "title": "Get connectors response body properties",
                    "type": "object",
                  },
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves all connectors.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
    "/s/{spaceId}/api/actions/list_action_types": {
      "get": {
        "deprecated": true,
        "description": "Deprecated in 7.13.0. Use the get all connector types API instead.",
        "operationId": "legacyGetConnectorTypes",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id",
          },
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "The properties vary for each connector type.",
                  "items": {
                    "properties": {
                      "enabled": {
                        "description": "Indicates whether the connector type is enabled in Kibana.",
                        "type": "boolean",
                      },
                      "enabledInConfig": {
                        "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                        "type": "boolean",
                      },
                      "enabledInLicense": {
                        "description": "Indicates whether the connector is enabled in the license.",
                        "example": true,
                        "type": "boolean",
                      },
                      "id": {
                        "description": "The unique identifier for the connector type.",
                        "type": "string",
                      },
                      "minimumLicenseRequired": {
                        "description": "The license that is required to use the connector type.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the connector type.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                  "title": "Legacy get connector types response body properties",
                  "type": "array",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "$ref": "#/components/responses/401",
          },
        },
        "servers": [
          {
            "url": "https://localhost:5601",
          },
        ],
        "summary": "Retrieves a list of all connector types.",
        "tags": [
          "connectors",
        ],
      },
      "servers": [
        {
          "url": "https://localhost:5601",
        },
      ],
    },
  },
  "security": [
    {
      "basicAuth": [],
    },
    {
      "apiKeyAuth": [],
    },
  ],
  "servers": [
    {
      "description": "local",
      "url": "http://localhost:5601",
    },
  ],
  "tags": [
    {
      "description": "Connector APIs enable you to create and manage connectors.",
      "name": "connectors",
    },
  ],
}
`;

exports[`generates simple spec 1`] = `
{
  "components": {
    "schemas": {
      "AnotherSchema": {
        "properties": {
          "address": {
            "type": "string",
          },
          "name": {
            "type": "string",
          },
        },
        "required": [
          "name",
        ],
        "type": "object",
      },
      "NewSchema": {
        "properties": {
          "age": {
            "type": "integer",
          },
          "email": {
            "type": "string",
          },
        },
        "required": [
          "email",
        ],
        "type": "object",
      },
    },
  },
  "info": {
    "title": "Your API",
    "version": "1.0.0",
  },
  "openapi": "3.0.1",
  "paths": {
    "/example": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/NewSchema",
                  },
                  {
                    "$ref": "#/components/schemas/AnotherSchema",
                  },
                ],
              },
            },
          },
          "required": true,
        },
        "responses": {
          "200": {
            "description": "OK",
          },
        },
        "summary": "Create a new example",
      },
    },
  },
}
`;

exports[`getYamlSpecs > returns a list of specs 1`] = `
[
  {
    "doc": {
      "components": {
        "examples": {
          "create_rule_request": {
            "summary": "Create an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert '{{alertName}}' is active for group '{{context.group}}':

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "consumer": "alerts",
              "name": "my rule",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "tags": [
                "cpu",
              ],
            },
          },
          "create_rule_response": {
            "summary": "The create rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group} :

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-06-08T17:20:31.632Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_execution_date": "2022-06-08T17:20:31.632Z",
                "status": "pending",
              },
              "id": "41893910-6bca-11eb-9e0d-85d233e3ee35",
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my rule",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 0,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "425b0800-6bca-11eb-9e0d-85d233e3ee35",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-06-08T17:20:31.632Z",
              "updated_by": "elastic",
            },
          },
          "find_rules_response": {
            "summary": "Retrieve information about a rule.",
            "value": {
              "data": [
                {
                  "actions": [
                    {
                      "group": "threshold met",
                      "id": "9dca3e00-74f5-11ed-9801-35303b735aef",
                      "params": {
                        "connector_type_id": ".server-log",
                        "level": "info",
                        "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                      },
                      "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                    },
                  ],
                  "api_key_created_by_user": false,
                  "api_key_owner": "elastic",
                  "consumer": "alerts",
                  "created_at": "2022-12-05T23:40:33.132Z",
                  "created_by": "elastic",
                  "enabled": true,
                  "execution_status": {
                    "last_duration": 48,
                    "last_execution_date": "2022-12-06T01:44:23.983Z",
                    "status": "ok",
                  },
                  "id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "last_run": {
                    "alerts_count": {
                      "active": 0,
                      "ignored": 0,
                      "new": 0,
                      "recovered": 0,
                    },
                    "outcome": "succeeded",
                    "outcome_msg": null,
                    "warning": null,
                  },
                  "mute_all": false,
                  "muted_alert_ids": [],
                  "name": "my alert",
                  "next_run": "2022-12-06T01:45:23.912Z",
                  "notify_when": "onActionGroupChange",
                  "params": {
                    "aggField": "sheet.version",
                    "aggType": "avg",
                    "groupBy": "top",
                    "index": [
                      "test-index",
                    ],
                    "termField": "name.keyword",
                    "termSize": 6,
                    "threshold": [
                      1000,
                    ],
                    "thresholdComparator": ">",
                    "timeField": "@timestamp",
                    "timeWindowSize": 5,
                    "timeWindowUnit": "m",
                  },
                  "revision": 1,
                  "rule_type_id": ".index-threshold",
                  "schedule": {
                    "interval": "1m",
                  },
                  "scheduled_task_id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "tags": [
                    "cpu",
                  ],
                  "throttle": null,
                  "updated_at": "2022-12-05T23:40:33.132Z",
                  "updated_by": "elastic",
                },
              ],
              "page": 1,
              "per_page": 10,
              "total": 1,
            },
          },
          "get_health_response": {
            "summary": "Retrieve information about the health of the alerting framework.",
            "value": {
              "alerting_framework_health": {
                "decryption_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "execution_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "read_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
              },
              "has_permanent_encryption_key": true,
              "is_sufficiently_secure": true,
            },
          },
          "get_rule_response": {
            "summary": "The get rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "group": "threshold met",
                  "id": "1007a0c0-7a6e-11ed-89d5-abec321c0def",
                  "params": {
                    "connector_type_id": ".server-log",
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-12-13T22:33:41.163Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 83,
                "last_execution_date": "2022-12-13T22:33:44.388Z",
                "status": "ok",
              },
              "id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my alert",
              "next_run": "2022-12-13T22:34:44.314Z",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  "test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-12-13T22:33:41.163Z",
              "updated_by": "elastic",
            },
          },
          "get_rule_types_response": {
            "summary": "Retrieve rule types associated with Kibana machine learning features",
            "value": [
              {
                "action_groups": [
                  {
                    "id": "anomaly_score_match",
                    "name": "Anomaly score matched the condition",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "The bucket timestamp of the anomaly",
                      "name": "timestamp",
                    },
                    {
                      "description": "The bucket time of the anomaly in ISO8601 format",
                      "name": "timestampIso8601",
                    },
                    {
                      "description": "List of job IDs that triggered the alert",
                      "name": "jobIds",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                    {
                      "description": "Indicate if top hits contain interim results",
                      "name": "isInterim",
                    },
                    {
                      "description": "Anomaly score at the time of the notification action",
                      "name": "score",
                    },
                    {
                      "description": "Top records",
                      "name": "topRecords",
                    },
                    {
                      "description": "Top influencers",
                      "name": "topInfluencers",
                    },
                    {
                      "description": "URL to open in the Anomaly Explorer",
                      "name": "anomalyExplorerUrl",
                      "useWithTripleBracesInTemplates": true,
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_score_match",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_alert",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection alert",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
              {
                "action_groups": [
                  {
                    "id": "anomaly_detection_realtime_issue",
                    "name": "Issue detected",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "Results of the rule execution",
                      "name": "results",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_detection_realtime_issue",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_jobs_health",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection jobs health",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
            ],
          },
          "update_rule_request": {
            "summary": "Update an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "name": "new name",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "schedule": {
                "interval": "1m",
              },
              "tags": [],
              "throttle": null,
            },
          },
          "update_rule_response": {
            "summary": "The update rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "connector_type_id": ".server-log",
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2023-01-31T23:03:33.127Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 52,
                "last_execution_date": "2023-01-31T23:48:42.499Z",
                "status": "ok",
              },
              "id": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "new name",
              "next_run": "2023-01-31T23:49:42.432Z",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".updated-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "10m",
              },
              "scheduled_task_id": "4c5eda00-e74f-11ec-b72f-5b18752ff9ea",
              "tags": [],
              "throttle": null,
              "updated_at": "2023-01-31T23:55:27.314Z",
              "updated_by": "elastic",
            },
          },
        },
        "parameters": {
          "alert_id": {
            "description": "An identifier for the alert. The identifier is generated by the rule and might be any arbitrary string.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "rule_id": {
            "description": "An identifier for the rule.",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "schemas": {
          "401_response": {
            "properties": {
              "error": {
                "enum": [
                  "Unauthorized",
                ],
                "example": "Unauthorized",
                "type": "string",
              },
              "message": {
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  401,
                ],
                "example": 401,
                "type": "integer",
              },
            },
            "title": "Unsuccessful rule API response",
            "type": "object",
          },
          "404_response": {
            "properties": {
              "error": {
                "enum": [
                  "Not Found",
                ],
                "example": "Not Found",
                "type": "string",
              },
              "message": {
                "example": "Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found",
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  404,
                ],
                "example": 404,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "actions": {
            "default": [],
            "items": {
              "properties": {
                "connector_type_id": {
                  "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                  "example": ".server-log",
                  "readOnly": true,
                  "type": "string",
                },
                "frequency": {
                  "description": "The parameters that affect how often actions are generated. NOTE: You cannot specify these parameters when \`notify_when\` or \`throttle\` are defined at the rule level.
",
                  "properties": {
                    "notify_when": {
                      "$ref": "#/components/schemas/notify_when",
                    },
                    "summary": {
                      "description": "Indicates whether the action is a summary.",
                      "type": "boolean",
                    },
                    "throttle": {
                      "$ref": "#/components/schemas/throttle",
                    },
                  },
                  "required": [
                    "notify_when",
                    "summary",
                  ],
                  "type": "object",
                },
                "group": {
                  "description": "The group name for the actions. If you don't need to group actions, set to \`default\`.",
                  "example": "default",
                  "type": "string",
                },
                "id": {
                  "description": "The identifier for the connector saved object.",
                  "example": "9dca3e00-74f5-11ed-9801-35303b735aef",
                  "type": "string",
                },
                "params": {
                  "additionalProperties": true,
                  "description": "The parameters for the action, which are sent to the connector. The \`params\` are handled as Mustache templates and passed a default set of context.",
                  "type": "object",
                },
                "uuid": {
                  "description": "A universally unique identifier (UUID) for the action.",
                  "example": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "nullable": true,
            "required": [
              "group",
              "id",
              "params",
            ],
            "type": "array",
          },
          "alert_response_properties": {
            "properties": {
              "actions": {
                "items": {
                  "type": "object",
                },
                "type": "array",
              },
              "alertTypeId": {
                "example": ".index-threshold",
                "type": "string",
              },
              "apiKeyOwner": {
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "createdAt": {
                "description": "The date and time that the alert was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "createdBy": {
                "description": "The identifier for the user that created the alert.",
                "example": "elastic",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the alert is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "executionStatus": {
                "properties": {
                  "lastExecutionDate": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the alert.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "muteAll": {
                "example": false,
                "type": "boolean",
              },
              "mutedInstanceIds": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the alert.",
                "example": "my alert",
                "type": "string",
              },
              "notifyWhen": {
                "example": "onActionGroupChange",
                "type": "string",
              },
              "params": {
                "additionalProperties": true,
                "type": "object",
              },
              "schedule": {
                "properties": {
                  "interval": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "scheduledTaskId": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "throttle": {
                "nullable": true,
                "type": "string",
              },
              "updatedAt": {
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updatedBy": {
                "description": "The identifier for the user that updated this alert most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "title": "Legacy alert response properties",
            "type": "object",
          },
          "create_rule_request": {
            "description": "The create rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "consumer": {
                "description": "The name of the application or feature that owns the rule. For example: \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.
",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                "type": "boolean",
              },
              "name": {
                "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/params_property_index_threshold",
                  },
                ],
                "type": "object",
              },
              "rule_type_id": {
                "description": "The ID of the rule type that you want to call when the rule is scheduled to run. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "type": "string",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "consumer",
              "name",
              "params",
              "rule_type_id",
              "schedule",
            ],
            "title": "Create rule request",
            "type": "object",
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: \`onActionGroupChange\`: Actions run when the alert status changes; \`onActiveAlert\`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; \`onThrottleInterval\`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met.
",
            "enum": [
              "onActionGroupChange",
              "onActiveAlert",
              "onThrottleInterval",
            ],
            "example": "onActiveAlert",
            "type": "string",
          },
          "params_property_index_threshold": {
            "properties": {
              "aggField": {
                "type": "string",
              },
              "aggType": {
                "type": "string",
              },
              "groupBy": {
                "type": "string",
              },
              "index": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "termField": {
                "type": "string",
              },
              "termSize": {
                "type": "number",
              },
              "threshold": {
                "items": {
                  "type": "number",
                },
                "type": "array",
              },
              "thresholdComparator": {
                "type": "string",
              },
              "timeField": {
                "type": "string",
              },
              "timeWindowSize": {
                "type": "number",
              },
              "timeWindowUnit": {
                "type": "string",
              },
            },
          },
          "rule_response_properties": {
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "api_key_created_by_user": {
                "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                "example": false,
                "type": "boolean",
              },
              "api_key_owner": {
                "description": "The owner of the API key that is associated with the rule and used to run background tasks.
",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "consumer": {
                "description": "The application or feature that owns the rule. For example, \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.",
                "example": "alerts",
                "type": "string",
              },
              "created_at": {
                "description": "The date and time that the rule was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "created_by": {
                "description": "The identifier for the user that created the rule.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the rule is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "execution_status": {
                "properties": {
                  "last_duration": {
                    "example": 55,
                    "type": "integer",
                  },
                  "last_execution_date": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the rule.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "last_run": {
                "properties": {
                  "alerts_count": {
                    "properties": {
                      "active": {
                        "type": "integer",
                      },
                      "ignored": {
                        "type": "integer",
                      },
                      "new": {
                        "type": "integer",
                      },
                      "recovered": {
                        "type": "integer",
                      },
                    },
                    "type": "object",
                  },
                  "outcome": {
                    "example": "succeeded",
                    "type": "string",
                  },
                  "outcome_msg": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                  "warning": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "mute_all": {
                "example": false,
                "type": "boolean",
              },
              "muted_alert_ids": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "next_run": {
                "example": "2022-12-06T00:14:43.818Z",
                "format": "date-time",
                "nullable": true,
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "revision": {
                "description": "The rule revision number.",
                "type": "integer",
              },
              "rule_type_id": {
                "description": "The identifier for the type of rule. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "example": "monitoring_alert_cluster_health",
                "type": "string",
              },
              "running": {
                "description": "Indicates whether the rule is running.",
                "type": "boolean",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "scheduled_task_id": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
              "updated_at": {
                "description": "The date and time that the rule was updated most recently.",
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updated_by": {
                "description": "The identifier for the user that updated this rule most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "required": [
              "actions",
              "api_key_owner",
              "consumer",
              "created_at",
              "created_by",
              "enabled",
              "execution_status",
              "id",
              "mute_all",
              "muted_alert_ids",
              "name",
              "params",
              "rule_type_id",
              "schedule",
              "tags",
              "throttle",
              "updated_at",
              "updated_by",
            ],
            "title": "Rule response properties",
            "type": "object",
          },
          "schedule": {
            "description": "The check interval, which specifies how frequently the rule conditions are checked. The interval is specified in seconds, minutes, hours, or days.",
            "properties": {
              "interval": {
                "example": "1m",
                "type": "string",
              },
            },
            "type": "object",
          },
          "tags": {
            "default": [],
            "description": "The tags for the rule.",
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "throttle": {
            "default": null,
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is applicable only if \`notify_when\` is set to \`onThrottleInterval\`. It is specified in seconds, minutes, hours, or days.",
            "example": "10m",
            "nullable": true,
            "type": "string",
          },
          "update_rule_request": {
            "description": "The update rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "name",
              "params",
              "schedule",
            ],
            "title": "Update rule request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Alerting Team",
        },
        "description": "OpenAPI schema for alerting endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Alerting",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/alerting/_health": {
          "get": {
            "description": "You must have \`read\` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
",
            "operationId": "getAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getAlertingHealthResponse": {
                        "$ref": "#/components/examples/get_health_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "alerting_framework_health": {
                          "description": "Three substates identify the health of the alerting framework: \`decryption_health\`, \`execution_health\`, and \`read_health\`.
",
                          "properties": {
                            "decryption_health": {
                              "description": "The timestamp and status of the rule decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "execution_health": {
                              "description": "The timestamp and status of the rule run.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "read_health": {
                              "description": "The timestamp and status of the rule reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "has_permanent_encryption_key": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "is_sufficiently_secure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're deleting. For example, the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it.
",
            "operationId": "deleteRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a rule.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleResponse": {
                        "$ref": "#/components/examples/get_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a rule by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you create a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If a user with different privileges updates the rule, its behavior might change.
",
            "operationId": "createRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.
",
                "in": "path",
                "name": "ruleId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createCaseRequest": {
                      "$ref": "#/components/examples/create_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/create_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createRuleResponse": {
                        "$ref": "#/components/examples/create_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a rule.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're updating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you update a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If you have different privileges than the user that created or most recently updated the rule, you might change its behavior. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.
",
            "operationId": "updateRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateCaseRequest": {
                      "$ref": "#/components/examples/update_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/update_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "updateRuleResponse": {
                        "$ref": "#/components/examples/update_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_disable": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "disableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_enable": {
          "post": {
            "description": "This API supports token-based authentication only. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "enableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all": {
          "post": {
            "description": "This API snoozes the notifications for the rule indefinitely. The rule checks continue to occur but alerts will not trigger any actions. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all": {
          "post": {
            "description": "If the rule has its notifications snoozed indefinitely, this API cancels the snooze. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule_types": {
          "get": {
            "description": "If you have \`read\` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRuleTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleTypesResponse": {
                        "$ref": "#/components/examples/get_rule_types_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "action_groups": {
                            "description": "An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "action_variables": {
                            "description": "A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                    "useWithTripleBracesInTemplates": {
                                      "type": "boolean",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorized_consumers": {
                            "description": "The list of the plugins IDs that have access to the rule type.",
                            "properties": {
                              "alerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "apm": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "discover": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "infrastructure": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "logs": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "ml": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "monitoring": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "siem": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "stackAlerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "uptime": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "default_action_group_id": {
                            "description": "The default identifier for the rule type group.",
                            "type": "string",
                          },
                          "does_set_recovery_context": {
                            "description": "Indicates whether the rule passes context variables to its recovery action.",
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the rule type is enabled or disabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the rule type.",
                            "type": "string",
                          },
                          "is_exportable": {
                            "description": "Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.",
                            "type": "boolean",
                          },
                          "minimum_license_required": {
                            "description": "The subscriptions required to use the rule type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the rule type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this rule type.",
                            "example": "stackAlerts",
                            "type": "string",
                          },
                          "recovery_action_group": {
                            "description": "An action group to use when an alert goes from an active state to an inactive one.",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "rule_task_timeout": {
                            "example": "5m",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of rule types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rules/_find": {
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "findRules",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the simple_query_string.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of rules to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the simple_query_string parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "findRulesResponse": {
                        "$ref": "#/components/examples/find_rules_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/rule_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "per_page": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves information about rules.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
",
            "operationId": "legaryDeleteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Permanently removes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule API instead.",
            "operationId": "legacyGetAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves an alert by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create rule API instead.",
            "operationId": "legacyCreateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "description": "An UUID v1 or v4 identifier for the alert. If this parameter is omitted, the identifier is randomly generated.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "alertTypeId": {
                        "description": "The ID of the alert type that you want to call when the alert is scheduled to run.",
                        "type": "string",
                      },
                      "consumer": {
                        "description": "The name of the application that owns the alert. This name has to match the Kibana feature name, as that dictates the required role-based access control privileges.",
                        "type": "string",
                      },
                      "enabled": {
                        "description": "Indicates if you want to run the alert on an interval basis after it is created.",
                        "type": "boolean",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "10s",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "alertTypeId",
                      "consumer",
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy create alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Create an alert.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update rule API instead.",
            "operationId": "legacyUpdateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "1d",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy update alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_disable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the disable rule API instead.",
            "operationId": "legacyDisableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_enable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the enable rule API instead.",
            "operationId": "legacyEnableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_mute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute all alerts API instead.",
            "operationId": "legacyMuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute all alerts API instead.",
            "operationId": "legacyUnmuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute alert API instead.",
            "operationId": "legacyMuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute alert API instead.",
            "operationId": "legacyUnmuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_find": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert \`params\` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
",
            "operationId": "legacyFindAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the \`simple_query_string\`.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of alerts to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch \`simple_query_string\` query that filters the alerts in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the \`simple_query_string\` parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/alert_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "perPage": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a paginated set of alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_health": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get alerting framework health API instead.",
            "operationId": "legacyGetAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "alertingFrameworkHealth": {
                          "description": "Three substates identify the health of the alerting framework: \`decryptionHealth\`, \`executionHealth\`, and \`readHealth\`.
",
                          "properties": {
                            "decryptionHealth": {
                              "description": "The timestamp and status of the alert decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "executionHealth": {
                              "description": "The timestamp and status of the alert execution.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "readHealth": {
                              "description": "The timestamp and status of the alert reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "hasPermanentEncryptionKey": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "isSufficientlySecure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/list_alert_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule types API instead.",
            "operationId": "legacyGetAlertTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "actionGroups": {
                            "description": "An explicit list of groups for which the alert type can schedule actions, each with the action group's unique ID and human readable name. Alert actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "actionVariables": {
                            "description": "A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorizedConsumers": {
                            "description": "The list of the plugins IDs that have access to the alert type.",
                            "type": "object",
                          },
                          "defaultActionGroupId": {
                            "description": "The default identifier for the alert type group.",
                            "type": "string",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the rule type is enabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the alert type.",
                            "type": "string",
                          },
                          "isExportable": {
                            "description": "Indicates whether the alert type is exportable in Saved Objects Management UI.",
                            "type": "boolean",
                          },
                          "minimumLicenseRequired": {
                            "description": "The subscriptions required to use the alert type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the alert type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this alert type.",
                            "type": "string",
                          },
                          "recoveryActionGroup": {
                            "description": "An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of alert types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Alerting APIs enable you to create and manage rules and alerts.",
          "name": "alerting",
        },
      ],
    },
    "fileName": "openapi/rules/bundled.yaml",
    "openApi": {
      "components": {
        "examples": {
          "create_rule_request": {
            "summary": "Create an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert '{{alertName}}' is active for group '{{context.group}}':

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "consumer": "alerts",
              "name": "my rule",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "tags": [
                "cpu",
              ],
            },
          },
          "create_rule_response": {
            "summary": "The create rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group} :

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-06-08T17:20:31.632Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_execution_date": "2022-06-08T17:20:31.632Z",
                "status": "pending",
              },
              "id": "41893910-6bca-11eb-9e0d-85d233e3ee35",
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my rule",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 0,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "425b0800-6bca-11eb-9e0d-85d233e3ee35",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-06-08T17:20:31.632Z",
              "updated_by": "elastic",
            },
          },
          "find_rules_response": {
            "summary": "Retrieve information about a rule.",
            "value": {
              "data": [
                {
                  "actions": [
                    {
                      "group": "threshold met",
                      "id": "9dca3e00-74f5-11ed-9801-35303b735aef",
                      "params": {
                        "connector_type_id": ".server-log",
                        "level": "info",
                        "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                      },
                      "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                    },
                  ],
                  "api_key_created_by_user": false,
                  "api_key_owner": "elastic",
                  "consumer": "alerts",
                  "created_at": "2022-12-05T23:40:33.132Z",
                  "created_by": "elastic",
                  "enabled": true,
                  "execution_status": {
                    "last_duration": 48,
                    "last_execution_date": "2022-12-06T01:44:23.983Z",
                    "status": "ok",
                  },
                  "id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "last_run": {
                    "alerts_count": {
                      "active": 0,
                      "ignored": 0,
                      "new": 0,
                      "recovered": 0,
                    },
                    "outcome": "succeeded",
                    "outcome_msg": null,
                    "warning": null,
                  },
                  "mute_all": false,
                  "muted_alert_ids": [],
                  "name": "my alert",
                  "next_run": "2022-12-06T01:45:23.912Z",
                  "notify_when": "onActionGroupChange",
                  "params": {
                    "aggField": "sheet.version",
                    "aggType": "avg",
                    "groupBy": "top",
                    "index": [
                      "test-index",
                    ],
                    "termField": "name.keyword",
                    "termSize": 6,
                    "threshold": [
                      1000,
                    ],
                    "thresholdComparator": ">",
                    "timeField": "@timestamp",
                    "timeWindowSize": 5,
                    "timeWindowUnit": "m",
                  },
                  "revision": 1,
                  "rule_type_id": ".index-threshold",
                  "schedule": {
                    "interval": "1m",
                  },
                  "scheduled_task_id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "tags": [
                    "cpu",
                  ],
                  "throttle": null,
                  "updated_at": "2022-12-05T23:40:33.132Z",
                  "updated_by": "elastic",
                },
              ],
              "page": 1,
              "per_page": 10,
              "total": 1,
            },
          },
          "get_health_response": {
            "summary": "Retrieve information about the health of the alerting framework.",
            "value": {
              "alerting_framework_health": {
                "decryption_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "execution_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "read_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
              },
              "has_permanent_encryption_key": true,
              "is_sufficiently_secure": true,
            },
          },
          "get_rule_response": {
            "summary": "The get rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "group": "threshold met",
                  "id": "1007a0c0-7a6e-11ed-89d5-abec321c0def",
                  "params": {
                    "connector_type_id": ".server-log",
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-12-13T22:33:41.163Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 83,
                "last_execution_date": "2022-12-13T22:33:44.388Z",
                "status": "ok",
              },
              "id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my alert",
              "next_run": "2022-12-13T22:34:44.314Z",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  "test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-12-13T22:33:41.163Z",
              "updated_by": "elastic",
            },
          },
          "get_rule_types_response": {
            "summary": "Retrieve rule types associated with Kibana machine learning features",
            "value": [
              {
                "action_groups": [
                  {
                    "id": "anomaly_score_match",
                    "name": "Anomaly score matched the condition",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "The bucket timestamp of the anomaly",
                      "name": "timestamp",
                    },
                    {
                      "description": "The bucket time of the anomaly in ISO8601 format",
                      "name": "timestampIso8601",
                    },
                    {
                      "description": "List of job IDs that triggered the alert",
                      "name": "jobIds",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                    {
                      "description": "Indicate if top hits contain interim results",
                      "name": "isInterim",
                    },
                    {
                      "description": "Anomaly score at the time of the notification action",
                      "name": "score",
                    },
                    {
                      "description": "Top records",
                      "name": "topRecords",
                    },
                    {
                      "description": "Top influencers",
                      "name": "topInfluencers",
                    },
                    {
                      "description": "URL to open in the Anomaly Explorer",
                      "name": "anomalyExplorerUrl",
                      "useWithTripleBracesInTemplates": true,
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_score_match",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_alert",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection alert",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
              {
                "action_groups": [
                  {
                    "id": "anomaly_detection_realtime_issue",
                    "name": "Issue detected",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "Results of the rule execution",
                      "name": "results",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_detection_realtime_issue",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_jobs_health",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection jobs health",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
            ],
          },
          "update_rule_request": {
            "summary": "Update an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "name": "new name",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "schedule": {
                "interval": "1m",
              },
              "tags": [],
              "throttle": null,
            },
          },
          "update_rule_response": {
            "summary": "The update rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "connector_type_id": ".server-log",
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2023-01-31T23:03:33.127Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 52,
                "last_execution_date": "2023-01-31T23:48:42.499Z",
                "status": "ok",
              },
              "id": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "new name",
              "next_run": "2023-01-31T23:49:42.432Z",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".updated-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "10m",
              },
              "scheduled_task_id": "4c5eda00-e74f-11ec-b72f-5b18752ff9ea",
              "tags": [],
              "throttle": null,
              "updated_at": "2023-01-31T23:55:27.314Z",
              "updated_by": "elastic",
            },
          },
        },
        "parameters": {
          "alert_id": {
            "description": "An identifier for the alert. The identifier is generated by the rule and might be any arbitrary string.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "rule_id": {
            "description": "An identifier for the rule.",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "schemas": {
          "401_response": {
            "properties": {
              "error": {
                "enum": [
                  "Unauthorized",
                ],
                "example": "Unauthorized",
                "type": "string",
              },
              "message": {
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  401,
                ],
                "example": 401,
                "type": "integer",
              },
            },
            "title": "Unsuccessful rule API response",
            "type": "object",
          },
          "404_response": {
            "properties": {
              "error": {
                "enum": [
                  "Not Found",
                ],
                "example": "Not Found",
                "type": "string",
              },
              "message": {
                "example": "Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found",
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  404,
                ],
                "example": 404,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "actions": {
            "default": [],
            "items": {
              "properties": {
                "connector_type_id": {
                  "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                  "example": ".server-log",
                  "readOnly": true,
                  "type": "string",
                },
                "frequency": {
                  "description": "The parameters that affect how often actions are generated. NOTE: You cannot specify these parameters when \`notify_when\` or \`throttle\` are defined at the rule level.
",
                  "properties": {
                    "notify_when": {
                      "$ref": "#/components/schemas/notify_when",
                    },
                    "summary": {
                      "description": "Indicates whether the action is a summary.",
                      "type": "boolean",
                    },
                    "throttle": {
                      "$ref": "#/components/schemas/throttle",
                    },
                  },
                  "required": [
                    "notify_when",
                    "summary",
                  ],
                  "type": "object",
                },
                "group": {
                  "description": "The group name for the actions. If you don't need to group actions, set to \`default\`.",
                  "example": "default",
                  "type": "string",
                },
                "id": {
                  "description": "The identifier for the connector saved object.",
                  "example": "9dca3e00-74f5-11ed-9801-35303b735aef",
                  "type": "string",
                },
                "params": {
                  "additionalProperties": true,
                  "description": "The parameters for the action, which are sent to the connector. The \`params\` are handled as Mustache templates and passed a default set of context.",
                  "type": "object",
                },
                "uuid": {
                  "description": "A universally unique identifier (UUID) for the action.",
                  "example": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "nullable": true,
            "required": [
              "group",
              "id",
              "params",
            ],
            "type": "array",
          },
          "alert_response_properties": {
            "properties": {
              "actions": {
                "items": {
                  "type": "object",
                },
                "type": "array",
              },
              "alertTypeId": {
                "example": ".index-threshold",
                "type": "string",
              },
              "apiKeyOwner": {
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "createdAt": {
                "description": "The date and time that the alert was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "createdBy": {
                "description": "The identifier for the user that created the alert.",
                "example": "elastic",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the alert is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "executionStatus": {
                "properties": {
                  "lastExecutionDate": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the alert.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "muteAll": {
                "example": false,
                "type": "boolean",
              },
              "mutedInstanceIds": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the alert.",
                "example": "my alert",
                "type": "string",
              },
              "notifyWhen": {
                "example": "onActionGroupChange",
                "type": "string",
              },
              "params": {
                "additionalProperties": true,
                "type": "object",
              },
              "schedule": {
                "properties": {
                  "interval": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "scheduledTaskId": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "throttle": {
                "nullable": true,
                "type": "string",
              },
              "updatedAt": {
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updatedBy": {
                "description": "The identifier for the user that updated this alert most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "title": "Legacy alert response properties",
            "type": "object",
          },
          "create_rule_request": {
            "description": "The create rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "consumer": {
                "description": "The name of the application or feature that owns the rule. For example: \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.
",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                "type": "boolean",
              },
              "name": {
                "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/params_property_index_threshold",
                  },
                ],
                "type": "object",
              },
              "rule_type_id": {
                "description": "The ID of the rule type that you want to call when the rule is scheduled to run. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "type": "string",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "consumer",
              "name",
              "params",
              "rule_type_id",
              "schedule",
            ],
            "title": "Create rule request",
            "type": "object",
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: \`onActionGroupChange\`: Actions run when the alert status changes; \`onActiveAlert\`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; \`onThrottleInterval\`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met.
",
            "enum": [
              "onActionGroupChange",
              "onActiveAlert",
              "onThrottleInterval",
            ],
            "example": "onActiveAlert",
            "type": "string",
          },
          "params_property_index_threshold": {
            "properties": {
              "aggField": {
                "type": "string",
              },
              "aggType": {
                "type": "string",
              },
              "groupBy": {
                "type": "string",
              },
              "index": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "termField": {
                "type": "string",
              },
              "termSize": {
                "type": "number",
              },
              "threshold": {
                "items": {
                  "type": "number",
                },
                "type": "array",
              },
              "thresholdComparator": {
                "type": "string",
              },
              "timeField": {
                "type": "string",
              },
              "timeWindowSize": {
                "type": "number",
              },
              "timeWindowUnit": {
                "type": "string",
              },
            },
          },
          "rule_response_properties": {
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "api_key_created_by_user": {
                "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                "example": false,
                "type": "boolean",
              },
              "api_key_owner": {
                "description": "The owner of the API key that is associated with the rule and used to run background tasks.
",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "consumer": {
                "description": "The application or feature that owns the rule. For example, \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.",
                "example": "alerts",
                "type": "string",
              },
              "created_at": {
                "description": "The date and time that the rule was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "created_by": {
                "description": "The identifier for the user that created the rule.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the rule is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "execution_status": {
                "properties": {
                  "last_duration": {
                    "example": 55,
                    "type": "integer",
                  },
                  "last_execution_date": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the rule.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "last_run": {
                "properties": {
                  "alerts_count": {
                    "properties": {
                      "active": {
                        "type": "integer",
                      },
                      "ignored": {
                        "type": "integer",
                      },
                      "new": {
                        "type": "integer",
                      },
                      "recovered": {
                        "type": "integer",
                      },
                    },
                    "type": "object",
                  },
                  "outcome": {
                    "example": "succeeded",
                    "type": "string",
                  },
                  "outcome_msg": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                  "warning": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "mute_all": {
                "example": false,
                "type": "boolean",
              },
              "muted_alert_ids": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "next_run": {
                "example": "2022-12-06T00:14:43.818Z",
                "format": "date-time",
                "nullable": true,
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "revision": {
                "description": "The rule revision number.",
                "type": "integer",
              },
              "rule_type_id": {
                "description": "The identifier for the type of rule. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "example": "monitoring_alert_cluster_health",
                "type": "string",
              },
              "running": {
                "description": "Indicates whether the rule is running.",
                "type": "boolean",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "scheduled_task_id": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
              "updated_at": {
                "description": "The date and time that the rule was updated most recently.",
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updated_by": {
                "description": "The identifier for the user that updated this rule most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "required": [
              "actions",
              "api_key_owner",
              "consumer",
              "created_at",
              "created_by",
              "enabled",
              "execution_status",
              "id",
              "mute_all",
              "muted_alert_ids",
              "name",
              "params",
              "rule_type_id",
              "schedule",
              "tags",
              "throttle",
              "updated_at",
              "updated_by",
            ],
            "title": "Rule response properties",
            "type": "object",
          },
          "schedule": {
            "description": "The check interval, which specifies how frequently the rule conditions are checked. The interval is specified in seconds, minutes, hours, or days.",
            "properties": {
              "interval": {
                "example": "1m",
                "type": "string",
              },
            },
            "type": "object",
          },
          "tags": {
            "default": [],
            "description": "The tags for the rule.",
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "throttle": {
            "default": null,
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is applicable only if \`notify_when\` is set to \`onThrottleInterval\`. It is specified in seconds, minutes, hours, or days.",
            "example": "10m",
            "nullable": true,
            "type": "string",
          },
          "update_rule_request": {
            "description": "The update rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "name",
              "params",
              "schedule",
            ],
            "title": "Update rule request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Alerting Team",
        },
        "description": "OpenAPI schema for alerting endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Alerting",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/alerting/_health": {
          "get": {
            "description": "You must have \`read\` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
",
            "operationId": "getAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getAlertingHealthResponse": {
                        "$ref": "#/components/examples/get_health_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "alerting_framework_health": {
                          "description": "Three substates identify the health of the alerting framework: \`decryption_health\`, \`execution_health\`, and \`read_health\`.
",
                          "properties": {
                            "decryption_health": {
                              "description": "The timestamp and status of the rule decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "execution_health": {
                              "description": "The timestamp and status of the rule run.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "read_health": {
                              "description": "The timestamp and status of the rule reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "has_permanent_encryption_key": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "is_sufficiently_secure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're deleting. For example, the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it.
",
            "operationId": "deleteRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a rule.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleResponse": {
                        "$ref": "#/components/examples/get_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a rule by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you create a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If a user with different privileges updates the rule, its behavior might change.
",
            "operationId": "createRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.
",
                "in": "path",
                "name": "ruleId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createCaseRequest": {
                      "$ref": "#/components/examples/create_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/create_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createRuleResponse": {
                        "$ref": "#/components/examples/create_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a rule.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're updating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you update a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If you have different privileges than the user that created or most recently updated the rule, you might change its behavior. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.
",
            "operationId": "updateRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateCaseRequest": {
                      "$ref": "#/components/examples/update_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/update_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "updateRuleResponse": {
                        "$ref": "#/components/examples/update_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_disable": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "disableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_enable": {
          "post": {
            "description": "This API supports token-based authentication only. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "enableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all": {
          "post": {
            "description": "This API snoozes the notifications for the rule indefinitely. The rule checks continue to occur but alerts will not trigger any actions. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all": {
          "post": {
            "description": "If the rule has its notifications snoozed indefinitely, this API cancels the snooze. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule_types": {
          "get": {
            "description": "If you have \`read\` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRuleTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleTypesResponse": {
                        "$ref": "#/components/examples/get_rule_types_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "action_groups": {
                            "description": "An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "action_variables": {
                            "description": "A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                    "useWithTripleBracesInTemplates": {
                                      "type": "boolean",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorized_consumers": {
                            "description": "The list of the plugins IDs that have access to the rule type.",
                            "properties": {
                              "alerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "apm": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "discover": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "infrastructure": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "logs": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "ml": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "monitoring": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "siem": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "stackAlerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "uptime": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "default_action_group_id": {
                            "description": "The default identifier for the rule type group.",
                            "type": "string",
                          },
                          "does_set_recovery_context": {
                            "description": "Indicates whether the rule passes context variables to its recovery action.",
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the rule type is enabled or disabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the rule type.",
                            "type": "string",
                          },
                          "is_exportable": {
                            "description": "Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.",
                            "type": "boolean",
                          },
                          "minimum_license_required": {
                            "description": "The subscriptions required to use the rule type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the rule type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this rule type.",
                            "example": "stackAlerts",
                            "type": "string",
                          },
                          "recovery_action_group": {
                            "description": "An action group to use when an alert goes from an active state to an inactive one.",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "rule_task_timeout": {
                            "example": "5m",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of rule types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rules/_find": {
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "findRules",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the simple_query_string.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of rules to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the simple_query_string parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "findRulesResponse": {
                        "$ref": "#/components/examples/find_rules_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/rule_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "per_page": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves information about rules.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
",
            "operationId": "legaryDeleteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Permanently removes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule API instead.",
            "operationId": "legacyGetAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves an alert by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create rule API instead.",
            "operationId": "legacyCreateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "description": "An UUID v1 or v4 identifier for the alert. If this parameter is omitted, the identifier is randomly generated.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "alertTypeId": {
                        "description": "The ID of the alert type that you want to call when the alert is scheduled to run.",
                        "type": "string",
                      },
                      "consumer": {
                        "description": "The name of the application that owns the alert. This name has to match the Kibana feature name, as that dictates the required role-based access control privileges.",
                        "type": "string",
                      },
                      "enabled": {
                        "description": "Indicates if you want to run the alert on an interval basis after it is created.",
                        "type": "boolean",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "10s",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "alertTypeId",
                      "consumer",
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy create alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Create an alert.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update rule API instead.",
            "operationId": "legacyUpdateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "1d",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy update alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_disable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the disable rule API instead.",
            "operationId": "legacyDisableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_enable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the enable rule API instead.",
            "operationId": "legacyEnableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_mute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute all alerts API instead.",
            "operationId": "legacyMuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute all alerts API instead.",
            "operationId": "legacyUnmuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute alert API instead.",
            "operationId": "legacyMuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute alert API instead.",
            "operationId": "legacyUnmuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_find": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert \`params\` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
",
            "operationId": "legacyFindAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the \`simple_query_string\`.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of alerts to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch \`simple_query_string\` query that filters the alerts in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the \`simple_query_string\` parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/alert_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "perPage": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a paginated set of alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_health": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get alerting framework health API instead.",
            "operationId": "legacyGetAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "alertingFrameworkHealth": {
                          "description": "Three substates identify the health of the alerting framework: \`decryptionHealth\`, \`executionHealth\`, and \`readHealth\`.
",
                          "properties": {
                            "decryptionHealth": {
                              "description": "The timestamp and status of the alert decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "executionHealth": {
                              "description": "The timestamp and status of the alert execution.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "readHealth": {
                              "description": "The timestamp and status of the alert reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "hasPermanentEncryptionKey": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "isSufficientlySecure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/list_alert_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule types API instead.",
            "operationId": "legacyGetAlertTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "actionGroups": {
                            "description": "An explicit list of groups for which the alert type can schedule actions, each with the action group's unique ID and human readable name. Alert actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "actionVariables": {
                            "description": "A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorizedConsumers": {
                            "description": "The list of the plugins IDs that have access to the alert type.",
                            "type": "object",
                          },
                          "defaultActionGroupId": {
                            "description": "The default identifier for the alert type group.",
                            "type": "string",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the rule type is enabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the alert type.",
                            "type": "string",
                          },
                          "isExportable": {
                            "description": "Indicates whether the alert type is exportable in Saved Objects Management UI.",
                            "type": "boolean",
                          },
                          "minimumLicenseRequired": {
                            "description": "The subscriptions required to use the alert type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the alert type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this alert type.",
                            "type": "string",
                          },
                          "recoveryActionGroup": {
                            "description": "An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of alert types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Alerting APIs enable you to create and manage rules and alerts.",
          "name": "alerting",
        },
      ],
    },
    "yaml": "openapi: 3.0.1
info:
  title: Alerting
  description: OpenAPI schema for alerting endpoints
  version: \\"0.1\\"
  contact:
    name: Alerting Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
tags:
  - name: alerting
    description: Alerting APIs enable you to create and manage rules and alerts.
servers:
  - url: http://localhost:5601
    description: local
paths:
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}\\":
    get:
      summary: Retrieves a rule by its identifier.
      operationId: getRule
      description: >
        You must have \`read\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rules you're
        seeking. For example, the **Management > Stack Rules** feature,
        **Analytics > Discover** and **Machine Learning** features,
        **Observability** features, or **Security** features. To get rules
        associated with the **Stack Monitoring** feature, use the
        \`monitoring_user\` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/rule_response_properties\\"
              examples:
                getRuleResponse:
                  $ref: \\"#/components/examples/get_rule_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    delete:
      summary: Deletes a rule.
      operationId: deleteRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule you're
        deleting. For example, the **Management** > **Stack Rules** feature,
        **Analytics** > **Discover** or **Machine Learning** features,
        **Observability**, or **Security** features. WARNING: After you delete a
        rule, you cannot recover it.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    post:
      summary: Creates a rule.
      operationId: createRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule you're
        creating. For example, you must have privileges for the **Management >
        Stack rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, or **Security** features.  If the
        rule has actions, you must also have \`read\` privileges for the
        **Management > Actions and Connectors** feature. NOTE: This API supports
        only token-based authentication. When you create a rule, it identifies
        which roles you have at that point in time. Thereafter, when the rule
        performs queries, it uses those security privileges. If a user with
        different privileges updates the rule, its behavior might change.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: ruleId
          description: >
            An UUID v1 or v4 identifier for the rule. If you omit this
            parameter, an identifier is randomly generated.
          required: true
          schema:
            type: string
            example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: \\"#/components/schemas/create_rule_request\\"
            examples:
              createCaseRequest:
                $ref: \\"#/components/examples/create_rule_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/rule_response_properties\\"
              examples:
                createRuleResponse:
                  $ref: \\"#/components/examples/create_rule_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for a rule.
      operationId: updateRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule you're
        updating. For example, you must have privileges for the **Management >
        Stack rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, or **Security** features.  If the
        rule has actions, you must also have \`read\` privileges for the
        **Management > Actions and Connectors** feature. NOTE: This API supports
        only token-based authentication. When you update a rule, it identifies
        which roles you have at that point in time. Thereafter, when the rule
        performs queries, it uses those security privileges. If you have
        different privileges than the user that created or most recently updated
        the rule, you might change its behavior. Though some properties are
        optional, when you update the rule the existing property values are
        overwritten with default values. Therefore, it is recommended to
        explicitly set all property values.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: \\"#/components/schemas/update_rule_request\\"
            examples:
              updateCaseRequest:
                $ref: \\"#/components/examples/update_rule_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/rule_response_properties\\"
              examples:
                updateRuleResponse:
                  $ref: \\"#/components/examples/update_rule_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_disable\\":
    post:
      summary: Disables a rule.
      operationId: disableRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_enable\\":
    post:
      summary: Enables a rule.
      operationId: enableRule
      description: >
        This API supports token-based authentication only. You must have \`all\`
        privileges for the appropriate Kibana features, depending on the
        \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management
        > Stack Rules** feature, **Analytics > Discover** and **Machine
        Learning** features, **Observability**, and **Security** features.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rules/_find\\":
    get:
      summary: Retrieves information about rules.
      operationId: findRules
      description: >
        You must have \`read\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rules you're
        seeking. For example, you must have privileges for the **Management >
        Stack rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, or **Security** features. To find
        rules associated with the **Stack Monitoring** feature, use the
        \`monitoring_user\` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - name: default_search_operator
          in: query
          description: The default operator to use for the simple_query_string.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the \`attributes\` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: >
            A KQL string that you filter with an attribute from your saved
            object. It should look like \`savedObjectType.attributes.title:
            \\"myTitle\\"\`. However, if you used a direct attribute of a saved
            object, such as \`updatedAt\`, you must define your filter, for
            example, \`savedObjectType.updatedAt > 2018-12-22\`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects
            with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of rules to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch simple_query_string query that filters the objects
            in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the simple_query_string parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: >
            Determines which field is used to sort the results. The field must
            exist in the \`attributes\` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: \\"#/components/schemas/rule_response_properties\\"
                  page:
                    type: integer
                  per_page:
                    type: integer
                  total:
                    type: integer
              examples:
                findRulesResponse:
                  $ref: \\"#/components/examples/find_rules_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/_health\\":
    get:
      summary: Retrieves the health status of the alerting framework.
      operationId: getAlertingHealth
      description: >
        You must have \`read\` privileges for the **Management > Stack Rules**
        feature or for at least one of the **Analytics > Discover**, **Analytics
        > Machine Learning**, **Observability**, or **Security** features.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerting_framework_health:
                    type: object
                    description: >
                      Three substates identify the health of the alerting
                      framework: \`decryption_health\`, \`execution_health\`, and
                      \`read_health\`.
                    properties:
                      decryption_health:
                        type: object
                        description: The timestamp and status of the rule decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      execution_health:
                        type: object
                        description: The timestamp and status of the rule run.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      read_health:
                        type: object
                        description: The timestamp and status of the rule reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                  has_permanent_encryption_key:
                    type: boolean
                    description: If \`false\`, the encrypted saved object plugin does not have a
                      permanent encryption key.
                    example: true
                  is_sufficiently_secure:
                    type: boolean
                    description: If \`false\`, security is enabled but TLS is not.
                    example: true
              examples:
                getAlertingHealthResponse:
                  $ref: \\"#/components/examples/get_health_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule_types\\":
    get:
      summary: Retrieves a list of rule types.
      operationId: getRuleTypes
      description: >
        If you have \`read\` privileges for one or more Kibana features, the API
        response contains information about the appropriate rule types. For
        example, there are rule types associated with the **Management > Stack
        Rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, and **Security** features. To get
        rule types associated with the **Stack Monitoring** feature, use the
        \`monitoring_user\` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    action_groups:
                      description: >
                        An explicit list of groups for which the rule type can
                        schedule actions, each with the action group's unique ID
                        and human readable name. Rule actions validation uses
                        this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    action_variables:
                      description: >
                        A list of action variables that the rule type makes
                        available via context and state in action parameter
                        templates, and a short human readable description. When
                        you create a rule in Kibana, it uses this information to
                        prompt you for these variables in action parameter
                        editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                              useWithTripleBracesInTemplates:
                                type: boolean
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    authorized_consumers:
                      description: The list of the plugins IDs that have access to the rule type.
                      type: object
                      properties:
                        alerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        apm:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        discover:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        infrastructure:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        logs:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        ml:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        monitoring:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        siem:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        stackAlerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        uptime:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                    default_action_group_id:
                      description: The default identifier for the rule type group.
                      type: string
                    does_set_recovery_context:
                      description: Indicates whether the rule passes context variables to its recovery
                        action.
                      type: boolean
                    enabled_in_license:
                      description: Indicates whether the rule type is enabled or disabled based on the
                        subscription.
                      type: boolean
                    id:
                      description: The unique identifier for the rule type.
                      type: string
                    is_exportable:
                      description: Indicates whether the rule type is exportable in **Stack Management
                        > Saved Objects**.
                      type: boolean
                    minimum_license_required:
                      description: The subscriptions required to use the rule type.
                      type: string
                      example: basic
                    name:
                      description: The descriptive name of the rule type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this rule type.
                      type: string
                      example: stackAlerts
                    recovery_action_group:
                      description: An action group to use when an alert goes from an active state to
                        an inactive one.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    rule_task_timeout:
                      type: string
                      example: 5m
              examples:
                getRuleTypesResponse:
                  $ref: \\"#/components/examples/get_rule_types_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all\\":
    post:
      summary: Mutes all alerts.
      operationId: muteAllAlerts
      description: >
        This API snoozes the notifications for the rule indefinitely. The rule
        checks continue to occur but alerts will not trigger any actions. You
        must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features. If the rule has actions, you must also have \`read\` privileges
        for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all\\":
    post:
      summary: Unmutes all alerts.
      operationId: unmuteAllAlerts
      description: >
        If the rule has its notifications snoozed indefinitely, this API cancels
        the snooze. You must have \`all\` privileges for the appropriate Kibana
        features, depending on the \`consumer\` and \`rule_type_id\` of the rule.
        For example, the **Management > Stack Rules** feature, **Analytics >
        Discover** and **Machine Learning** features, **Observability**, and
        **Security** features. If the rule has actions, you must also have
        \`read\` privileges for the **Management > Actions and Connectors**
        feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute\\":
    post:
      summary: Mutes an alert.
      operationId: muteAlert
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features. If the rule has actions, you must also have \`read\` privileges
        for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/alert_id\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute\\":
    post:
      summary: Unmutes an alert.
      operationId: unmuteAlert
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features. If the rule has actions, you must also have \`read\` privileges
        for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/alert_id\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}\\":
    delete:
      summary: Permanently removes an alert.
      operationId: legaryDeleteAlert
      deprecated: true
      description: >
        Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After
        you delete an alert, you cannot recover it.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    get:
      summary: Retrieves an alert by its identifier.
      operationId: legacyGetAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/alert_response_properties\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    post:
      summary: Create an alert.
      operationId: legacyCreateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the create rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - in: path
          name: alertId
          description: An UUID v1 or v4 identifier for the alert. If this parameter is
            omitted, the identifier is randomly generated.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy create alert request properties
              type: object
              required:
                - alertTypeId
                - consumer
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: >
                          Grouping actions is recommended for escalations for
                          different types of alert instances. If you don't need
                          this functionality, set it to \`default\`.
                      id:
                        type: string
                        description: The ID of the action saved object to execute.
                      params:
                        type: object
                        description: >
                          The map to the \`params\` that the action type will
                          receive. \`params\` are handled as Mustache templates
                          and passed a default set of context.
                alertTypeId:
                  type: string
                  description: The ID of the alert type that you want to call when the alert is
                    scheduled to run.
                consumer:
                  type: string
                  description: The name of the application that owns the alert. This name has to
                    match the Kibana feature name, as that dictates the required
                    role-based access control privileges.
                enabled:
                  type: boolean
                  description: Indicates if you want to run the alert on an interval basis after
                    it is created.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor \`params\` value.
                    This will also validate against the alert type params
                    validator, if defined.
                schedule:
                  type: object
                  description: >
                    The schedule specifying when this alert should be run. A
                    schedule is structured such that the key specifies the
                    format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes,
                        hours or days at which the alert should execute.
                      example: 10s
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: >
                    How often this alert should fire the same actions. This will
                    prevent the alert from sending out the same notification
                    over and over. For example, if an alert with a schedule of 1
                    minute stays in a triggered state for 90 minutes, setting a
                    throttle of \`10m\` or \`1h\` will prevent it from sending 90
                    notifications during this period.
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/alert_response_properties\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for an alert.
      operationId: legacyUpdateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the update rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy update alert request properties
              type: object
              required:
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: >
                          Grouping actions is recommended for escalations for
                          different types of alert instances. If you don't need
                          this functionality, set it to \`default\`.
                      id:
                        type: string
                        description: The ID of the action saved object to execute.
                      params:
                        type: object
                        description: >
                          The map to the \`params\` that the action type will
                          receive. \`params\` are handled as Mustache templates
                          and passed a default set of context.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor \`params\` value.
                    This will also validate against the alert type params
                    validator, if defined.
                schedule:
                  type: object
                  description: >
                    The schedule specifying when this alert should be run. A
                    schedule is structured such that the key specifies the
                    format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes,
                        hours or days at which the alert should execute.
                      example: 1d
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: >
                    How often this alert should fire the same actions. This will
                    prevent the alert from sending out the same notification
                    over and over. For example, if an alert with a schedule of 1
                    minute stays in a triggered state for 90 minutes, setting a
                    throttle of \`10m\` or \`1h\` will prevent it from sending 90
                    notifications during this period.
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/alert_response_properties\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_disable\\":
    post:
      summary: Disables an alert.
      operationId: legacyDisableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the disable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_enable\\":
    post:
      summary: Enables an alert.
      operationId: legacyEnableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the enable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_mute_all\\":
    post:
      summary: Mutes all alert instances.
      operationId: legacyMuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all\\":
    post:
      summary: Unmutes all alert instances.
      operationId: legacyUnmuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alerts/_find\\":
    get:
      summary: Retrieves a paginated set of alerts.
      operationId: legacyFindAlerts
      deprecated: true
      description: >
        Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert
        \`params\` are stored as a flattened field type and analyzed as keywords.
        As alerts change in Kibana, the results on each page of the response
        also change. Use the find API for traditional paginated results, but
        avoid using it to export large amounts of data.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - name: default_search_operator
          in: query
          description: The default operator to use for the \`simple_query_string\`.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the \`attributes\` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: >
            A KQL string that you filter with an attribute from your saved
            object. It should look like \`savedObjectType.attributes.title:
            \\"myTitle\\"\`. However, if you used a direct attribute of a saved
            object, such as \`updatedAt\`, you must define your filter, for
            example, \`savedObjectType.updatedAt > 2018-12-22\`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects
            with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of alerts to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch \`simple_query_string\` query that filters the
            alerts in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the \`simple_query_string\` parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: >
            Determines which field is used to sort the results. The field must
            exist in the \`attributes\` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: \\"#/components/schemas/alert_response_properties\\"
                  page:
                    type: integer
                  perPage:
                    type: integer
                  total:
                    type: integer
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alerts/_health\\":
    get:
      summary: Retrieves the health status of the alerting framework.
      operationId: legacyGetAlertingHealth
      deprecated: true
      description: Deprecated in 7.13.0. Use the get alerting framework health API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alertingFrameworkHealth:
                    type: object
                    description: >
                      Three substates identify the health of the alerting
                      framework: \`decryptionHealth\`, \`executionHealth\`, and
                      \`readHealth\`.
                    properties:
                      decryptionHealth:
                        type: object
                        description: The timestamp and status of the alert decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      executionHealth:
                        type: object
                        description: The timestamp and status of the alert execution.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      readHealth:
                        type: object
                        description: The timestamp and status of the alert reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                  hasPermanentEncryptionKey:
                    type: boolean
                    description: If \`false\`, the encrypted saved object plugin does not have a
                      permanent encryption key.
                    example: true
                  isSufficientlySecure:
                    type: boolean
                    description: If \`false\`, security is enabled but TLS is not.
                    example: true
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alerts/list_alert_types\\":
    get:
      summary: Retrieves a list of alert types.
      operationId: legacyGetAlertTypes
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule types API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    actionGroups:
                      description: >
                        An explicit list of groups for which the alert type can
                        schedule actions, each with the action group's unique ID
                        and human readable name. Alert actions validation uses
                        this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    actionVariables:
                      description: >
                        A list of action variables that the alert type makes
                        available via context and state in action parameter
                        templates, and a short human readable description. The
                        Alert UI will use this information to prompt users for
                        these variables in action parameter editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    authorizedConsumers:
                      description: The list of the plugins IDs that have access to the alert type.
                      type: object
                    defaultActionGroupId:
                      description: The default identifier for the alert type group.
                      type: string
                    enabledInLicense:
                      description: Indicates whether the rule type is enabled based on the
                        subscription.
                      type: boolean
                    id:
                      description: The unique identifier for the alert type.
                      type: string
                    isExportable:
                      description: Indicates whether the alert type is exportable in Saved Objects
                        Management UI.
                      type: boolean
                    minimumLicenseRequired:
                      description: The subscriptions required to use the alert type.
                      type: string
                    name:
                      description: The descriptive name of the alert type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this alert type.
                      type: string
                    recoveryActionGroup:
                      description: >
                        An action group to use when an alert instance goes from
                        an active state to an inactive one. If it is not
                        specified, the default recovered action group is used.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute\\":
    post:
      summary: Mutes an alert instance.
      operationId: legacyMuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute\\":
    post:
      summary: Unmutes an alert instance.
      operationId: legacyUnmuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: ApiKey
  parameters:
    rule_id:
      in: path
      name: ruleId
      description: An identifier for the rule.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
    space_id:
      in: path
      name: spaceId
      description: An identifier for the space. If \`/s/\` and the identifier are
        omitted from the path, the default space is used.
      required: true
      schema:
        type: string
        example: default
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
    alert_id:
      in: path
      name: alertId
      description: An identifier for the alert. The identifier is generated by the
        rule and might be any arbitrary string.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
  schemas:
    notify_when:
      type: string
      description: >
        Indicates how often alerts generate actions. Valid values include:
        \`onActionGroupChange\`: Actions run when the alert status changes;
        \`onActiveAlert\`: Actions run when the alert becomes active and at each
        check interval while the rule conditions are met; \`onThrottleInterval\`:
        Actions run when the alert becomes active and at the interval specified
        in the throttle property while the rule conditions are met.
      enum:
        - onActionGroupChange
        - onActiveAlert
        - onThrottleInterval
      example: onActiveAlert
    throttle:
      type: string
      description: The throttle interval, which defines how often an alert generates
        repeated actions. It is applicable only if \`notify_when\` is set to
        \`onThrottleInterval\`. It is specified in seconds, minutes, hours, or
        days.
      nullable: true
      default: null
      example: 10m
    actions:
      type: array
      default: []
      required:
        - group
        - id
        - params
      nullable: true
      items:
        type: object
        properties:
          connector_type_id:
            type: string
            description: The type of connector. This property appears in responses but
              cannot be set in requests.
            example: .server-log
            readOnly: true
          frequency:
            type: object
            description: >
              The parameters that affect how often actions are generated. NOTE:
              You cannot specify these parameters when \`notify_when\` or
              \`throttle\` are defined at the rule level.
            required:
              - notify_when
              - summary
            properties:
              notify_when:
                $ref: \\"#/components/schemas/notify_when\\"
              summary:
                type: boolean
                description: Indicates whether the action is a summary.
              throttle:
                $ref: \\"#/components/schemas/throttle\\"
          group:
            type: string
            description: The group name for the actions. If you don't need to group actions,
              set to \`default\`.
            example: default
          id:
            type: string
            description: The identifier for the connector saved object.
            example: 9dca3e00-74f5-11ed-9801-35303b735aef
          params:
            type: object
            description: The parameters for the action, which are sent to the connector. The
              \`params\` are handled as Mustache templates and passed a default
              set of context.
            additionalProperties: true
          uuid:
            type: string
            description: A universally unique identifier (UUID) for the action.
            example: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
    schedule:
      type: object
      description: The check interval, which specifies how frequently the rule
        conditions are checked. The interval is specified in seconds, minutes,
        hours, or days.
      properties:
        interval:
          type: string
          example: 1m
    tags:
      type: array
      description: The tags for the rule.
      items:
        type: string
      default: []
    rule_response_properties:
      title: Rule response properties
      type: object
      required:
        - actions
        - api_key_owner
        - consumer
        - created_at
        - created_by
        - enabled
        - execution_status
        - id
        - mute_all
        - muted_alert_ids
        - name
        - params
        - rule_type_id
        - schedule
        - tags
        - throttle
        - updated_at
        - updated_by
      properties:
        actions:
          $ref: \\"#/components/schemas/actions\\"
        api_key_created_by_user:
          type: boolean
          description: Indicates whether the API key that is associated with the rule was
            created by the user.
          example: false
        api_key_owner:
          type: string
          description: >
            The owner of the API key that is associated with the rule and used
            to run background tasks.
          nullable: true
          example: elastic
        consumer:
          type: string
          description: The application or feature that owns the rule. For example,
            \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`,
            \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or
            \`uptime\`.
          example: alerts
        created_at:
          type: string
          description: The date and time that the rule was created.
          format: date-time
          example: 2022-12-05T23:36:58.284Z
        created_by:
          type: string
          description: The identifier for the user that created the rule.
          nullable: true
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the rule is currently enabled.
          example: true
        execution_status:
          type: object
          properties:
            last_duration:
              type: integer
              example: 55
            last_execution_date:
              type: string
              format: date-time
              example: 2022-12-06T00:13:43.890Z
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the rule.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        last_run:
          type: object
          properties:
            alerts_count:
              type: object
              properties:
                active:
                  type: integer
                ignored:
                  type: integer
                new:
                  type: integer
                recovered:
                  type: integer
            outcome:
              type: string
              example: succeeded
            outcome_msg:
              type: string
              nullable: true
              example: null
            warning:
              type: string
              nullable: true
              example: null
        muted_alert_ids:
          type: array
          nullable: true
          items:
            type: string
        mute_all:
          type: boolean
          example: false
        name:
          type: string
          description: The name of the rule.
          example: cluster_health_rule
        next_run:
          type: string
          format: date-time
          nullable: true
          example: 2022-12-06T00:14:43.818Z
        notify_when:
          $ref: \\"#/components/schemas/notify_when\\"
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
        revision:
          type: integer
          description: The rule revision number.
        rule_type_id:
          type: string
          description: >
            The identifier for the type of rule. For example, \`.es-query\`,
            \`.index-threshold\`, \`logs.alert.document.count\`,
            \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or
            \`xpack.ml.anomaly_detection_alert\`.
          example: monitoring_alert_cluster_health
        running:
          type: boolean
          description: Indicates whether the rule is running.
        schedule:
          $ref: \\"#/components/schemas/schedule\\"
        scheduled_task_id:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          $ref: \\"#/components/schemas/tags\\"
        throttle:
          $ref: \\"#/components/schemas/throttle\\"
        updated_at:
          type: string
          description: The date and time that the rule was updated most recently.
          example: 2022-12-05T23:36:58.284Z
        updated_by:
          type: string
          description: The identifier for the user that updated this rule most recently.
          nullable: true
          example: elastic
    401_response:
      type: object
      title: Unsuccessful rule API response
      properties:
        error:
          type: string
          example: Unauthorized
          enum:
            - Unauthorized
        message:
          type: string
        statusCode:
          type: integer
          example: 401
          enum:
            - 401
    404_response:
      type: object
      properties:
        error:
          type: string
          example: Not Found
          enum:
            - Not Found
        message:
          type: string
          example: Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found
        statusCode:
          type: integer
          example: 404
          enum:
            - 404
    update_rule_request:
      title: Update rule request
      description: The update rule API request body varies depending on the type of
        rule and actions.
      type: object
      required:
        - name
        - params
        - schedule
      properties:
        actions:
          $ref: \\"#/components/schemas/actions\\"
        name:
          type: string
          description: The name of the rule.
          example: cluster_health_rule
        notify_when:
          $ref: \\"#/components/schemas/notify_when\\"
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
        schedule:
          $ref: \\"#/components/schemas/schedule\\"
        tags:
          $ref: \\"#/components/schemas/tags\\"
        throttle:
          $ref: \\"#/components/schemas/throttle\\"
    create_rule_request:
      title: Create rule request
      description: The create rule API request body varies depending on the type of
        rule and actions.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: \\"#/components/schemas/actions\\"
        consumer:
          type: string
          description: >
            The name of the application or feature that owns the rule. For
            example: \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`,
            \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`,
            \`stackAlerts\`, or \`uptime\`.
        enabled:
          type: boolean
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
        name:
          type: string
          description: The name of the rule. While this name does not have to be unique, a
            distinctive name can help you identify a rule.
          example: cluster_health_rule
        notify_when:
          $ref: \\"#/components/schemas/notify_when\\"
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
          oneOf:
            - $ref: \\"#/components/schemas/params_property_index_threshold\\"
        rule_type_id:
          type: string
          description: >
            The ID of the rule type that you want to call when the rule is
            scheduled to run. For example, \`.es-query\`, \`.index-threshold\`,
            \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`,
            \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
        schedule:
          $ref: \\"#/components/schemas/schedule\\"
        tags:
          $ref: \\"#/components/schemas/tags\\"
        throttle:
          $ref: \\"#/components/schemas/throttle\\"
    alert_response_properties:
      title: Legacy alert response properties
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
        alertTypeId:
          type: string
          example: .index-threshold
        apiKeyOwner:
          type: string
          nullable: true
          example: elastic
        createdAt:
          type: string
          description: The date and time that the alert was created.
          format: date-time
          example: 2022-12-05T23:36:58.284Z
        createdBy:
          type: string
          description: The identifier for the user that created the alert.
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the alert is currently enabled.
          example: true
        executionStatus:
          type: object
          properties:
            lastExecutionDate:
              type: string
              format: date-time
              example: 2022-12-06T00:13:43.890Z
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the alert.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        muteAll:
          type: boolean
          example: false
        mutedInstanceIds:
          type: array
          nullable: true
          items:
            type: string
        name:
          type: string
          description: The name of the alert.
          example: my alert
        notifyWhen:
          type: string
          example: onActionGroupChange
        params:
          type: object
          additionalProperties: true
        schedule:
          type: object
          properties:
            interval:
              type: string
        scheduledTaskId:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          type: array
          items:
            type: string
        throttle:
          type: string
          nullable: true
        updatedAt:
          type: string
          example: 2022-12-05T23:36:58.284Z
        updatedBy:
          type: string
          description: The identifier for the user that updated this alert most recently.
          nullable: true
          example: elastic
    params_property_index_threshold:
      properties:
        aggField:
          type: string
        aggType:
          type: string
        groupBy:
          type: string
        index:
          type: array
          items:
            type: string
        termField:
          type: string
        termSize:
          type: number
        threshold:
          type: array
          items:
            type: number
        thresholdComparator:
          type: string
        timeField:
          type: string
        timeWindowSize:
          type: number
        timeWindowUnit:
          type: string
  examples:
    get_rule_response:
      summary: The get rule API returns a JSON object that contains details about the
        rule.
      value:
        id: 31697a40-7b36-11ed-aa79-f742c05329b2
        consumer: alerts
        tags:
          - cpu
        name: my alert
        enabled: true
        throttle: null
        schedule:
          interval: 1m
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: \\">\\"
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - test-index
          timeField: \\"@timestamp\\"
          aggField: sheet.version
          termField: name.keyword
        revision: 1
        rule_type_id: .index-threshold
        created_by: elastic
        updated_by: elastic
        created_at: 2022-12-13T22:33:41.163Z
        updated_at: 2022-12-13T22:33:41.163Z
        api_key_owner: elastic
        notify_when: onActionGroupChange
        muted_alert_ids: []
        mute_all: false
        scheduled_task_id: 31697a40-7b36-11ed-aa79-f742c05329b2
        execution_status:
          status: ok
          last_execution_date: 2022-12-13T22:33:44.388Z
          last_duration: 83
        actions:
          - group: threshold met
            id: 1007a0c0-7a6e-11ed-89d5-abec321c0def
            uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group}}:


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}
              connector_type_id: .server-log
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: 2022-12-13T22:34:44.314Z
        api_key_created_by_user: false
    update_rule_request:
      summary: Update an index threshold rule.
      value:
        actions:
          - frequency:
              summary: false
              notify_when: onActionGroupChange
            group: threshold met
            id: 96b668d0-a1b6-11ed-afdf-d39a49596974
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group}}:


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}}
        params:
          aggField: sheet.version
          aggType: avg
          index:
            - .test-index
          groupBy: top
          termField: name.keyword
          termSize: 6
          threshold:
            - 1000
          thresholdComparator: \\">\\"
          timeField: \\"@timestamp\\"
          timeWindowSize: 5
          timeWindowUnit: m
        name: new name
        schedule:
          interval: 1m
        tags: []
        throttle: null
    update_rule_response:
      summary: The update rule API returns a JSON object that contains details about
        the rule.
      value:
        id: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
        consumer: alerts
        tags: []
        name: new name
        enabled: true
        throttle: null
        revision: 1
        running: false
        schedule:
          interval: 10m
        params:
          index:
            - .updated-index
          timeField: \\"@timestamp\\"
          groupBy: top
          aggType: avg
          timeWindowSize: 5
          timeWindowUnit: m
          thresholdComparator: \\">\\"
          threshold:
            - 1000
          aggField: sheet.version
          termField: name.keyword
          termSize: 6
        api_key_owner: elastic
        created_by: elastic
        updated_by: elastic
        rule_type_id: .index-threshold
        scheduled_task_id: 4c5eda00-e74f-11ec-b72f-5b18752ff9ea
        created_at: 2023-01-31T23:03:33.127Z
        updated_at: 2023-01-31T23:55:27.314Z
        mute_all: false
        muted_alert_ids: []
        execution_status:
          status: ok
          last_execution_date: 2023-01-31T23:48:42.499Z
          last_duration: 52
        actions:
          - group: threshold met
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group}}:


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}
            id: 96b668d0-a1b6-11ed-afdf-d39a49596974
            uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
            connector_type_id: .server-log
            frequency:
              summary: false
              throttle: null
              notify_when: onActionGroupChange
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: 2023-01-31T23:49:42.432Z
        api_key_created_by_user: false
    create_rule_request:
      summary: Create an index threshold rule.
      value:
        actions:
          - id: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
            frequency:
              notify_when: onActionGroupChange
              summary: false
            group: threshold met
            params:
              level: info
              message: >-
                alert '{{alertName}}' is active for group '{{context.group}}':


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}}
        consumer: alerts
        name: my rule
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: \\">\\"
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - .test-index
          timeField: \\"@timestamp\\"
          aggField: sheet.version
          termField: name.keyword
        rule_type_id: .index-threshold
        schedule:
          interval: 1m
        tags:
          - cpu
    create_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        actions:
          - group: threshold met
            id: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
            uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
            frequency:
              notify_when: onActionGroupChange
              summary: false
              throttle: null
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group} :


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}}
        api_key_created_by_user: false
        api_key_owner: elastic
        consumer: alerts
        created_at: 2022-06-08T17:20:31.632Z
        created_by: elastic
        enabled: true
        execution_status:
          last_execution_date: 2022-06-08T17:20:31.632Z
          status: pending
        id: 41893910-6bca-11eb-9e0d-85d233e3ee35
        muted_alert_ids: []
        mute_all: false
        name: my rule
        notify_when: onActionGroupChange
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: \\">\\"
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - .test-index
          timeField: \\"@timestamp\\"
          aggField: sheet.version
          termField: name.keyword
        revision: 0
        rule_type_id: .index-threshold
        running: false
        schedule:
          interval: 1m
        scheduled_task_id: 425b0800-6bca-11eb-9e0d-85d233e3ee35
        tags:
          - cpu
        throttle: null
        updated_at: 2022-06-08T17:20:31.632Z
        updated_by: elastic
    find_rules_response:
      summary: Retrieve information about a rule.
      value:
        page: 1
        total: 1
        per_page: 10
        data:
          - id: 3583a470-74f6-11ed-9801-35303b735aef
            consumer: alerts
            tags:
              - cpu
            name: my alert
            enabled: true
            throttle: null
            schedule:
              interval: 1m
            params:
              aggType: avg
              termSize: 6
              thresholdComparator: \\">\\"
              timeWindowSize: 5
              timeWindowUnit: m
              groupBy: top
              threshold:
                - 1000
              index:
                - test-index
              timeField: \\"@timestamp\\"
              aggField: sheet.version
              termField: name.keyword
            revision: 1
            rule_type_id: .index-threshold
            created_by: elastic
            updated_by: elastic
            created_at: 2022-12-05T23:40:33.132Z
            updated_at: 2022-12-05T23:40:33.132Z
            api_key_owner: elastic
            notify_when: onActionGroupChange
            mute_all: false
            muted_alert_ids: []
            scheduled_task_id: 3583a470-74f6-11ed-9801-35303b735aef
            execution_status:
              status: ok
              last_execution_date: 2022-12-06T01:44:23.983Z
              last_duration: 48
            actions:
              - id: 9dca3e00-74f5-11ed-9801-35303b735aef
                group: threshold met
                uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
                params:
                  level: info
                  message: >-
                    alert {{alertName}} is active for group {{context.group}}:


                    - Value: {{context.value}}

                    - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                    - Timestamp: {{context.date}}
                  connector_type_id: .server-log
            last_run:
              alerts_count:
                new: 0
                ignored: 0
                recovered: 0
                active: 0
              outcome_msg: null
              warning: null
              outcome: succeeded
            next_run: 2022-12-06T01:45:23.912Z
            api_key_created_by_user: false
    get_health_response:
      summary: Retrieve information about the health of the alerting framework.
      value:
        is_sufficiently_secure: true
        has_permanent_encryption_key: true
        alerting_framework_health:
          decryption_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
          execution_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
          read_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
    get_rule_types_response:
      summary: Retrieve rule types associated with Kibana machine learning features
      value:
        - id: xpack.ml.anomaly_detection_alert
          action_groups:
            - id: anomaly_score_match
              name: Anomaly score matched the condition
            - id: recovered
              name: Recovered
          action_variables:
            context:
              - name: timestamp
                description: The bucket timestamp of the anomaly
              - name: timestampIso8601
                description: The bucket time of the anomaly in ISO8601 format
              - name: jobIds
                description: List of job IDs that triggered the alert
              - name: message
                description: Alert info message
              - name: isInterim
                description: Indicate if top hits contain interim results
              - name: score
                description: Anomaly score at the time of the notification action
              - name: topRecords
                description: Top records
              - name: topInfluencers
                description: Top influencers
              - name: anomalyExplorerUrl
                description: URL to open in the Anomaly Explorer
                useWithTripleBracesInTemplates: true
            params: []
            state: []
          authorized_consumers:
            alerts:
              all: true
              read: true
            ml:
              all: true
              read: true
          default_action_group_id: anomaly_score_match
          does_set_recovery_context: true
          enabled_in_license: true
          is_exportable: true
          minimum_license_required: platinum
          name: Anomaly detection alert
          producer: ml
          recovery_action_group:
            id: recovered
            name: Recovered
          rule_task_timeout: 5m
        - id: xpack.ml.anomaly_detection_jobs_health
          action_groups:
            - id: anomaly_detection_realtime_issue
              name: Issue detected
            - id: recovered
              name: Recovered
          action_variables:
            context:
              - name: results
                description: Results of the rule execution
              - name: message
                description: Alert info message
            params: []
            state: []
          authorized_consumers:
            alerts:
              all: true
              read: true
            ml:
              all: true
              read: true
          default_action_group_id: anomaly_detection_realtime_issue
          does_set_recovery_context: true
          enabled_in_license: true
          is_exportable: true
          minimum_license_required: platinum
          name: Anomaly detection jobs health
          producer: ml
          recovery_action_group:
            id: recovered
            name: Recovered
          rule_task_timeout: 5m
security:
  - basicAuth: []
  - apiKeyAuth: []
",
  },
  {
    "doc": {
      "components": {
        "schemas": {
          "AnotherSchema": {
            "properties": {
              "address": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "type": "object",
          },
          "NewSchema": {
            "properties": {
              "age": {
                "type": "integer",
              },
              "email": {
                "type": "string",
              },
            },
            "required": [
              "email",
            ],
            "type": "object",
          },
        },
        "securitySchemes": {
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "license": {
          "name": "MIT",
          "url": "fakeurl",
        },
        "title": "Your API",
        "version": "1.0.0",
      },
      "openapi": "3.0.1",
      "paths": {
        "/example": {
          "post": {
            "operationId": "createExample",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/NewSchema",
                      },
                      {
                        "$ref": "#/components/schemas/AnotherSchema",
                      },
                    ],
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "description": "OK",
              },
              "400": {
                "description": "KO",
              },
            },
            "summary": "Create a new example",
          },
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
    },
    "fileName": "openapi/demo/example.yaml",
    "openApi": {
      "components": {
        "schemas": {
          "AnotherSchema": {
            "properties": {
              "address": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "type": "object",
          },
          "NewSchema": {
            "properties": {
              "age": {
                "type": "integer",
              },
              "email": {
                "type": "string",
              },
            },
            "required": [
              "email",
            ],
            "type": "object",
          },
        },
        "securitySchemes": {
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "license": {
          "name": "MIT",
          "url": "fakeurl",
        },
        "title": "Your API",
        "version": "1.0.0",
      },
      "openapi": "3.0.1",
      "paths": {
        "/example": {
          "post": {
            "operationId": "createExample",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/NewSchema",
                      },
                      {
                        "$ref": "#/components/schemas/AnotherSchema",
                      },
                    ],
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "description": "OK",
              },
              "400": {
                "description": "KO",
              },
            },
            "summary": "Create a new example",
          },
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
    },
    "yaml": "openapi: 3.0.1
info:
  title: Your API
  version: 1.0.0
  license:
    name: MIT
    url: fakeurl
servers:
  - url: http://localhost:5601
    description: local
paths:
  /example:
    post:
      operationId: createExample
      summary: Create a new example
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: \\"#/components/schemas/NewSchema\\"
                - $ref: \\"#/components/schemas/AnotherSchema\\"
      responses:
        \\"200\\":
          description: OK
        \\"400\\":
          description: KO
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    NewSchema:
      type: object
      properties:
        email:
          type: string
        age:
          type: integer
      required:
        - email
    AnotherSchema:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
      required:
        - name
security:
  - basicAuth: []
",
  },
  {
    "doc": {
      "components": {
        "examples": {
          "create_index_connector_request": {
            "summary": "Create an index connector.",
            "value": {
              "config": {
                "index": "test-index",
              },
              "connector_type_id": ".index",
              "name": "my-connector",
            },
          },
          "create_index_connector_response": {
            "summary": "A new index connector.",
            "value": {
              "config": {
                "executionTimeField": null,
                "index": "test-index",
                "refresh": false,
              },
              "connector_type_id": ".index",
              "id": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my-connector",
            },
          },
          "get_connector_response": {
            "summary": "A list of connector types",
            "value": {
              "config": {},
              "connector_type_id": ".server-log",
              "id": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my_server_log_connector",
            },
          },
          "get_connector_types_response": {
            "summary": "A list of connector types",
            "value": [
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".swimlane",
                "minimum_license_required": "gold",
                "name": "Swimlane",
                "supported_feature_ids": [
                  "alerting",
                  "cases",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".index",
                "minimum_license_required": "basic",
                "name": "Index",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".server-log",
                "minimum_license_required": "basic",
                "name": "Server log",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                ],
              },
            ],
          },
          "get_connectors_response": {
            "summary": "A list of connectors",
            "value": [
              {
                "connector_type_id": ".email",
                "id": "preconfigured-email-connector",
                "is_deprecated": false,
                "is_preconfigured": true,
                "name": "my-preconfigured-email-notification",
                "referenced_by_count": 0,
              },
              {
                "config": {
                  "executionTimeField": null,
                  "index": "test-index",
                  "refresh": false,
                },
                "connector_type_id": ".index",
                "id": "e07d0c80-8b8b-11ed-a780-3b746c987a81",
                "is_deprecated": false,
                "is_missing_secrets": false,
                "is_preconfigured": false,
                "name": "my-index-connector",
                "referenced_by_count": 2,
              },
            ],
          },
          "run_index_connector_request": {
            "summary": "Run an index connector.",
            "value": {
              "params": {
                "documents": [
                  {
                    "id": "my_doc_id",
                    "message": "hello, world",
                    "name": "my_doc_name",
                  },
                ],
              },
            },
          },
          "run_index_connector_response": {
            "summary": "Response from running an index connector.",
            "value": {
              "connector_id": "fd38c600-96a5-11ed-bb79-353b74189cba",
              "data": {
                "errors": false,
                "items": [
                  {
                    "create": {
                      "_id": "4JtvwYUBrcyxt2NnfW3y",
                      "_index": "my-index",
                      "_primary_term": 1,
                      "_seq_no": 0,
                      "_shards": {
                        "failed": 0,
                        "successful": 1,
                        "total": 2,
                      },
                      "_version": 1,
                      "result": "created",
                      "status": 201,
                    },
                  },
                ],
                "took": 135,
              },
              "status": "ok",
            },
          },
          "run_jira_connector_request": {
            "summary": "Run a Jira connector to retrieve the list of issue types.",
            "value": {
              "params": {
                "subAction": "issueTypes",
              },
            },
          },
          "run_jira_connector_response": {
            "summary": "Response from retrieving the list of issue types for a Jira connector.",
            "value": {
              "connector_id": "b3aad810-edbe-11ec-82d1-11348ecbf4a6",
              "data": [
                {
                  "id": 10024,
                  "name": "Improvement",
                },
                {
                  "id": 10006,
                  "name": "Task",
                },
                {
                  "id": 10007,
                  "name": "Sub-task",
                },
                {
                  "id": 10025,
                  "name": "New Feature",
                },
                {
                  "id": 10023,
                  "name": "Bug",
                },
                {
                  "id": 10000,
                  "name": "Epic",
                },
              ],
              "status": "ok",
            },
          },
          "run_server_log_connector_request": {
            "summary": "Run a server log connector.",
            "value": {
              "params": {
                "level": "warn",
                "message": "Test warning message.",
              },
            },
          },
          "run_server_log_connector_response": {
            "summary": "Response from running a server log connector.",
            "value": {
              "connector_id": "7fc7b9a0-ecc9-11ec-8736-e7d63118c907",
              "status": "ok",
            },
          },
          "run_servicenow_itom_connector_request": {
            "summary": "Run a ServiceNow ITOM connector to retrieve the list of choices.",
            "value": {
              "params": {
                "subAction": "getChoices",
                "subActionParams": {
                  "fields": [
                    "severity",
                    "urgency",
                  ],
                },
              },
            },
          },
          "run_servicenow_itom_connector_response": {
            "summary": "Response from retrieving the list of choices for a ServiceNow ITOM connector.",
            "value": {
              "connector_id": "9d9be270-2fd2-11ed-b0e0-87533c532698",
              "data": [
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Critical",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Major",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Minor",
                  "value": 3,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Warning",
                  "value": 4,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "OK",
                  "value": 5,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Clear",
                  "value": 0,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "1 - High",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "2 - Medium",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "3 - Low",
                  "value": 3,
                },
              ],
              "status": "ok",
            },
          },
          "run_swimlane_connector_request": {
            "summary": "Run a Swimlane connector to create an incident.",
            "value": {
              "params": {
                "subAction": "pushToService",
                "subActionParams": {
                  "comments": [
                    {
                      "comment": "A comment about the incident.",
                      "commentId": 1,
                    },
                  ],
                  "incident": {
                    "caseId": "1000",
                    "caseName": "Case name",
                    "description": "Description of the incident.",
                  },
                },
              },
            },
          },
          "run_swimlane_connector_response": {
            "summary": "Response from creating a Swimlane incident.",
            "value": {
              "connector_id": "a4746470-2f94-11ed-b0e0-87533c532698",
              "data": {
                "comments": [
                  {
                    "commentId": 1,
                    "pushedDate": "2022-09-08T16:52:27.865Z",
                  },
                ],
                "id": "aKPmBHWzmdRQtx6Mx",
                "pushedDate": "2022-09-08T16:52:27.866Z",
                "title": "TEST-457",
                "url": "https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx",
              },
              "status": "ok",
            },
          },
          "update_index_connector_request": {
            "summary": "Update an index connector.",
            "value": {
              "config": {
                "index": "updated-index",
              },
              "name": "updated-connector",
            },
          },
        },
        "parameters": {
          "action_id": {
            "description": "An identifier for the action.",
            "in": "path",
            "name": "actionId",
            "required": true,
            "schema": {
              "example": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "type": "string",
            },
          },
          "connector_id": {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "connectorId",
            "required": true,
            "schema": {
              "example": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "responses": {
          "200_actions": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Unauthorized",
                      ],
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "message": {
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        401,
                      ],
                      "example": 401,
                      "type": "integer",
                    },
                  },
                  "title": "Unauthorized response",
                  "type": "object",
                },
              },
            },
            "description": "Authorization information is missing or invalid.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Not Found",
                      ],
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        404,
                      ],
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "title": "Not found response",
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "schemas": {
          "action_response_properties": {
            "description": "The properties vary depending on the action type.",
            "properties": {
              "actionTypeId": {
                "type": "string",
              },
              "config": {
                "type": "object",
              },
              "id": {
                "type": "string",
              },
              "isDeprecated": {
                "description": "Indicates whether the action type is deprecated.",
                "type": "boolean",
              },
              "isMissingSecrets": {
                "description": "Indicates whether secrets are missing for the action.",
                "type": "boolean",
              },
              "isPreconfigured": {
                "description": "Indicates whether it is a preconfigured action.",
                "type": "boolean",
              },
              "name": {
                "type": "string",
              },
            },
            "title": "Action response properties",
            "type": "object",
          },
          "config_properties_cases_webhook": {
            "description": "Defines properties for connectors when type is \`.cases-webhook\`.",
            "properties": {
              "createCommentJson": {
                "description": "A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is \`case.comment\`. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": {
                  "body": {
                    "[object Object]": null,
                  },
                },
                "type": "string",
              },
              "createCommentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to create a case comment in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createCommentUrl": {
                "description": "The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts setting\`, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment",
                "type": "string",
              },
              "createIncidentJson": {
                "description": "A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "createIncidentMethod": {
                "default": "post",
                "description": "The REST API HTTP request method to create a case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createIncidentResponseKey": {
                "description": "The JSON key in the create case response that contains the external case ID.",
                "type": "string",
              },
              "createIncidentUrl": {
                "description": "The REST API URL to create a case in the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
              "getIncidentResponseExternalTitleKey": {
                "description": "The JSON key in get case response that contains the external case title.",
                "type": "string",
              },
              "getIncidentUrl": {
                "description": "The REST API URL to get the case by ID from the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}",
                "type": "string",
              },
              "hasAuth": {
                "default": true,
                "description": "If true, a username and password for login type authentication must be provided.",
                "type": "boolean",
              },
              "headers": {
                "description": "A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
",
                "type": "string",
              },
              "updateIncidentJson": {
                "description": "The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "updateIncidentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to update the case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "updateIncidentUrl": {
                "description": "The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}",
                "type": "string",
              },
              "viewIncidentUrl": {
                "description": "The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
",
                "example": "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}",
                "type": "string",
              },
            },
            "required": [
              "createIncidentJson",
              "createIncidentResponseKey",
              "createIncidentUrl",
              "getIncidentResponseExternalTitleKey",
              "getIncidentUrl",
              "updateIncidentJson",
              "updateIncidentUrl",
              "viewIncidentUrl",
            ],
            "title": "Connector request properties for Webhook - Case Management connector",
            "type": "object",
          },
          "config_properties_email": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.email\`.",
            "title": "Connector request properties for an email connector",
            "type": "object",
          },
          "config_properties_index": {
            "description": "Defines properties for connectors when type is \`.index\`.",
            "properties": {
              "executionTimeField": {
                "default": null,
                "description": "Specifies a field that will contain the time the alert condition was detected.",
                "nullable": true,
                "type": "string",
              },
              "index": {
                "description": "The Elasticsearch index to be written to.",
                "type": "string",
              },
              "refresh": {
                "default": false,
                "description": "The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
",
                "type": "boolean",
              },
            },
            "required": [
              "index",
            ],
            "title": "Connector request properties for an index connector",
            "type": "object",
          },
          "config_properties_jira": {
            "description": "Defines properties for connectors when type is \`.jira\`.",
            "properties": {
              "apiUrl": {
                "description": "The Jira instance URL.",
                "type": "string",
              },
              "projectKey": {
                "description": "The Jira project key.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "projectKey",
            ],
            "title": "Connector request properties for a Jira connector",
            "type": "object",
          },
          "config_properties_opsgenie": {
            "description": "Defines properties for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiUrl": {
                "description": "The Opsgenie URL. For example, \`https://api.opsgenie.com\` or \`https://api.eu.opsgenie.com\`. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for an Opsgenie connector",
            "type": "object",
          },
          "config_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.pagerduty\`.",
            "title": "Connector request properties for a PagerDuty connector",
            "type": "object",
          },
          "config_properties_resilient": {
            "description": "Defines properties for connectors when type is \`.resilient\`.",
            "properties": {
              "apiUrl": {
                "description": "The IBM Resilient instance URL.",
                "type": "string",
              },
              "orgId": {
                "description": "The IBM Resilient organization ID.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "orgId",
            ],
            "title": "Connector request properties for a IBM Resilient connector",
            "type": "object",
          },
          "config_properties_servicenow": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "usesTableApi": {
                "default": true,
                "description": "Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to \`false\`, the Elastic application should be installed in ServiceNow.
",
                "type": "boolean",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_servicenow_itom": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_swimlane": {
            "description": "Defines properties for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiUrl": {
                "description": "The Swimlane instance URL.",
                "type": "string",
              },
              "appId": {
                "description": "The Swimlane application ID.",
                "type": "string",
              },
              "connectorType": {
                "description": "The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.",
                "enum": [
                  "all",
                  "alerts",
                  "cases",
                ],
                "type": "string",
              },
              "mappings": {
                "description": "The field mapping.",
                "properties": {
                  "alertIdConfig": {
                    "description": "Mapping for the alert ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Alert identifier mapping",
                    "type": "object",
                  },
                  "caseIdConfig": {
                    "description": "Mapping for the case ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case identifier mapping",
                    "type": "object",
                  },
                  "caseNameConfig": {
                    "description": "Mapping for the case name.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case name mapping",
                    "type": "object",
                  },
                  "commentsConfig": {
                    "description": "Mapping for the case comments.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case comment mapping",
                    "type": "object",
                  },
                  "descriptionConfig": {
                    "description": "Mapping for the case description.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case description mapping",
                    "type": "object",
                  },
                  "ruleNameConfig": {
                    "description": "Mapping for the name of the alert's rule.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Rule name mapping",
                    "type": "object",
                  },
                  "severityConfig": {
                    "description": "Mapping for the severity.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Severity mapping",
                    "type": "object",
                  },
                },
                "title": "Connector mappings properties for a Swimlane connector",
                "type": "object",
              },
            },
            "required": [
              "apiUrl",
              "appId",
              "connectorType",
            ],
            "title": "Connector request properties for a Swimlane connector",
            "type": "object",
          },
          "config_properties_tines": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.tines\`.",
            "title": "Connector request properties for a Tines connector",
            "type": "object",
          },
          "config_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.webhook\`.",
            "title": "Connector request properties for a Webhook connector",
            "type": "object",
          },
          "config_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.xmatters\`.",
            "title": "Connector request properties for a xMatters connector",
            "type": "object",
          },
          "connector_response_properties": {
            "description": "The properties vary depending on the connector type.",
            "discriminator": {
              "propertyName": "connector_type_id",
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/connector_response_properties_cases_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_email",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_index",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_jira",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_opsgenie",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_pagerduty",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_resilient",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_serverlog",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_itom",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_sir",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_api",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_swimlane",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_teams",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_tines",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_xmatters",
              },
            ],
            "title": "Connector response properties",
          },
          "connector_response_properties_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector request properties for a Webhook - Case Management connector",
            "type": "object",
          },
          "connector_response_properties_email": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an email connector",
            "type": "object",
          },
          "connector_response_properties_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an index connector",
            "type": "object",
          },
          "connector_response_properties_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Jira connector",
            "type": "object",
          },
          "connector_response_properties_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an Opsgenie connector",
            "type": "object",
          },
          "connector_response_properties_pagerduty": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a PagerDuty connector",
            "type": "object",
          },
          "connector_response_properties_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a IBM Resilient connector",
            "type": "object",
          },
          "connector_response_properties_serverlog": {
            "properties": {
              "config": {
                "nullable": true,
                "type": "object",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a server log connector",
            "type": "object",
          },
          "connector_response_properties_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITOM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_sir": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow SecOps connector",
            "type": "object",
          },
          "connector_response_properties_slack_api": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_slack_webhook": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Swimlane connector",
            "type": "object",
          },
          "connector_response_properties_teams": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Microsoft Teams connector",
            "type": "object",
          },
          "connector_response_properties_tines": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Tines connector",
            "type": "object",
          },
          "connector_response_properties_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Webhook connector",
            "type": "object",
          },
          "connector_response_properties_xmatters": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an xMatters connector",
            "type": "object",
          },
          "connector_types": {
            "description": "The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`, \`.opsgenie\`, or \`.server-log\`.",
            "enum": [
              ".cases-webhook",
              ".email",
              ".index",
              ".jira",
              ".opsgenie",
              ".pagerduty",
              ".resilient",
              ".servicenow",
              ".servicenow-itom",
              ".servicenow-sir",
              ".server-log",
              ".slack",
              ".swimlane",
              ".teams",
              ".tines",
              ".webhook",
              ".xmatters",
            ],
            "example": ".server-log",
            "title": "Connector types",
            "type": "string",
          },
          "create_connector_request_cases_webhook": {
            "description": "The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "example": ".cases-webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create Webhook - Case Managment connector request",
            "type": "object",
          },
          "create_connector_request_email": {
            "description": "The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "example": ".email",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_email",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create email connector request",
            "type": "object",
          },
          "create_connector_request_index": {
            "description": "The index connector indexes a document into Elasticsearch.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "example": ".index",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create index connector request",
            "type": "object",
          },
          "create_connector_request_jira": {
            "description": "The Jira connector uses the REST API v2 to create Jira issues.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "example": ".jira",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Jira connector request",
            "type": "object",
          },
          "create_connector_request_opsgenie": {
            "description": "The Opsgenie connector uses the Opsgenie alert API.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "example": ".opsgenie",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Opsgenie connector request",
            "type": "object",
          },
          "create_connector_request_pagerduty": {
            "description": "The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "example": ".pagerduty",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_pagerduty",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create PagerDuty connector request",
            "type": "object",
          },
          "create_connector_request_resilient": {
            "description": "The IBM Resilient connector uses the RESILIENT REST v2 to create IBM Resilient incidents.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "example": ".resilient",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create IBM Resilient connector request",
            "type": "object",
          },
          "create_connector_request_serverlog": {
            "description": "This connector writes an entry to the Kibana server log.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "example": ".server-log",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "name",
            ],
            "title": "Create server log connector request",
            "type": "object",
          },
          "create_connector_request_servicenow": {
            "description": "The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "example": ".servicenow",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITSM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_itom": {
            "description": "The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "example": ".servicenow-itom",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_sir": {
            "description": "The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "example": ".servicenow-sir",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow SecOps connector request",
            "type": "object",
          },
          "create_connector_request_slack_api": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "example": ".slack_api",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_slack_webhook": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "example": ".slack",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_swimlane": {
            "description": "The Swimlane connector uses the Swimlane REST API to create Swimlane records.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "example": ".swimlane",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Swimlane connector request",
            "type": "object",
          },
          "create_connector_request_teams": {
            "description": "The Microsoft Teams connector uses Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "example": ".teams",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_teams",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Microsoft Teams connector request",
            "type": "object",
          },
          "create_connector_request_tines": {
            "description": "The Tines connector uses Tines Webhook actions to send events via POST request.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "example": ".tines",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_tines",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Tines connector request",
            "type": "object",
          },
          "create_connector_request_webhook": {
            "description": "The Webhook connector uses axios to send a POST or PUT request to a web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "example": ".webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Webhook connector request",
            "type": "object",
          },
          "create_connector_request_xmatters": {
            "description": "The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "example": ".xmatters",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_xmatters",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create xMatters connector request",
            "type": "object",
          },
          "features": {
            "description": "The feature that uses the connector. Valid values are \`alerting\`, \`cases\`, \`uptime\`, and \`siem\`.
",
            "enum": [
              "alerting",
              "cases",
              "uptime",
              "siem",
            ],
            "type": "string",
          },
          "is_deprecated": {
            "description": "Indicates whether the connector type is deprecated.",
            "example": false,
            "type": "boolean",
          },
          "is_missing_secrets": {
            "description": "Indicates whether secrets are missing for the connector. Secrets configuration properties vary depending on the connector type.",
            "example": false,
            "type": "boolean",
          },
          "is_preconfigured": {
            "description": "Indicates whether it is a preconfigured connector. If true, the \`config\` and \`is_missing_secrets\` properties are omitted from the response.",
            "example": false,
            "type": "boolean",
          },
          "run_connector_params_documents": {
            "description": "Test an action that indexes a document into Elasticsearch.",
            "properties": {
              "documents": {
                "description": "The documents in JSON format for index connectors.",
                "items": {
                  "additionalProperties": true,
                  "type": "object",
                },
                "type": "array",
              },
            },
            "required": [
              "documents",
            ],
            "title": "Index connector parameters",
            "type": "object",
          },
          "run_connector_params_level_message": {
            "description": "Test an action that writes an entry to the Kibana server log.",
            "properties": {
              "level": {
                "default": "info",
                "description": "The log level of the message for server log connectors.",
                "enum": [
                  "debug",
                  "error",
                  "fatal",
                  "info",
                  "trace",
                  "warn",
                ],
                "type": "string",
              },
              "message": {
                "description": "The message for server log connectors.",
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "title": "Server log connector parameters",
            "type": "object",
          },
          "run_connector_subaction_addevent": {
            "description": "The \`addEvent\` subaction for ServiceNow ITOM connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "addEvent",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "additional_info": {
                    "description": "Additional information about the event.",
                    "type": "string",
                  },
                  "description": {
                    "description": "The details about the event.",
                    "type": "string",
                  },
                  "event_class": {
                    "description": "A specific instance of the source.",
                    "type": "string",
                  },
                  "message_key": {
                    "description": "All actions sharing this key are associated with the same ServiceNow alert. The default value is \`<rule ID>:<alert instance ID>\`.",
                    "type": "string",
                  },
                  "metric_name": {
                    "description": "The name of the metric.",
                    "type": "string",
                  },
                  "node": {
                    "description": "The host that the event was triggered for.",
                    "type": "string",
                  },
                  "resource": {
                    "description": "The name of the resource.",
                    "type": "string",
                  },
                  "severity": {
                    "description": "The severity of the event.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The name of the event source type.",
                    "type": "string",
                  },
                  "time_of_event": {
                    "description": "The time of the event.",
                    "type": "string",
                  },
                  "type": {
                    "description": "The type of event.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The addEvent subaction",
            "type": "object",
          },
          "run_connector_subaction_closealert": {
            "description": "The \`closeAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "closeAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie. The alias must match the value used when creating the alert.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                },
                "required": [
                  "alias",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The closeAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_createalert": {
            "description": "The \`createAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "createAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "actions": {
                    "description": "The custom actions available to the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie.",
                    "type": "string",
                  },
                  "description": {
                    "description": "A description that provides detailed information about the alert.",
                    "type": "string",
                  },
                  "details": {
                    "additionalProperties": true,
                    "description": "The custom properties of the alert.",
                    "example": {
                      "key1": "value1",
                      "key2": "value2",
                    },
                    "type": "object",
                  },
                  "entity": {
                    "description": "The domain of the alert. For example, the application or server name.",
                    "type": "string",
                  },
                  "message": {
                    "description": "The alert message.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "priority": {
                    "description": "The priority level for the alert.",
                    "enum": [
                      "P1",
                      "P2",
                      "P3",
                      "P4",
                      "P5",
                    ],
                    "type": "string",
                  },
                  "responders": {
                    "description": "The entities to receive notifications about the alert. If \`type\` is \`user\`, either \`id\` or \`username\` is required. If \`type\` is \`team\`, either \`id\` or \`name\` is required.
",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "The type of responders, in this case \`escalation\`.",
                          "enum": [
                            "escalation",
                            "schedule",
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "A valid email address for the user.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "tags": {
                    "description": "The tags for the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                  "visibleTo": {
                    "description": "The teams and users that the alert will be visible to without sending a notification. Only one of \`id\`, \`name\`, or \`username\` is required.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "Valid values are \`team\` and \`user\`.",
                          "enum": [
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "The user name. This property is required only when the \`type\` is \`user\`.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "type",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "message",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The createAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_fieldsbyissuetype": {
            "description": "The \`fieldsByIssueType\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "fieldsByIssueType",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue type identifier.",
                    "example": 10024,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The fieldsByIssueType subaction",
            "type": "object",
          },
          "run_connector_subaction_getchoices": {
            "description": "The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getChoices",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "fields": {
                    "description": "An array of fields.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "fields",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getChoices subaction",
            "type": "object",
          },
          "run_connector_subaction_getfields": {
            "description": "The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getFields",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The getFields subaction",
            "type": "object",
          },
          "run_connector_subaction_getincident": {
            "description": "The \`getIncident\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getIncident",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "externalId": {
                    "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "externalId",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getIncident subaction",
            "type": "object",
          },
          "run_connector_subaction_issue": {
            "description": "The \`issue\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issue",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issue subaction",
            "type": "object",
          },
          "run_connector_subaction_issues": {
            "description": "The \`issues\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issues",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "title": {
                    "description": "The title of the Jira issue.",
                    "type": "string",
                  },
                },
                "required": [
                  "title",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The issues subaction",
            "type": "object",
          },
          "run_connector_subaction_issuetypes": {
            "description": "The \`issueTypes\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issueTypes",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issueTypes subaction",
            "type": "object",
          },
          "run_connector_subaction_pushtoservice": {
            "description": "The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "pushToService",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "comments": {
                    "description": "Additional information that is sent to Jira, ServiceNow ITSM, ServiceNow SecOps, or Swimlane.",
                    "items": {
                      "properties": {
                        "comment": {
                          "description": "A comment related to the incident. For example, describe how to troubleshoot the issue.",
                          "type": "string",
                        },
                        "commentId": {
                          "description": "A unique identifier for the comment.",
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "incident": {
                    "description": "Information necessary to create or update a Jira, ServiceNow ITSM, ServiveNow SecOps, or Swimlane incident.",
                    "properties": {
                      "alertId": {
                        "description": "The alert identifier for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseId": {
                        "description": "The case identifier for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseName": {
                        "description": "The case name for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "category": {
                        "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_display": {
                        "description": "A descriptive label of the alert for correlation purposes for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_id": {
                        "description": "The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as \`{{ruleID}}:{{alert ID}}\` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of \`{{ruleID}}:{{alert ID}}\` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
",
                        "type": "string",
                      },
                      "description": {
                        "description": "The description of the incident for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
                        "type": "string",
                      },
                      "dest_ip": {
                        "description": "A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "externalId": {
                        "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
",
                        "type": "string",
                      },
                      "impact": {
                        "description": "The impact of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                      "issueType": {
                        "description": "The type of incident for Jira connectors. For example, 10006. To obtain the list of valid values, set \`subAction\` to \`issueTypes\`.",
                        "type": "integer",
                      },
                      "labels": {
                        "description": "The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "malware_hash": {
                        "description": "A list of malware hashes related to the security incident for ServiceNow SecOps connectors. The hashes are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "malware_url": {
                        "description": "A list of malware URLs related to the security incident for ServiceNow SecOps connectors. The URLs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                        "type": "string",
                      },
                      "parent": {
                        "description": "The ID or key of the parent issue for Jira connectors. Applies only to \`Sub-task\` types of issues.",
                        "type": "string",
                      },
                      "priority": {
                        "description": "The priority of the incident in Jira and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "ruleName": {
                        "description": "The rule name for Swimlane connectors.",
                        "type": "string",
                      },
                      "severity": {
                        "description": "The severity of the incident for ServiceNow ITSM and Swimlane connectors.",
                        "type": "string",
                      },
                      "short_description": {
                        "description": "A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "source_ip": {
                        "description": "A list of source IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "subcategory": {
                        "description": "The subcategory of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "summary": {
                        "description": "A summary of the incident for Jira connectors.",
                        "type": "string",
                      },
                      "title": {
                        "description": "A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "urgency": {
                        "description": "The urgency of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The pushToService subaction",
            "type": "object",
          },
          "secrets_properties_cases_webhook": {
            "properties": {
              "password": {
                "description": "The password for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
              "user": {
                "description": "The username for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for Webhook - Case Management connector",
            "type": "object",
          },
          "secrets_properties_email": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.email\`.",
            "title": "Connector secrets properties for an email connector",
            "type": "object",
          },
          "secrets_properties_jira": {
            "description": "Defines secrets for connectors when type is \`.jira\`.",
            "properties": {
              "apiToken": {
                "description": "The Jira API authentication token for HTTP basic authentication.",
                "type": "string",
              },
              "email": {
                "description": "The account email for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiToken",
              "email",
            ],
            "title": "Connector secrets properties for a Jira connector",
            "type": "object",
          },
          "secrets_properties_opsgenie": {
            "description": "Defines secrets for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiKey": {
                "description": "The Opsgenie API authentication key for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKey",
            ],
            "title": "Connector secrets properties for an Opsgenie connector",
            "type": "object",
          },
          "secrets_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.pagerduty\`.",
            "title": "Connector secrets properties for a PagerDuty connector",
            "type": "object",
          },
          "secrets_properties_resilient": {
            "description": "Defines secrets for connectors when type is \`.resilient\`.",
            "properties": {
              "apiKeyId": {
                "description": "The authentication key ID for HTTP Basic authentication.",
                "type": "string",
              },
              "apiKeySecret": {
                "description": "The authentication key secret for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKeyId",
              "apiKeySecret",
            ],
            "title": "Connector secrets properties for IBM Resilient connector",
            "type": "object",
          },
          "secrets_properties_servicenow": {
            "description": "Defines secrets for connectors when type is \`.servicenow\`, \`.servicenow-sir\`, or \`.servicenow-itom\`.",
            "properties": {
              "clientSecret": {
                "description": "The client secret assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "password": {
                "description": "The password for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
              "privateKey": {
                "description": "The RSA private key that you created for use in ServiceNow. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "privateKeyPassword": {
                "description": "The password for the RSA private key. This property is required when \`isOAuth\` is \`true\` and you set a password on your private key.",
                "type": "string",
              },
              "username": {
                "description": "The username for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors",
            "type": "object",
          },
          "secrets_properties_slack_api": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "token": {
                "description": "Slack bot user OAuth token.",
                "type": "string",
              },
            },
            "required": [
              "token",
            ],
            "title": "Connector secrets properties for a Web API Slack connector",
            "type": "object",
          },
          "secrets_properties_slack_webhook": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "webhookUrl": {
                "description": "Slack webhook url.",
                "type": "string",
              },
            },
            "required": [
              "webhookUrl",
            ],
            "title": "Connector secrets properties for a Webhook Slack connector",
            "type": "object",
          },
          "secrets_properties_swimlane": {
            "description": "Defines secrets for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiToken": {
                "description": "Swimlane API authentication token.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for a Swimlane connector",
            "type": "object",
          },
          "secrets_properties_teams": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.teams\`.",
            "title": "Connector secrets properties for a Microsoft Teams connector",
            "type": "object",
          },
          "secrets_properties_tines": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.tines\`.",
            "title": "Connector secrets properties for a Tines connector",
            "type": "object",
          },
          "secrets_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.webhook\`.",
            "title": "Connector secrets properties for a Webhook connector",
            "type": "object",
          },
          "secrets_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.xmatters\`.",
            "title": "Connector secrets properties for an xMatters connector",
            "type": "object",
          },
          "update_connector_request_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update Webhook - Case Managment connector request",
            "type": "object",
          },
          "update_connector_request_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update index connector request",
            "type": "object",
          },
          "update_connector_request_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Jira connector request",
            "type": "object",
          },
          "update_connector_request_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Opsgenie connector request",
            "type": "object",
          },
          "update_connector_request_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update IBM Resilient connector request",
            "type": "object",
          },
          "update_connector_request_serverlog": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "title": "Update server log connector request",
            "type": "object",
          },
          "update_connector_request_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update ServiceNow ITSM connector or ServiceNow SecOps request",
            "type": "object",
          },
          "update_connector_request_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "update_connector_request_slack_api": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_slack_webhook": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Swimlane connector request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Connectors Team",
        },
        "description": "OpenAPI schema for Connectors endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Connectors",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/actions": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connectors API instead.",
            "operationId": "legacyGetConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/action_response_properties",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create connector API instead.",
            "operationId": "legacyCreateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actionTypeId": {
                        "description": "The connector type identifier.",
                        "type": "string",
                      },
                      "config": {
                        "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The display name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
",
                        "type": "object",
                      },
                    },
                    "title": "Legacy create connector request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "legacyDeleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get connector API instead.",
            "operationId": "legacyGetConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update connector API instead.",
            "operationId": "legacyUpdateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "config": {
                        "description": "The new connector configuration. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The new name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The updated secrets configuration for the connector. Secrets properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "title": "Legacy update connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}/_execute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the run connector API instead.",
            "operationId": "legacyRunConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "description": "The parameters of the connector. Parameter properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Legacy run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "actionId": {
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector": {
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "deleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorResponse": {
                        "$ref": "#/components/examples/get_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnectorId",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A UUID v1 or v4 identifier for the connector. If you omit this parameter, an identifier is randomly generated.",
                "in": "path",
                "name": "connectorId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "updateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateIndexConnectorRequest": {
                      "$ref": "#/components/examples/update_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/update_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_swimlane",
                      },
                    ],
                    "title": "Update connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Bad Request",
                          "type": "string",
                        },
                        "message": {
                          "example": "error validating action type config: [index]: expected value of type [string] but got [undefined]",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 400,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a bad request.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}/_execute": {
          "post": {
            "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\` indices privileges.
",
            "operationId": "runConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "runIndexConnectorRequest": {
                      "$ref": "#/components/examples/run_index_connector_request",
                    },
                    "runJiraConnectorRequest": {
                      "$ref": "#/components/examples/run_jira_connector_request",
                    },
                    "runServerLogConnectorRequest": {
                      "$ref": "#/components/examples/run_server_log_connector_request",
                    },
                    "runServiceNowITOMConnectorRequest": {
                      "$ref": "#/components/examples/run_servicenow_itom_connector_request",
                    },
                    "runSwimlaneConnectorRequest": {
                      "$ref": "#/components/examples/run_swimlane_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/run_connector_params_documents",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_params_level_message",
                          },
                          {
                            "description": "Test an action that involves a subaction.",
                            "discriminator": {
                              "propertyName": "subAction",
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_addevent",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_closealert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_createalert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_fieldsbyissuetype",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getchoices",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getfields",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getincident",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issue",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issues",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issuetypes",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_pushtoservice",
                              },
                            ],
                            "title": "Subaction parameters",
                          },
                        ],
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "runIndexConnectorResponse": {
                        "$ref": "#/components/examples/run_index_connector_response",
                      },
                      "runJiraConnectorResponse": {
                        "$ref": "#/components/examples/run_jira_connector_response",
                      },
                      "runServerLogConnectorResponse": {
                        "$ref": "#/components/examples/run_server_log_connector_response",
                      },
                      "runServiceNowITOMConnectorResponse": {
                        "$ref": "#/components/examples/run_servicenow_itom_connector_response",
                      },
                      "runSwimlaneConnectorResponse": {
                        "$ref": "#/components/examples/run_swimlane_connector_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "connector_id": {
                          "description": "The identifier for the connector.",
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "enum": [
                            "error",
                            "ok",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "connector_id",
                        "status",
                      ],
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector_types": {
          "get": {
            "description": "You do not need any Kibana feature privileges to run this API.
",
            "operationId": "getConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
                "in": "query",
                "name": "feature_id",
                "schema": {
                  "$ref": "#/components/schemas/features",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorTypesResponse": {
                        "$ref": "#/components/examples/get_connector_types_response",
                      },
                    },
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_config": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "minimum_license_required": {
                            "description": "The license that is required to use the connector type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "example": "Index",
                            "type": "string",
                          },
                          "supported_feature_ids": {
                            "description": "The Kibana features that are supported by the connector type.",
                            "example": [
                              "alerting",
                              "uptime",
                              "siem",
                            ],
                            "items": {
                              "$ref": "#/components/schemas/features",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connectors": {
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorsResponse": {
                        "$ref": "#/components/examples/get_connectors_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "description": "The properties vary for each connector type.",
                        "properties": {
                          "config": {
                            "additionalProperties": true,
                            "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                            "nullable": true,
                            "type": "object",
                          },
                          "connector_type_id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "id": {
                            "description": "The identifier for the connector.",
                            "example": "b0766e10-d190-11ec-b04c-776c77d14fca",
                            "type": "string",
                          },
                          "is_deprecated": {
                            "$ref": "#/components/schemas/is_deprecated",
                          },
                          "is_missing_secrets": {
                            "$ref": "#/components/schemas/is_missing_secrets",
                          },
                          "is_preconfigured": {
                            "$ref": "#/components/schemas/is_preconfigured",
                          },
                          "name": {
                            "description": "The display name for the connector.",
                            "example": "my-connector",
                            "type": "string",
                          },
                          "referenced_by_count": {
                            "default": 0,
                            "description": "Indicates the number of saved objects that reference the connector. If \`is_preconfigured\` is true, this value is not calculated.",
                            "example": 2,
                            "type": "integer",
                          },
                        },
                        "required": [
                          "connector_type_id",
                          "id",
                          "is_deprecated",
                          "is_preconfigured",
                          "name",
                          "referenced_by_count",
                        ],
                        "title": "Get connectors response body properties",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/list_action_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connector types API instead.",
            "operationId": "legacyGetConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "type": "boolean",
                          },
                          "enabledInConfig": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "type": "boolean",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the connector type.",
                            "type": "string",
                          },
                          "minimumLicenseRequired": {
                            "description": "The license that is required to use the connector type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Legacy get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Connector APIs enable you to create and manage connectors.",
          "name": "connectors",
        },
      ],
    },
    "fileName": "openapi/connectors/bundled.yaml",
    "openApi": {
      "components": {
        "examples": {
          "create_index_connector_request": {
            "summary": "Create an index connector.",
            "value": {
              "config": {
                "index": "test-index",
              },
              "connector_type_id": ".index",
              "name": "my-connector",
            },
          },
          "create_index_connector_response": {
            "summary": "A new index connector.",
            "value": {
              "config": {
                "executionTimeField": null,
                "index": "test-index",
                "refresh": false,
              },
              "connector_type_id": ".index",
              "id": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my-connector",
            },
          },
          "get_connector_response": {
            "summary": "A list of connector types",
            "value": {
              "config": {},
              "connector_type_id": ".server-log",
              "id": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my_server_log_connector",
            },
          },
          "get_connector_types_response": {
            "summary": "A list of connector types",
            "value": [
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".swimlane",
                "minimum_license_required": "gold",
                "name": "Swimlane",
                "supported_feature_ids": [
                  "alerting",
                  "cases",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".index",
                "minimum_license_required": "basic",
                "name": "Index",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".server-log",
                "minimum_license_required": "basic",
                "name": "Server log",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                ],
              },
            ],
          },
          "get_connectors_response": {
            "summary": "A list of connectors",
            "value": [
              {
                "connector_type_id": ".email",
                "id": "preconfigured-email-connector",
                "is_deprecated": false,
                "is_preconfigured": true,
                "name": "my-preconfigured-email-notification",
                "referenced_by_count": 0,
              },
              {
                "config": {
                  "executionTimeField": null,
                  "index": "test-index",
                  "refresh": false,
                },
                "connector_type_id": ".index",
                "id": "e07d0c80-8b8b-11ed-a780-3b746c987a81",
                "is_deprecated": false,
                "is_missing_secrets": false,
                "is_preconfigured": false,
                "name": "my-index-connector",
                "referenced_by_count": 2,
              },
            ],
          },
          "run_index_connector_request": {
            "summary": "Run an index connector.",
            "value": {
              "params": {
                "documents": [
                  {
                    "id": "my_doc_id",
                    "message": "hello, world",
                    "name": "my_doc_name",
                  },
                ],
              },
            },
          },
          "run_index_connector_response": {
            "summary": "Response from running an index connector.",
            "value": {
              "connector_id": "fd38c600-96a5-11ed-bb79-353b74189cba",
              "data": {
                "errors": false,
                "items": [
                  {
                    "create": {
                      "_id": "4JtvwYUBrcyxt2NnfW3y",
                      "_index": "my-index",
                      "_primary_term": 1,
                      "_seq_no": 0,
                      "_shards": {
                        "failed": 0,
                        "successful": 1,
                        "total": 2,
                      },
                      "_version": 1,
                      "result": "created",
                      "status": 201,
                    },
                  },
                ],
                "took": 135,
              },
              "status": "ok",
            },
          },
          "run_jira_connector_request": {
            "summary": "Run a Jira connector to retrieve the list of issue types.",
            "value": {
              "params": {
                "subAction": "issueTypes",
              },
            },
          },
          "run_jira_connector_response": {
            "summary": "Response from retrieving the list of issue types for a Jira connector.",
            "value": {
              "connector_id": "b3aad810-edbe-11ec-82d1-11348ecbf4a6",
              "data": [
                {
                  "id": 10024,
                  "name": "Improvement",
                },
                {
                  "id": 10006,
                  "name": "Task",
                },
                {
                  "id": 10007,
                  "name": "Sub-task",
                },
                {
                  "id": 10025,
                  "name": "New Feature",
                },
                {
                  "id": 10023,
                  "name": "Bug",
                },
                {
                  "id": 10000,
                  "name": "Epic",
                },
              ],
              "status": "ok",
            },
          },
          "run_server_log_connector_request": {
            "summary": "Run a server log connector.",
            "value": {
              "params": {
                "level": "warn",
                "message": "Test warning message.",
              },
            },
          },
          "run_server_log_connector_response": {
            "summary": "Response from running a server log connector.",
            "value": {
              "connector_id": "7fc7b9a0-ecc9-11ec-8736-e7d63118c907",
              "status": "ok",
            },
          },
          "run_servicenow_itom_connector_request": {
            "summary": "Run a ServiceNow ITOM connector to retrieve the list of choices.",
            "value": {
              "params": {
                "subAction": "getChoices",
                "subActionParams": {
                  "fields": [
                    "severity",
                    "urgency",
                  ],
                },
              },
            },
          },
          "run_servicenow_itom_connector_response": {
            "summary": "Response from retrieving the list of choices for a ServiceNow ITOM connector.",
            "value": {
              "connector_id": "9d9be270-2fd2-11ed-b0e0-87533c532698",
              "data": [
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Critical",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Major",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Minor",
                  "value": 3,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Warning",
                  "value": 4,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "OK",
                  "value": 5,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Clear",
                  "value": 0,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "1 - High",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "2 - Medium",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "3 - Low",
                  "value": 3,
                },
              ],
              "status": "ok",
            },
          },
          "run_swimlane_connector_request": {
            "summary": "Run a Swimlane connector to create an incident.",
            "value": {
              "params": {
                "subAction": "pushToService",
                "subActionParams": {
                  "comments": [
                    {
                      "comment": "A comment about the incident.",
                      "commentId": 1,
                    },
                  ],
                  "incident": {
                    "caseId": "1000",
                    "caseName": "Case name",
                    "description": "Description of the incident.",
                  },
                },
              },
            },
          },
          "run_swimlane_connector_response": {
            "summary": "Response from creating a Swimlane incident.",
            "value": {
              "connector_id": "a4746470-2f94-11ed-b0e0-87533c532698",
              "data": {
                "comments": [
                  {
                    "commentId": 1,
                    "pushedDate": "2022-09-08T16:52:27.865Z",
                  },
                ],
                "id": "aKPmBHWzmdRQtx6Mx",
                "pushedDate": "2022-09-08T16:52:27.866Z",
                "title": "TEST-457",
                "url": "https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx",
              },
              "status": "ok",
            },
          },
          "update_index_connector_request": {
            "summary": "Update an index connector.",
            "value": {
              "config": {
                "index": "updated-index",
              },
              "name": "updated-connector",
            },
          },
        },
        "parameters": {
          "action_id": {
            "description": "An identifier for the action.",
            "in": "path",
            "name": "actionId",
            "required": true,
            "schema": {
              "example": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "type": "string",
            },
          },
          "connector_id": {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "connectorId",
            "required": true,
            "schema": {
              "example": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "responses": {
          "200_actions": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Unauthorized",
                      ],
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "message": {
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        401,
                      ],
                      "example": 401,
                      "type": "integer",
                    },
                  },
                  "title": "Unauthorized response",
                  "type": "object",
                },
              },
            },
            "description": "Authorization information is missing or invalid.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Not Found",
                      ],
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        404,
                      ],
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "title": "Not found response",
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "schemas": {
          "action_response_properties": {
            "description": "The properties vary depending on the action type.",
            "properties": {
              "actionTypeId": {
                "type": "string",
              },
              "config": {
                "type": "object",
              },
              "id": {
                "type": "string",
              },
              "isDeprecated": {
                "description": "Indicates whether the action type is deprecated.",
                "type": "boolean",
              },
              "isMissingSecrets": {
                "description": "Indicates whether secrets are missing for the action.",
                "type": "boolean",
              },
              "isPreconfigured": {
                "description": "Indicates whether it is a preconfigured action.",
                "type": "boolean",
              },
              "name": {
                "type": "string",
              },
            },
            "title": "Action response properties",
            "type": "object",
          },
          "config_properties_cases_webhook": {
            "description": "Defines properties for connectors when type is \`.cases-webhook\`.",
            "properties": {
              "createCommentJson": {
                "description": "A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is \`case.comment\`. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": {
                  "body": {
                    "[object Object]": null,
                  },
                },
                "type": "string",
              },
              "createCommentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to create a case comment in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createCommentUrl": {
                "description": "The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts setting\`, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment",
                "type": "string",
              },
              "createIncidentJson": {
                "description": "A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "createIncidentMethod": {
                "default": "post",
                "description": "The REST API HTTP request method to create a case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createIncidentResponseKey": {
                "description": "The JSON key in the create case response that contains the external case ID.",
                "type": "string",
              },
              "createIncidentUrl": {
                "description": "The REST API URL to create a case in the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
              "getIncidentResponseExternalTitleKey": {
                "description": "The JSON key in get case response that contains the external case title.",
                "type": "string",
              },
              "getIncidentUrl": {
                "description": "The REST API URL to get the case by ID from the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}",
                "type": "string",
              },
              "hasAuth": {
                "default": true,
                "description": "If true, a username and password for login type authentication must be provided.",
                "type": "boolean",
              },
              "headers": {
                "description": "A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
",
                "type": "string",
              },
              "updateIncidentJson": {
                "description": "The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "updateIncidentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to update the case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "updateIncidentUrl": {
                "description": "The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}",
                "type": "string",
              },
              "viewIncidentUrl": {
                "description": "The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
",
                "example": "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}",
                "type": "string",
              },
            },
            "required": [
              "createIncidentJson",
              "createIncidentResponseKey",
              "createIncidentUrl",
              "getIncidentResponseExternalTitleKey",
              "getIncidentUrl",
              "updateIncidentJson",
              "updateIncidentUrl",
              "viewIncidentUrl",
            ],
            "title": "Connector request properties for Webhook - Case Management connector",
            "type": "object",
          },
          "config_properties_email": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.email\`.",
            "title": "Connector request properties for an email connector",
            "type": "object",
          },
          "config_properties_index": {
            "description": "Defines properties for connectors when type is \`.index\`.",
            "properties": {
              "executionTimeField": {
                "default": null,
                "description": "Specifies a field that will contain the time the alert condition was detected.",
                "nullable": true,
                "type": "string",
              },
              "index": {
                "description": "The Elasticsearch index to be written to.",
                "type": "string",
              },
              "refresh": {
                "default": false,
                "description": "The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
",
                "type": "boolean",
              },
            },
            "required": [
              "index",
            ],
            "title": "Connector request properties for an index connector",
            "type": "object",
          },
          "config_properties_jira": {
            "description": "Defines properties for connectors when type is \`.jira\`.",
            "properties": {
              "apiUrl": {
                "description": "The Jira instance URL.",
                "type": "string",
              },
              "projectKey": {
                "description": "The Jira project key.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "projectKey",
            ],
            "title": "Connector request properties for a Jira connector",
            "type": "object",
          },
          "config_properties_opsgenie": {
            "description": "Defines properties for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiUrl": {
                "description": "The Opsgenie URL. For example, \`https://api.opsgenie.com\` or \`https://api.eu.opsgenie.com\`. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for an Opsgenie connector",
            "type": "object",
          },
          "config_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.pagerduty\`.",
            "title": "Connector request properties for a PagerDuty connector",
            "type": "object",
          },
          "config_properties_resilient": {
            "description": "Defines properties for connectors when type is \`.resilient\`.",
            "properties": {
              "apiUrl": {
                "description": "The IBM Resilient instance URL.",
                "type": "string",
              },
              "orgId": {
                "description": "The IBM Resilient organization ID.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "orgId",
            ],
            "title": "Connector request properties for a IBM Resilient connector",
            "type": "object",
          },
          "config_properties_servicenow": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "usesTableApi": {
                "default": true,
                "description": "Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to \`false\`, the Elastic application should be installed in ServiceNow.
",
                "type": "boolean",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_servicenow_itom": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_swimlane": {
            "description": "Defines properties for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiUrl": {
                "description": "The Swimlane instance URL.",
                "type": "string",
              },
              "appId": {
                "description": "The Swimlane application ID.",
                "type": "string",
              },
              "connectorType": {
                "description": "The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.",
                "enum": [
                  "all",
                  "alerts",
                  "cases",
                ],
                "type": "string",
              },
              "mappings": {
                "description": "The field mapping.",
                "properties": {
                  "alertIdConfig": {
                    "description": "Mapping for the alert ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Alert identifier mapping",
                    "type": "object",
                  },
                  "caseIdConfig": {
                    "description": "Mapping for the case ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case identifier mapping",
                    "type": "object",
                  },
                  "caseNameConfig": {
                    "description": "Mapping for the case name.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case name mapping",
                    "type": "object",
                  },
                  "commentsConfig": {
                    "description": "Mapping for the case comments.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case comment mapping",
                    "type": "object",
                  },
                  "descriptionConfig": {
                    "description": "Mapping for the case description.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case description mapping",
                    "type": "object",
                  },
                  "ruleNameConfig": {
                    "description": "Mapping for the name of the alert's rule.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Rule name mapping",
                    "type": "object",
                  },
                  "severityConfig": {
                    "description": "Mapping for the severity.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Severity mapping",
                    "type": "object",
                  },
                },
                "title": "Connector mappings properties for a Swimlane connector",
                "type": "object",
              },
            },
            "required": [
              "apiUrl",
              "appId",
              "connectorType",
            ],
            "title": "Connector request properties for a Swimlane connector",
            "type": "object",
          },
          "config_properties_tines": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.tines\`.",
            "title": "Connector request properties for a Tines connector",
            "type": "object",
          },
          "config_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.webhook\`.",
            "title": "Connector request properties for a Webhook connector",
            "type": "object",
          },
          "config_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.xmatters\`.",
            "title": "Connector request properties for a xMatters connector",
            "type": "object",
          },
          "connector_response_properties": {
            "description": "The properties vary depending on the connector type.",
            "discriminator": {
              "propertyName": "connector_type_id",
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/connector_response_properties_cases_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_email",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_index",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_jira",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_opsgenie",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_pagerduty",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_resilient",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_serverlog",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_itom",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_sir",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_api",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_swimlane",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_teams",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_tines",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_xmatters",
              },
            ],
            "title": "Connector response properties",
          },
          "connector_response_properties_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector request properties for a Webhook - Case Management connector",
            "type": "object",
          },
          "connector_response_properties_email": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an email connector",
            "type": "object",
          },
          "connector_response_properties_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an index connector",
            "type": "object",
          },
          "connector_response_properties_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Jira connector",
            "type": "object",
          },
          "connector_response_properties_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an Opsgenie connector",
            "type": "object",
          },
          "connector_response_properties_pagerduty": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a PagerDuty connector",
            "type": "object",
          },
          "connector_response_properties_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a IBM Resilient connector",
            "type": "object",
          },
          "connector_response_properties_serverlog": {
            "properties": {
              "config": {
                "nullable": true,
                "type": "object",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a server log connector",
            "type": "object",
          },
          "connector_response_properties_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITOM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_sir": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow SecOps connector",
            "type": "object",
          },
          "connector_response_properties_slack_api": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_slack_webhook": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Swimlane connector",
            "type": "object",
          },
          "connector_response_properties_teams": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Microsoft Teams connector",
            "type": "object",
          },
          "connector_response_properties_tines": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Tines connector",
            "type": "object",
          },
          "connector_response_properties_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Webhook connector",
            "type": "object",
          },
          "connector_response_properties_xmatters": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an xMatters connector",
            "type": "object",
          },
          "connector_types": {
            "description": "The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`, \`.opsgenie\`, or \`.server-log\`.",
            "enum": [
              ".cases-webhook",
              ".email",
              ".index",
              ".jira",
              ".opsgenie",
              ".pagerduty",
              ".resilient",
              ".servicenow",
              ".servicenow-itom",
              ".servicenow-sir",
              ".server-log",
              ".slack",
              ".swimlane",
              ".teams",
              ".tines",
              ".webhook",
              ".xmatters",
            ],
            "example": ".server-log",
            "title": "Connector types",
            "type": "string",
          },
          "create_connector_request_cases_webhook": {
            "description": "The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "example": ".cases-webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create Webhook - Case Managment connector request",
            "type": "object",
          },
          "create_connector_request_email": {
            "description": "The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "example": ".email",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_email",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create email connector request",
            "type": "object",
          },
          "create_connector_request_index": {
            "description": "The index connector indexes a document into Elasticsearch.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "example": ".index",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create index connector request",
            "type": "object",
          },
          "create_connector_request_jira": {
            "description": "The Jira connector uses the REST API v2 to create Jira issues.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "example": ".jira",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Jira connector request",
            "type": "object",
          },
          "create_connector_request_opsgenie": {
            "description": "The Opsgenie connector uses the Opsgenie alert API.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "example": ".opsgenie",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Opsgenie connector request",
            "type": "object",
          },
          "create_connector_request_pagerduty": {
            "description": "The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "example": ".pagerduty",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_pagerduty",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create PagerDuty connector request",
            "type": "object",
          },
          "create_connector_request_resilient": {
            "description": "The IBM Resilient connector uses the RESILIENT REST v2 to create IBM Resilient incidents.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "example": ".resilient",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create IBM Resilient connector request",
            "type": "object",
          },
          "create_connector_request_serverlog": {
            "description": "This connector writes an entry to the Kibana server log.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "example": ".server-log",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "name",
            ],
            "title": "Create server log connector request",
            "type": "object",
          },
          "create_connector_request_servicenow": {
            "description": "The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "example": ".servicenow",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITSM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_itom": {
            "description": "The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "example": ".servicenow-itom",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_sir": {
            "description": "The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "example": ".servicenow-sir",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow SecOps connector request",
            "type": "object",
          },
          "create_connector_request_slack_api": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "example": ".slack_api",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_slack_webhook": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "example": ".slack",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_swimlane": {
            "description": "The Swimlane connector uses the Swimlane REST API to create Swimlane records.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "example": ".swimlane",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Swimlane connector request",
            "type": "object",
          },
          "create_connector_request_teams": {
            "description": "The Microsoft Teams connector uses Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "example": ".teams",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_teams",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Microsoft Teams connector request",
            "type": "object",
          },
          "create_connector_request_tines": {
            "description": "The Tines connector uses Tines Webhook actions to send events via POST request.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "example": ".tines",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_tines",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Tines connector request",
            "type": "object",
          },
          "create_connector_request_webhook": {
            "description": "The Webhook connector uses axios to send a POST or PUT request to a web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "example": ".webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Webhook connector request",
            "type": "object",
          },
          "create_connector_request_xmatters": {
            "description": "The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "example": ".xmatters",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_xmatters",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create xMatters connector request",
            "type": "object",
          },
          "features": {
            "description": "The feature that uses the connector. Valid values are \`alerting\`, \`cases\`, \`uptime\`, and \`siem\`.
",
            "enum": [
              "alerting",
              "cases",
              "uptime",
              "siem",
            ],
            "type": "string",
          },
          "is_deprecated": {
            "description": "Indicates whether the connector type is deprecated.",
            "example": false,
            "type": "boolean",
          },
          "is_missing_secrets": {
            "description": "Indicates whether secrets are missing for the connector. Secrets configuration properties vary depending on the connector type.",
            "example": false,
            "type": "boolean",
          },
          "is_preconfigured": {
            "description": "Indicates whether it is a preconfigured connector. If true, the \`config\` and \`is_missing_secrets\` properties are omitted from the response.",
            "example": false,
            "type": "boolean",
          },
          "run_connector_params_documents": {
            "description": "Test an action that indexes a document into Elasticsearch.",
            "properties": {
              "documents": {
                "description": "The documents in JSON format for index connectors.",
                "items": {
                  "additionalProperties": true,
                  "type": "object",
                },
                "type": "array",
              },
            },
            "required": [
              "documents",
            ],
            "title": "Index connector parameters",
            "type": "object",
          },
          "run_connector_params_level_message": {
            "description": "Test an action that writes an entry to the Kibana server log.",
            "properties": {
              "level": {
                "default": "info",
                "description": "The log level of the message for server log connectors.",
                "enum": [
                  "debug",
                  "error",
                  "fatal",
                  "info",
                  "trace",
                  "warn",
                ],
                "type": "string",
              },
              "message": {
                "description": "The message for server log connectors.",
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "title": "Server log connector parameters",
            "type": "object",
          },
          "run_connector_subaction_addevent": {
            "description": "The \`addEvent\` subaction for ServiceNow ITOM connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "addEvent",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "additional_info": {
                    "description": "Additional information about the event.",
                    "type": "string",
                  },
                  "description": {
                    "description": "The details about the event.",
                    "type": "string",
                  },
                  "event_class": {
                    "description": "A specific instance of the source.",
                    "type": "string",
                  },
                  "message_key": {
                    "description": "All actions sharing this key are associated with the same ServiceNow alert. The default value is \`<rule ID>:<alert instance ID>\`.",
                    "type": "string",
                  },
                  "metric_name": {
                    "description": "The name of the metric.",
                    "type": "string",
                  },
                  "node": {
                    "description": "The host that the event was triggered for.",
                    "type": "string",
                  },
                  "resource": {
                    "description": "The name of the resource.",
                    "type": "string",
                  },
                  "severity": {
                    "description": "The severity of the event.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The name of the event source type.",
                    "type": "string",
                  },
                  "time_of_event": {
                    "description": "The time of the event.",
                    "type": "string",
                  },
                  "type": {
                    "description": "The type of event.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The addEvent subaction",
            "type": "object",
          },
          "run_connector_subaction_closealert": {
            "description": "The \`closeAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "closeAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie. The alias must match the value used when creating the alert.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                },
                "required": [
                  "alias",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The closeAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_createalert": {
            "description": "The \`createAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "createAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "actions": {
                    "description": "The custom actions available to the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie.",
                    "type": "string",
                  },
                  "description": {
                    "description": "A description that provides detailed information about the alert.",
                    "type": "string",
                  },
                  "details": {
                    "additionalProperties": true,
                    "description": "The custom properties of the alert.",
                    "example": {
                      "key1": "value1",
                      "key2": "value2",
                    },
                    "type": "object",
                  },
                  "entity": {
                    "description": "The domain of the alert. For example, the application or server name.",
                    "type": "string",
                  },
                  "message": {
                    "description": "The alert message.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "priority": {
                    "description": "The priority level for the alert.",
                    "enum": [
                      "P1",
                      "P2",
                      "P3",
                      "P4",
                      "P5",
                    ],
                    "type": "string",
                  },
                  "responders": {
                    "description": "The entities to receive notifications about the alert. If \`type\` is \`user\`, either \`id\` or \`username\` is required. If \`type\` is \`team\`, either \`id\` or \`name\` is required.
",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "The type of responders, in this case \`escalation\`.",
                          "enum": [
                            "escalation",
                            "schedule",
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "A valid email address for the user.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "tags": {
                    "description": "The tags for the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                  "visibleTo": {
                    "description": "The teams and users that the alert will be visible to without sending a notification. Only one of \`id\`, \`name\`, or \`username\` is required.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "Valid values are \`team\` and \`user\`.",
                          "enum": [
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "The user name. This property is required only when the \`type\` is \`user\`.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "type",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "message",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The createAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_fieldsbyissuetype": {
            "description": "The \`fieldsByIssueType\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "fieldsByIssueType",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue type identifier.",
                    "example": 10024,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The fieldsByIssueType subaction",
            "type": "object",
          },
          "run_connector_subaction_getchoices": {
            "description": "The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getChoices",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "fields": {
                    "description": "An array of fields.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "fields",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getChoices subaction",
            "type": "object",
          },
          "run_connector_subaction_getfields": {
            "description": "The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getFields",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The getFields subaction",
            "type": "object",
          },
          "run_connector_subaction_getincident": {
            "description": "The \`getIncident\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getIncident",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "externalId": {
                    "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "externalId",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getIncident subaction",
            "type": "object",
          },
          "run_connector_subaction_issue": {
            "description": "The \`issue\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issue",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issue subaction",
            "type": "object",
          },
          "run_connector_subaction_issues": {
            "description": "The \`issues\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issues",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "title": {
                    "description": "The title of the Jira issue.",
                    "type": "string",
                  },
                },
                "required": [
                  "title",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The issues subaction",
            "type": "object",
          },
          "run_connector_subaction_issuetypes": {
            "description": "The \`issueTypes\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issueTypes",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issueTypes subaction",
            "type": "object",
          },
          "run_connector_subaction_pushtoservice": {
            "description": "The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "pushToService",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "comments": {
                    "description": "Additional information that is sent to Jira, ServiceNow ITSM, ServiceNow SecOps, or Swimlane.",
                    "items": {
                      "properties": {
                        "comment": {
                          "description": "A comment related to the incident. For example, describe how to troubleshoot the issue.",
                          "type": "string",
                        },
                        "commentId": {
                          "description": "A unique identifier for the comment.",
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "incident": {
                    "description": "Information necessary to create or update a Jira, ServiceNow ITSM, ServiveNow SecOps, or Swimlane incident.",
                    "properties": {
                      "alertId": {
                        "description": "The alert identifier for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseId": {
                        "description": "The case identifier for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseName": {
                        "description": "The case name for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "category": {
                        "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_display": {
                        "description": "A descriptive label of the alert for correlation purposes for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_id": {
                        "description": "The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as \`{{ruleID}}:{{alert ID}}\` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of \`{{ruleID}}:{{alert ID}}\` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
",
                        "type": "string",
                      },
                      "description": {
                        "description": "The description of the incident for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
                        "type": "string",
                      },
                      "dest_ip": {
                        "description": "A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "externalId": {
                        "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
",
                        "type": "string",
                      },
                      "impact": {
                        "description": "The impact of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                      "issueType": {
                        "description": "The type of incident for Jira connectors. For example, 10006. To obtain the list of valid values, set \`subAction\` to \`issueTypes\`.",
                        "type": "integer",
                      },
                      "labels": {
                        "description": "The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "malware_hash": {
                        "description": "A list of malware hashes related to the security incident for ServiceNow SecOps connectors. The hashes are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "malware_url": {
                        "description": "A list of malware URLs related to the security incident for ServiceNow SecOps connectors. The URLs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                        "type": "string",
                      },
                      "parent": {
                        "description": "The ID or key of the parent issue for Jira connectors. Applies only to \`Sub-task\` types of issues.",
                        "type": "string",
                      },
                      "priority": {
                        "description": "The priority of the incident in Jira and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "ruleName": {
                        "description": "The rule name for Swimlane connectors.",
                        "type": "string",
                      },
                      "severity": {
                        "description": "The severity of the incident for ServiceNow ITSM and Swimlane connectors.",
                        "type": "string",
                      },
                      "short_description": {
                        "description": "A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "source_ip": {
                        "description": "A list of source IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "subcategory": {
                        "description": "The subcategory of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "summary": {
                        "description": "A summary of the incident for Jira connectors.",
                        "type": "string",
                      },
                      "title": {
                        "description": "A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "urgency": {
                        "description": "The urgency of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The pushToService subaction",
            "type": "object",
          },
          "secrets_properties_cases_webhook": {
            "properties": {
              "password": {
                "description": "The password for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
              "user": {
                "description": "The username for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for Webhook - Case Management connector",
            "type": "object",
          },
          "secrets_properties_email": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.email\`.",
            "title": "Connector secrets properties for an email connector",
            "type": "object",
          },
          "secrets_properties_jira": {
            "description": "Defines secrets for connectors when type is \`.jira\`.",
            "properties": {
              "apiToken": {
                "description": "The Jira API authentication token for HTTP basic authentication.",
                "type": "string",
              },
              "email": {
                "description": "The account email for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiToken",
              "email",
            ],
            "title": "Connector secrets properties for a Jira connector",
            "type": "object",
          },
          "secrets_properties_opsgenie": {
            "description": "Defines secrets for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiKey": {
                "description": "The Opsgenie API authentication key for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKey",
            ],
            "title": "Connector secrets properties for an Opsgenie connector",
            "type": "object",
          },
          "secrets_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.pagerduty\`.",
            "title": "Connector secrets properties for a PagerDuty connector",
            "type": "object",
          },
          "secrets_properties_resilient": {
            "description": "Defines secrets for connectors when type is \`.resilient\`.",
            "properties": {
              "apiKeyId": {
                "description": "The authentication key ID for HTTP Basic authentication.",
                "type": "string",
              },
              "apiKeySecret": {
                "description": "The authentication key secret for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKeyId",
              "apiKeySecret",
            ],
            "title": "Connector secrets properties for IBM Resilient connector",
            "type": "object",
          },
          "secrets_properties_servicenow": {
            "description": "Defines secrets for connectors when type is \`.servicenow\`, \`.servicenow-sir\`, or \`.servicenow-itom\`.",
            "properties": {
              "clientSecret": {
                "description": "The client secret assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "password": {
                "description": "The password for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
              "privateKey": {
                "description": "The RSA private key that you created for use in ServiceNow. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "privateKeyPassword": {
                "description": "The password for the RSA private key. This property is required when \`isOAuth\` is \`true\` and you set a password on your private key.",
                "type": "string",
              },
              "username": {
                "description": "The username for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors",
            "type": "object",
          },
          "secrets_properties_slack_api": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "token": {
                "description": "Slack bot user OAuth token.",
                "type": "string",
              },
            },
            "required": [
              "token",
            ],
            "title": "Connector secrets properties for a Web API Slack connector",
            "type": "object",
          },
          "secrets_properties_slack_webhook": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "webhookUrl": {
                "description": "Slack webhook url.",
                "type": "string",
              },
            },
            "required": [
              "webhookUrl",
            ],
            "title": "Connector secrets properties for a Webhook Slack connector",
            "type": "object",
          },
          "secrets_properties_swimlane": {
            "description": "Defines secrets for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiToken": {
                "description": "Swimlane API authentication token.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for a Swimlane connector",
            "type": "object",
          },
          "secrets_properties_teams": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.teams\`.",
            "title": "Connector secrets properties for a Microsoft Teams connector",
            "type": "object",
          },
          "secrets_properties_tines": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.tines\`.",
            "title": "Connector secrets properties for a Tines connector",
            "type": "object",
          },
          "secrets_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.webhook\`.",
            "title": "Connector secrets properties for a Webhook connector",
            "type": "object",
          },
          "secrets_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.xmatters\`.",
            "title": "Connector secrets properties for an xMatters connector",
            "type": "object",
          },
          "update_connector_request_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update Webhook - Case Managment connector request",
            "type": "object",
          },
          "update_connector_request_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update index connector request",
            "type": "object",
          },
          "update_connector_request_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Jira connector request",
            "type": "object",
          },
          "update_connector_request_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Opsgenie connector request",
            "type": "object",
          },
          "update_connector_request_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update IBM Resilient connector request",
            "type": "object",
          },
          "update_connector_request_serverlog": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "title": "Update server log connector request",
            "type": "object",
          },
          "update_connector_request_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update ServiceNow ITSM connector or ServiceNow SecOps request",
            "type": "object",
          },
          "update_connector_request_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "update_connector_request_slack_api": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_slack_webhook": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Swimlane connector request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Connectors Team",
        },
        "description": "OpenAPI schema for Connectors endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Connectors",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/actions": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connectors API instead.",
            "operationId": "legacyGetConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/action_response_properties",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create connector API instead.",
            "operationId": "legacyCreateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actionTypeId": {
                        "description": "The connector type identifier.",
                        "type": "string",
                      },
                      "config": {
                        "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The display name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
",
                        "type": "object",
                      },
                    },
                    "title": "Legacy create connector request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "legacyDeleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get connector API instead.",
            "operationId": "legacyGetConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update connector API instead.",
            "operationId": "legacyUpdateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "config": {
                        "description": "The new connector configuration. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The new name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The updated secrets configuration for the connector. Secrets properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "title": "Legacy update connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}/_execute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the run connector API instead.",
            "operationId": "legacyRunConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "description": "The parameters of the connector. Parameter properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Legacy run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "actionId": {
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector": {
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "deleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorResponse": {
                        "$ref": "#/components/examples/get_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnectorId",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A UUID v1 or v4 identifier for the connector. If you omit this parameter, an identifier is randomly generated.",
                "in": "path",
                "name": "connectorId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "updateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateIndexConnectorRequest": {
                      "$ref": "#/components/examples/update_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/update_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_swimlane",
                      },
                    ],
                    "title": "Update connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Bad Request",
                          "type": "string",
                        },
                        "message": {
                          "example": "error validating action type config: [index]: expected value of type [string] but got [undefined]",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 400,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a bad request.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}/_execute": {
          "post": {
            "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\` indices privileges.
",
            "operationId": "runConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "runIndexConnectorRequest": {
                      "$ref": "#/components/examples/run_index_connector_request",
                    },
                    "runJiraConnectorRequest": {
                      "$ref": "#/components/examples/run_jira_connector_request",
                    },
                    "runServerLogConnectorRequest": {
                      "$ref": "#/components/examples/run_server_log_connector_request",
                    },
                    "runServiceNowITOMConnectorRequest": {
                      "$ref": "#/components/examples/run_servicenow_itom_connector_request",
                    },
                    "runSwimlaneConnectorRequest": {
                      "$ref": "#/components/examples/run_swimlane_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/run_connector_params_documents",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_params_level_message",
                          },
                          {
                            "description": "Test an action that involves a subaction.",
                            "discriminator": {
                              "propertyName": "subAction",
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_addevent",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_closealert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_createalert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_fieldsbyissuetype",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getchoices",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getfields",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getincident",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issue",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issues",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issuetypes",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_pushtoservice",
                              },
                            ],
                            "title": "Subaction parameters",
                          },
                        ],
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "runIndexConnectorResponse": {
                        "$ref": "#/components/examples/run_index_connector_response",
                      },
                      "runJiraConnectorResponse": {
                        "$ref": "#/components/examples/run_jira_connector_response",
                      },
                      "runServerLogConnectorResponse": {
                        "$ref": "#/components/examples/run_server_log_connector_response",
                      },
                      "runServiceNowITOMConnectorResponse": {
                        "$ref": "#/components/examples/run_servicenow_itom_connector_response",
                      },
                      "runSwimlaneConnectorResponse": {
                        "$ref": "#/components/examples/run_swimlane_connector_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "connector_id": {
                          "description": "The identifier for the connector.",
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "enum": [
                            "error",
                            "ok",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "connector_id",
                        "status",
                      ],
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector_types": {
          "get": {
            "description": "You do not need any Kibana feature privileges to run this API.
",
            "operationId": "getConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
                "in": "query",
                "name": "feature_id",
                "schema": {
                  "$ref": "#/components/schemas/features",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorTypesResponse": {
                        "$ref": "#/components/examples/get_connector_types_response",
                      },
                    },
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_config": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "minimum_license_required": {
                            "description": "The license that is required to use the connector type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "example": "Index",
                            "type": "string",
                          },
                          "supported_feature_ids": {
                            "description": "The Kibana features that are supported by the connector type.",
                            "example": [
                              "alerting",
                              "uptime",
                              "siem",
                            ],
                            "items": {
                              "$ref": "#/components/schemas/features",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connectors": {
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorsResponse": {
                        "$ref": "#/components/examples/get_connectors_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "description": "The properties vary for each connector type.",
                        "properties": {
                          "config": {
                            "additionalProperties": true,
                            "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                            "nullable": true,
                            "type": "object",
                          },
                          "connector_type_id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "id": {
                            "description": "The identifier for the connector.",
                            "example": "b0766e10-d190-11ec-b04c-776c77d14fca",
                            "type": "string",
                          },
                          "is_deprecated": {
                            "$ref": "#/components/schemas/is_deprecated",
                          },
                          "is_missing_secrets": {
                            "$ref": "#/components/schemas/is_missing_secrets",
                          },
                          "is_preconfigured": {
                            "$ref": "#/components/schemas/is_preconfigured",
                          },
                          "name": {
                            "description": "The display name for the connector.",
                            "example": "my-connector",
                            "type": "string",
                          },
                          "referenced_by_count": {
                            "default": 0,
                            "description": "Indicates the number of saved objects that reference the connector. If \`is_preconfigured\` is true, this value is not calculated.",
                            "example": 2,
                            "type": "integer",
                          },
                        },
                        "required": [
                          "connector_type_id",
                          "id",
                          "is_deprecated",
                          "is_preconfigured",
                          "name",
                          "referenced_by_count",
                        ],
                        "title": "Get connectors response body properties",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/list_action_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connector types API instead.",
            "operationId": "legacyGetConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "type": "boolean",
                          },
                          "enabledInConfig": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "type": "boolean",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the connector type.",
                            "type": "string",
                          },
                          "minimumLicenseRequired": {
                            "description": "The license that is required to use the connector type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Legacy get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Connector APIs enable you to create and manage connectors.",
          "name": "connectors",
        },
      ],
    },
    "yaml": "openapi: 3.0.1
info:
  title: Connectors
  description: OpenAPI schema for Connectors endpoints
  version: \\"0.1\\"
  contact:
    name: Connectors Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
tags:
  - name: connectors
    description: Connector APIs enable you to create and manage connectors.
servers:
  - url: http://localhost:5601
    description: local
paths:
  \\"/s/{spaceId}/api/actions/connector\\":
    post:
      summary: Creates a connector.
      operationId: createConnector
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Create connector request body properties
              description: The properties vary depending on the connector type.
              oneOf:
                - $ref: \\"#/components/schemas/create_connector_request_cases_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_email\\"
                - $ref: \\"#/components/schemas/create_connector_request_index\\"
                - $ref: \\"#/components/schemas/create_connector_request_jira\\"
                - $ref: \\"#/components/schemas/create_connector_request_opsgenie\\"
                - $ref: \\"#/components/schemas/create_connector_request_pagerduty\\"
                - $ref: \\"#/components/schemas/create_connector_request_resilient\\"
                - $ref: \\"#/components/schemas/create_connector_request_serverlog\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_itom\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_sir\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_api\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_swimlane\\"
                - $ref: \\"#/components/schemas/create_connector_request_teams\\"
                - $ref: \\"#/components/schemas/create_connector_request_tines\\"
                - $ref: \\"#/components/schemas/create_connector_request_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_xmatters\\"
              discriminator:
                propertyName: connector_type_id
            examples:
              createIndexConnectorRequest:
                $ref: \\"#/components/examples/create_index_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
              examples:
                createIndexConnectorResponse:
                  $ref: \\"#/components/examples/create_index_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connector/{connectorId}\\":
    get:
      summary: Retrieves a connector by ID.
      operationId: getConnector
      description: >
        You must have \`read\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
              examples:
                getConnectorResponse:
                  $ref: \\"#/components/examples/get_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found
                  statusCode:
                    type: integer
                    example: 404
      servers:
        - url: https://localhost:5601
    delete:
      summary: Deletes a connector.
      operationId: deleteConnector
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
        WARNING: When you delete a connector, it cannot be recovered.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found
                  statusCode:
                    type: integer
                    example: 404
      servers:
        - url: https://localhost:5601
    post:
      summary: Creates a connector.
      operationId: createConnectorId
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: connectorId
          description: A UUID v1 or v4 identifier for the connector. If you omit this
            parameter, an identifier is randomly generated.
          required: true
          schema:
            type: string
            example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Create connector request body properties
              description: The properties vary depending on the connector type.
              oneOf:
                - $ref: \\"#/components/schemas/create_connector_request_cases_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_email\\"
                - $ref: \\"#/components/schemas/create_connector_request_index\\"
                - $ref: \\"#/components/schemas/create_connector_request_jira\\"
                - $ref: \\"#/components/schemas/create_connector_request_opsgenie\\"
                - $ref: \\"#/components/schemas/create_connector_request_pagerduty\\"
                - $ref: \\"#/components/schemas/create_connector_request_resilient\\"
                - $ref: \\"#/components/schemas/create_connector_request_serverlog\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_itom\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_sir\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_api\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_swimlane\\"
                - $ref: \\"#/components/schemas/create_connector_request_teams\\"
                - $ref: \\"#/components/schemas/create_connector_request_tines\\"
                - $ref: \\"#/components/schemas/create_connector_request_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_xmatters\\"
              discriminator:
                propertyName: connector_type_id
            examples:
              createIndexConnectorRequest:
                $ref: \\"#/components/examples/create_index_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
              examples:
                createIndexConnectorResponse:
                  $ref: \\"#/components/examples/create_index_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for a connector.
      operationId: updateConnector
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Update connector request body properties
              description: The properties vary depending on the connector type.
              oneOf:
                - $ref: \\"#/components/schemas/update_connector_request_cases_webhook\\"
                - $ref: \\"#/components/schemas/update_connector_request_index\\"
                - $ref: \\"#/components/schemas/update_connector_request_jira\\"
                - $ref: \\"#/components/schemas/update_connector_request_opsgenie\\"
                - $ref: \\"#/components/schemas/update_connector_request_resilient\\"
                - $ref: \\"#/components/schemas/update_connector_request_serverlog\\"
                - $ref: \\"#/components/schemas/update_connector_request_servicenow\\"
                - $ref: \\"#/components/schemas/update_connector_request_servicenow_itom\\"
                - $ref: \\"#/components/schemas/update_connector_request_slack_api\\"
                - $ref: \\"#/components/schemas/update_connector_request_slack_webhook\\"
                - $ref: \\"#/components/schemas/update_connector_request_swimlane\\"
            examples:
              updateIndexConnectorRequest:
                $ref: \\"#/components/examples/update_index_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
        \\"400\\":
          description: Indicates a bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: \\"error validating action type config: [index]: expected value of type
                      [string] but got [undefined]\\"
                  statusCode:
                    type: integer
                    example: 400
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
        \\"404\\":
          $ref: \\"#/components/responses/404\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connectors\\":
    get:
      summary: Retrieves all connectors.
      operationId: getConnectors
      description: >
        You must have \`read\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Get connectors response body properties
                  description: The properties vary for each connector type.
                  type: object
                  required:
                    - connector_type_id
                    - id
                    - is_deprecated
                    - is_preconfigured
                    - name
                    - referenced_by_count
                  properties:
                    connector_type_id:
                      $ref: \\"#/components/schemas/connector_types\\"
                    config:
                      type: object
                      description: The configuration for the connector. Configuration properties vary
                        depending on the connector type.
                      additionalProperties: true
                      nullable: true
                    id:
                      type: string
                      description: The identifier for the connector.
                      example: b0766e10-d190-11ec-b04c-776c77d14fca
                    is_deprecated:
                      $ref: \\"#/components/schemas/is_deprecated\\"
                    is_missing_secrets:
                      $ref: \\"#/components/schemas/is_missing_secrets\\"
                    is_preconfigured:
                      $ref: \\"#/components/schemas/is_preconfigured\\"
                    name:
                      type: string
                      description: The display name for the connector.
                      example: my-connector
                    referenced_by_count:
                      type: integer
                      description: Indicates the number of saved objects that reference the connector.
                        If \`is_preconfigured\` is true, this value is not
                        calculated.
                      example: 2
                      default: 0
              examples:
                getConnectorsResponse:
                  $ref: \\"#/components/examples/get_connectors_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connector_types\\":
    get:
      summary: Retrieves a list of all connector types.
      operationId: getConnectorTypes
      description: |
        You do not need any Kibana feature privileges to run this API.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - in: query
          name: feature_id
          description: A filter to limit the retrieved connector types to those that
            support a specific feature (such as alerting or cases).
          schema:
            $ref: \\"#/components/schemas/features\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                title: Get connector types response body properties
                description: The properties vary for each connector type.
                type: array
                items:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      description: Indicates whether the connector type is enabled in Kibana.
                      example: true
                    enabled_in_config:
                      type: boolean
                      description: Indicates whether the connector type is enabled in the Kibana
                        \`.yml\` file.
                      example: true
                    enabled_in_license:
                      type: boolean
                      description: Indicates whether the connector is enabled in the license.
                      example: true
                    id:
                      $ref: \\"#/components/schemas/connector_types\\"
                    minimum_license_required:
                      type: string
                      description: The license that is required to use the connector type.
                      example: basic
                    name:
                      type: string
                      description: The name of the connector type.
                      example: Index
                    supported_feature_ids:
                      type: array
                      description: The Kibana features that are supported by the connector type.
                      items:
                        $ref: \\"#/components/schemas/features\\"
                      example:
                        - alerting
                        - uptime
                        - siem
              examples:
                getConnectorTypesResponse:
                  $ref: \\"#/components/examples/get_connector_types_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connector/{connectorId}/_execute\\":
    post:
      summary: Runs a connector.
      operationId: runConnector
      description: >
        You can use this API to test an action that involves interaction with
        Kibana services or integrations with third-party systems. You must have
        \`read\` privileges for the **Actions and Connectors** feature in the
        **Management** section of the Kibana feature privileges. If you use an
        index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\`
        indices privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Run connector request body properties
              description: The properties vary depending on the connector type.
              type: object
              required:
                - params
              properties:
                params:
                  oneOf:
                    - $ref: \\"#/components/schemas/run_connector_params_documents\\"
                    - $ref: \\"#/components/schemas/run_connector_params_level_message\\"
                    - title: Subaction parameters
                      description: Test an action that involves a subaction.
                      oneOf:
                        - $ref: \\"#/components/schemas/run_connector_subaction_addevent\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_closealert\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_createalert\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_fieldsbyissuetype\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_getchoices\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_getfields\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_getincident\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_issue\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_issues\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_issuetypes\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_pushtoservice\\"
                      discriminator:
                        propertyName: subAction
            examples:
              runIndexConnectorRequest:
                $ref: \\"#/components/examples/run_index_connector_request\\"
              runJiraConnectorRequest:
                $ref: \\"#/components/examples/run_jira_connector_request\\"
              runServerLogConnectorRequest:
                $ref: \\"#/components/examples/run_server_log_connector_request\\"
              runServiceNowITOMConnectorRequest:
                $ref: \\"#/components/examples/run_servicenow_itom_connector_request\\"
              runSwimlaneConnectorRequest:
                $ref: \\"#/components/examples/run_swimlane_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                required:
                  - connector_id
                  - status
                properties:
                  connector_id:
                    type: string
                    description: The identifier for the connector.
                  data:
                    oneOf:
                      - type: object
                        description: Information returned from the action.
                        additionalProperties: true
                      - type: array
                        description: An array of information returned from the action.
                        items:
                          type: object
                  status:
                    type: string
                    description: The status of the action.
                    enum:
                      - error
                      - ok
              examples:
                runIndexConnectorResponse:
                  $ref: \\"#/components/examples/run_index_connector_response\\"
                runJiraConnectorResponse:
                  $ref: \\"#/components/examples/run_jira_connector_response\\"
                runServerLogConnectorResponse:
                  $ref: \\"#/components/examples/run_server_log_connector_response\\"
                runServiceNowITOMConnectorResponse:
                  $ref: \\"#/components/examples/run_servicenow_itom_connector_response\\"
                runSwimlaneConnectorResponse:
                  $ref: \\"#/components/examples/run_swimlane_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/action/{actionId}\\":
    delete:
      summary: Deletes a connector.
      operationId: legacyDeleteConnector
      deprecated: true
      description: >
        Deprecated in 7.13.0. Use the delete connector API instead. WARNING:
        When you delete a connector, it cannot be recovered.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    get:
      summary: Retrieves a connector by ID.
      operationId: legacyGetConnector
      description: Deprecated in 7.13.0. Use the get connector API instead.
      deprecated: true
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          $ref: \\"#/components/responses/200_actions\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for a connector.
      operationId: legacyUpdateConnector
      deprecated: true
      description: Deprecated in 7.13.0. Use the update connector API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy update connector request body properties
              description: The properties vary depending on the connector type.
              type: object
              properties:
                config:
                  type: object
                  description: The new connector configuration. Configuration properties vary
                    depending on the connector type.
                name:
                  type: string
                  description: The new name for the connector.
                secrets:
                  type: object
                  description: The updated secrets configuration for the connector. Secrets
                    properties vary depending on the connector type.
      responses:
        \\"200\\":
          $ref: \\"#/components/responses/200_actions\\"
        \\"404\\":
          $ref: \\"#/components/responses/404\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions\\":
    get:
      summary: Retrieves all connectors.
      operationId: legacyGetConnectors
      deprecated: true
      description: Deprecated in 7.13.0. Use the get all connectors API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: \\"#/components/schemas/action_response_properties\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    post:
      summary: Creates a connector.
      operationId: legacyCreateConnector
      deprecated: true
      description: Deprecated in 7.13.0. Use the create connector API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy create connector request properties
              type: object
              properties:
                actionTypeId:
                  type: string
                  description: The connector type identifier.
                config:
                  type: object
                  description: The configuration for the connector. Configuration properties vary
                    depending on the connector type.
                name:
                  type: string
                  description: The display name for the connector.
                secrets:
                  type: object
                  description: >
                    The secrets configuration for the connector. Secrets
                    configuration properties vary depending on the connector
                    type. NOTE: Remember these values. You must provide them
                    each time you update the connector.
      responses:
        \\"200\\":
          $ref: \\"#/components/responses/200_actions\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/list_action_types\\":
    get:
      summary: Retrieves a list of all connector types.
      operationId: legacyGetConnectorTypes
      deprecated: true
      description: Deprecated in 7.13.0. Use the get all connector types API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                title: Legacy get connector types response body properties
                description: The properties vary for each connector type.
                type: array
                items:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      description: Indicates whether the connector type is enabled in Kibana.
                    enabledInConfig:
                      type: boolean
                      description: Indicates whether the connector type is enabled in the Kibana
                        \`.yml\` file.
                    enabledInLicense:
                      type: boolean
                      description: Indicates whether the connector is enabled in the license.
                      example: true
                    id:
                      type: string
                      description: The unique identifier for the connector type.
                    minimumLicenseRequired:
                      type: string
                      description: The license that is required to use the connector type.
                    name:
                      type: string
                      description: The name of the connector type.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/action/{actionId}/_execute\\":
    post:
      summary: Runs a connector.
      operationId: legacyRunConnector
      deprecated: true
      description: Deprecated in 7.13.0. Use the run connector API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy run connector request body properties
              description: The properties vary depending on the connector type.
              type: object
              required:
                - params
              properties:
                params:
                  type: object
                  description: The parameters of the connector. Parameter properties vary
                    depending on the connector type.
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  actionId:
                    type: string
                  data:
                    oneOf:
                      - type: object
                        description: Information returned from the action.
                        additionalProperties: true
                      - type: array
                        description: An array of information returned from the action.
                        items:
                          type: object
                  status:
                    type: string
                    description: The status of the action.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: ApiKey
  parameters:
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
    space_id:
      in: path
      name: spaceId
      description: An identifier for the space. If \`/s/\` and the identifier are
        omitted from the path, the default space is used.
      required: true
      schema:
        type: string
        example: default
    connector_id:
      in: path
      name: connectorId
      description: An identifier for the connector.
      required: true
      schema:
        type: string
        example: df770e30-8b8b-11ed-a780-3b746c987a81
    action_id:
      in: path
      name: actionId
      description: An identifier for the action.
      required: true
      schema:
        type: string
        example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
  schemas:
    config_properties_cases_webhook:
      title: Connector request properties for Webhook - Case Management connector
      required:
        - createIncidentJson
        - createIncidentResponseKey
        - createIncidentUrl
        - getIncidentResponseExternalTitleKey
        - getIncidentUrl
        - updateIncidentJson
        - updateIncidentUrl
        - viewIncidentUrl
      description: Defines properties for connectors when type is \`.cases-webhook\`.
      type: object
      properties:
        createCommentJson:
          type: string
          description: >
            A JSON payload sent to the create comment URL to create a case
            comment. You can use variables to add Kibana Cases data to the
            payload. The required variable is \`case.comment\`. Due to Mustache
            template variables (the text enclosed in triple braces, for example,
            \`{{{case.title}}}\`), the JSON is not validated when you create the
            connector. The JSON is validated once the Mustache variables have
            been placed when the REST method runs. Manually ensure that the JSON
            is valid, disregarding the Mustache variables, so the later
            validation will pass.
          example:
            body:
              \\"[object Object]\\": null
        createCommentMethod:
          type: string
          description: >
            The REST API HTTP request method to create a case comment in the
            third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
          default: put
          enum:
            - patch
            - post
            - put
        createCommentUrl:
          type: string
          description: >
            The REST API URL to create a case comment by ID in the third-party
            system. You can use a variable to add the external system ID to the
            URL. If you are using the \`xpack.actions.allowedHosts setting\`, add
            the hostname to the allowed hosts.
          example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment
        createIncidentJson:
          type: string
          description: >
            A JSON payload sent to the create case URL to create a case. You can
            use variables to add case data to the payload. Required variables
            are \`case.title\` and \`case.description\`. Due to Mustache template
            variables (which is the text enclosed in triple braces, for example,
            \`{{{case.title}}}\`), the JSON is not validated when you create the
            connector. The JSON is validated after the Mustache variables have
            been placed when REST method runs. Manually ensure that the JSON is
            valid to avoid future validation errors; disregard Mustache
            variables during your review.
          example:
            fields:
              summary:
                \\"[object Object]\\": null
              description:
                \\"[object Object]\\": null
              labels:
                \\"[object Object]\\": null
        createIncidentMethod:
          type: string
          description: >
            The REST API HTTP request method to create a case in the third-party
            system. Valid values are \`patch\`, \`post\`, and \`put\`.
          enum:
            - patch
            - post
            - put
          default: post
        createIncidentResponseKey:
          type: string
          description: The JSON key in the create case response that contains the external
            case ID.
        createIncidentUrl:
          type: string
          description: >
            The REST API URL to create a case in the third-party system. If you
            are using the \`xpack.actions.allowedHosts\` setting, add the hostname
            to the allowed hosts.
        getIncidentResponseExternalTitleKey:
          type: string
          description: The JSON key in get case response that contains the external case
            title.
        getIncidentUrl:
          type: string
          description: >
            The REST API URL to get the case by ID from the third-party system.
            If you are using the \`xpack.actions.allowedHosts\` setting, add the
            hostname to the allowed hosts. You can use a variable to add the
            external system ID to the URL. Due to Mustache template variables
            (the text enclosed in triple braces, for example,
            \`{{{case.title}}}\`), the JSON is not validated when you create the
            connector. The JSON is validated after the Mustache variables have
            been placed when REST method runs. Manually ensure that the JSON is
            valid, disregarding the Mustache variables, so the later validation
            will pass.
          example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}
        hasAuth:
          type: boolean
          description: If true, a username and password for login type authentication must
            be provided.
          default: true
        headers:
          type: string
          description: >
            A set of key-value pairs sent as headers with the request URLs for
            the create case, update case, get case, and create comment methods.
        updateIncidentJson:
          type: string
          description: >
            The JSON payload sent to the update case URL to update the case. You
            can use variables to add Kibana Cases data to the payload. Required
            variables are \`case.title\` and \`case.description\`. Due to Mustache
            template variables (which is the text enclosed in triple braces, for
            example, \`{{{case.title}}}\`), the JSON is not validated when you
            create the connector. The JSON is validated after the Mustache
            variables have been placed when REST method runs. Manually ensure
            that the JSON is valid to avoid future validation errors; disregard
            Mustache variables during your review.
          example:
            fields:
              summary:
                \\"[object Object]\\": null
              description:
                \\"[object Object]\\": null
              labels:
                \\"[object Object]\\": null
        updateIncidentMethod:
          type: string
          description: >
            The REST API HTTP request method to update the case in the
            third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
          default: put
          enum:
            - patch
            - post
            - put
        updateIncidentUrl:
          type: string
          description: >
            The REST API URL to update the case by ID in the third-party system.
            You can use a variable to add the external system ID to the URL. If
            you are using the \`xpack.actions.allowedHosts\` setting, add the
            hostname to the allowed hosts.
          example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}
        viewIncidentUrl:
          type: string
          description: >
            The URL to view the case in the external system. You can use
            variables to add the external system ID or external system title to
            the URL.
          example: https://testing-jira.atlassian.net/browse/{{{external.system.title}}}
    secrets_properties_cases_webhook:
      title: Connector secrets properties for Webhook - Case Management connector
      type: object
      properties:
        password:
          type: string
          description: The password for HTTP basic authentication. If \`hasAuth\` is set to
            \`true\`, this property is required.
        user:
          type: string
          description: The username for HTTP basic authentication. If \`hasAuth\` is set to
            \`true\`, this property is required.
    create_connector_request_cases_webhook:
      title: Create Webhook - Case Managment connector request
      description: >
        The Webhook - Case Management connector uses axios to send POST, PUT,
        and GET requests to a case management RESTful API web service.
      type: object
      required:
        - config
        - connector_type_id
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_cases_webhook\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .cases-webhook
          example: .cases-webhook
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_cases_webhook\\"
    config_properties_email:
      title: Connector request properties for an email connector
      description: Defines properties for connectors when type is \`.email\`.
      type: object
      additionalProperties: true
    secrets_properties_email:
      title: Connector secrets properties for an email connector
      description: Defines secrets for connectors when type is \`.email\`.
      type: object
      additionalProperties: true
    create_connector_request_email:
      title: Create email connector request
      description: >
        The email connector uses the SMTP protocol to send mail messages, using
        an integration of Nodemailer. An exception is Microsoft Exchange, which
        uses HTTP protocol for sending emails, Send mail. Email message text is
        sent as both plain text and html text.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_email\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .email
          example: .email
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_email\\"
    create_connector_request_index:
      title: Create index connector request
      description: The index connector indexes a document into Elasticsearch.
      type: object
      required:
        - config
        - connector_type_id
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_index\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .index
          example: .index
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
    config_properties_jira:
      title: Connector request properties for a Jira connector
      required:
        - apiUrl
        - projectKey
      description: Defines properties for connectors when type is \`.jira\`.
      type: object
      properties:
        apiUrl:
          description: The Jira instance URL.
          type: string
        projectKey:
          description: The Jira project key.
          type: string
    secrets_properties_jira:
      title: Connector secrets properties for a Jira connector
      required:
        - apiToken
        - email
      description: Defines secrets for connectors when type is \`.jira\`.
      type: object
      properties:
        apiToken:
          description: The Jira API authentication token for HTTP basic authentication.
          type: string
        email:
          description: The account email for HTTP Basic authentication.
          type: string
    create_connector_request_jira:
      title: Create Jira connector request
      description: The Jira connector uses the REST API v2 to create Jira issues.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_jira\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .jira
          example: .jira
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_jira\\"
    config_properties_opsgenie:
      title: Connector request properties for an Opsgenie connector
      required:
        - apiUrl
      description: Defines properties for connectors when type is \`.opsgenie\`.
      type: object
      properties:
        apiUrl:
          description: >
            The Opsgenie URL. For example, \`https://api.opsgenie.com\` or
            \`https://api.eu.opsgenie.com\`. If you are using the
            \`xpack.actions.allowedHosts\` setting, add the hostname to the
            allowed hosts.
          type: string
    secrets_properties_opsgenie:
      title: Connector secrets properties for an Opsgenie connector
      required:
        - apiKey
      description: Defines secrets for connectors when type is \`.opsgenie\`.
      type: object
      properties:
        apiKey:
          description: The Opsgenie API authentication key for HTTP Basic authentication.
          type: string
    create_connector_request_opsgenie:
      title: Create Opsgenie connector request
      description: The Opsgenie connector uses the Opsgenie alert API.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_opsgenie\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .opsgenie
          example: .opsgenie
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_opsgenie\\"
    config_properties_pagerduty:
      title: Connector request properties for a PagerDuty connector
      description: Defines properties for connectors when type is \`.pagerduty\`.
      type: object
      additionalProperties: true
    secrets_properties_pagerduty:
      title: Connector secrets properties for a PagerDuty connector
      description: Defines secrets for connectors when type is \`.pagerduty\`.
      type: object
      additionalProperties: true
    create_connector_request_pagerduty:
      title: Create PagerDuty connector request
      description: >
        The PagerDuty connector uses the v2 Events API to trigger, acknowledge,
        and resolve PagerDuty alerts.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_pagerduty\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .pagerduty
          example: .pagerduty
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_pagerduty\\"
    config_properties_resilient:
      title: Connector request properties for a IBM Resilient connector
      required:
        - apiUrl
        - orgId
      description: Defines properties for connectors when type is \`.resilient\`.
      type: object
      properties:
        apiUrl:
          description: The IBM Resilient instance URL.
          type: string
        orgId:
          description: The IBM Resilient organization ID.
          type: string
    secrets_properties_resilient:
      title: Connector secrets properties for IBM Resilient connector
      required:
        - apiKeyId
        - apiKeySecret
      description: Defines secrets for connectors when type is \`.resilient\`.
      type: object
      properties:
        apiKeyId:
          type: string
          description: The authentication key ID for HTTP Basic authentication.
        apiKeySecret:
          type: string
          description: The authentication key secret for HTTP Basic authentication.
    create_connector_request_resilient:
      title: Create IBM Resilient connector request
      description: The IBM Resilient connector uses the RESILIENT REST v2 to create
        IBM Resilient incidents.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_resilient\\"
        connector_type_id:
          description: The type of connector.
          type: string
          example: .resilient
          enum:
            - .resilient
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_resilient\\"
    create_connector_request_serverlog:
      title: Create server log connector request
      description: This connector writes an entry to the Kibana server log.
      type: object
      required:
        - connector_type_id
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .server-log
          example: .server-log
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
    config_properties_servicenow:
      title: Connector request properties for a ServiceNow ITSM connector
      required:
        - apiUrl
      description: Defines properties for connectors when type is \`.servicenow\`.
      type: object
      properties:
        apiUrl:
          type: string
          description: The ServiceNow instance URL.
        clientId:
          description: >
            The client ID assigned to your OAuth application. This property is
            required when \`isOAuth\` is \`true\`.
          type: string
        isOAuth:
          description: >
            The type of authentication to use. The default value is false, which
            means basic authentication is used instead of open authorization
            (OAuth).
          default: false
          type: boolean
        jwtKeyId:
          description: >
            The key identifier assigned to the JWT verifier map of your OAuth
            application. This property is required when \`isOAuth\` is \`true\`.
          type: string
        userIdentifierValue:
          description: >
            The identifier to use for OAuth authentication. This identifier
            should be the user field you selected when you created an OAuth JWT
            API endpoint for external clients in your ServiceNow instance. For
            example, if the selected user field is \`Email\`, the user identifier
            should be the user's email address. This property is required when
            \`isOAuth\` is \`true\`.
          type: string
        usesTableApi:
          description: >
            Determines whether the connector uses the Table API or the Import
            Set API. This property is supported only for ServiceNow ITSM and
            ServiceNow SecOps connectors.  NOTE: If this property is set to
            \`false\`, the Elastic application should be installed in ServiceNow.
          default: true
          type: boolean
    secrets_properties_servicenow:
      title: Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and
        ServiceNow SecOps connectors
      description: Defines secrets for connectors when type is \`.servicenow\`,
        \`.servicenow-sir\`, or \`.servicenow-itom\`.
      type: object
      properties:
        clientSecret:
          type: string
          description: The client secret assigned to your OAuth application. This property
            is required when \`isOAuth\` is \`true\`.
        password:
          type: string
          description: The password for HTTP basic authentication. This property is
            required when \`isOAuth\` is \`false\`.
        privateKey:
          type: string
          description: The RSA private key that you created for use in ServiceNow. This
            property is required when \`isOAuth\` is \`true\`.
        privateKeyPassword:
          type: string
          description: The password for the RSA private key. This property is required
            when \`isOAuth\` is \`true\` and you set a password on your private key.
        username:
          type: string
          description: The username for HTTP basic authentication. This property is
            required when \`isOAuth\` is \`false\`.
    create_connector_request_servicenow:
      title: Create ServiceNow ITSM connector request
      description: >
        The ServiceNow ITSM connector uses the import set API to create
        ServiceNow incidents. You can use the connector for rule actions and
        cases.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow
          example: .servicenow
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    config_properties_servicenow_itom:
      title: Connector request properties for a ServiceNow ITSM connector
      required:
        - apiUrl
      description: Defines properties for connectors when type is \`.servicenow\`.
      type: object
      properties:
        apiUrl:
          type: string
          description: The ServiceNow instance URL.
        clientId:
          description: >
            The client ID assigned to your OAuth application. This property is
            required when \`isOAuth\` is \`true\`.
          type: string
        isOAuth:
          description: >
            The type of authentication to use. The default value is false, which
            means basic authentication is used instead of open authorization
            (OAuth).
          default: false
          type: boolean
        jwtKeyId:
          description: >
            The key identifier assigned to the JWT verifier map of your OAuth
            application. This property is required when \`isOAuth\` is \`true\`.
          type: string
        userIdentifierValue:
          description: >
            The identifier to use for OAuth authentication. This identifier
            should be the user field you selected when you created an OAuth JWT
            API endpoint for external clients in your ServiceNow instance. For
            example, if the selected user field is \`Email\`, the user identifier
            should be the user's email address. This property is required when
            \`isOAuth\` is \`true\`.
          type: string
    create_connector_request_servicenow_itom:
      title: Create ServiceNow ITOM connector request
      description: >
        The ServiceNow ITOM connector uses the event API to create ServiceNow
        events. You can use the connector for rule actions.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow_itom\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-itom
          example: .servicenow-itom
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    create_connector_request_servicenow_sir:
      title: Create ServiceNow SecOps connector request
      description: >
        The ServiceNow SecOps connector uses the import set API to create
        ServiceNow security incidents. You can use the connector for rule
        actions and cases.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-sir
          example: .servicenow-sir
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    secrets_properties_slack_api:
      title: Connector secrets properties for a Web API Slack connector
      description: Defines secrets for connectors when type is \`.slack\`.
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: Slack bot user OAuth token.
    create_connector_request_slack_api:
      title: Create Slack connector request
      description: The Slack connector uses Slack Incoming Webhooks.
      type: object
      required:
        - connector_type_id
        - name
        - secrets
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack_api
          example: .slack_api
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_slack_api\\"
    secrets_properties_slack_webhook:
      title: Connector secrets properties for a Webhook Slack connector
      description: Defines secrets for connectors when type is \`.slack\`.
      required:
        - webhookUrl
      type: object
      properties:
        webhookUrl:
          type: string
          description: Slack webhook url.
    create_connector_request_slack_webhook:
      title: Create Slack connector request
      description: The Slack connector uses Slack Incoming Webhooks.
      type: object
      required:
        - connector_type_id
        - name
        - secrets
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack
          example: .slack
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_slack_webhook\\"
    config_properties_swimlane:
      title: Connector request properties for a Swimlane connector
      required:
        - apiUrl
        - appId
        - connectorType
      description: Defines properties for connectors when type is \`.swimlane\`.
      type: object
      properties:
        apiUrl:
          description: The Swimlane instance URL.
          type: string
        appId:
          description: The Swimlane application ID.
          type: string
        connectorType:
          description: The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.
          type: string
          enum:
            - all
            - alerts
            - cases
        mappings:
          title: Connector mappings properties for a Swimlane connector
          description: The field mapping.
          type: object
          properties:
            alertIdConfig:
              title: Alert identifier mapping
              description: Mapping for the alert ID.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            caseIdConfig:
              title: Case identifier mapping
              description: Mapping for the case ID.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            caseNameConfig:
              title: Case name mapping
              description: Mapping for the case name.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            commentsConfig:
              title: Case comment mapping
              description: Mapping for the case comments.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            descriptionConfig:
              title: Case description mapping
              description: Mapping for the case description.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            ruleNameConfig:
              title: Rule name mapping
              description: Mapping for the name of the alert's rule.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            severityConfig:
              title: Severity mapping
              description: Mapping for the severity.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
    secrets_properties_swimlane:
      title: Connector secrets properties for a Swimlane connector
      description: Defines secrets for connectors when type is \`.swimlane\`.
      type: object
      properties:
        apiToken:
          description: Swimlane API authentication token.
          type: string
    create_connector_request_swimlane:
      title: Create Swimlane connector request
      description: The Swimlane connector uses the Swimlane REST API to create
        Swimlane records.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_swimlane\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .swimlane
          example: .swimlane
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_swimlane\\"
    secrets_properties_teams:
      title: Connector secrets properties for a Microsoft Teams connector
      description: Defines secrets for connectors when type is \`.teams\`.
      type: object
      additionalProperties: true
    create_connector_request_teams:
      title: Create Microsoft Teams connector request
      description: The Microsoft Teams connector uses Incoming Webhooks.
      type: object
      required:
        - connector_type_id
        - name
        - secrets
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .teams
          example: .teams
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_teams\\"
    config_properties_tines:
      title: Connector request properties for a Tines connector
      description: Defines properties for connectors when type is \`.tines\`.
      type: object
      additionalProperties: true
    secrets_properties_tines:
      title: Connector secrets properties for a Tines connector
      description: Defines secrets for connectors when type is \`.tines\`.
      type: object
      additionalProperties: true
    create_connector_request_tines:
      title: Create Tines connector request
      description: >
        The Tines connector uses Tines Webhook actions to send events via POST
        request.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_tines\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .tines
          example: .tines
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_tines\\"
    config_properties_webhook:
      title: Connector request properties for a Webhook connector
      description: Defines properties for connectors when type is \`.webhook\`.
      type: object
      additionalProperties: true
    secrets_properties_webhook:
      title: Connector secrets properties for a Webhook connector
      description: Defines secrets for connectors when type is \`.webhook\`.
      type: object
      additionalProperties: true
    create_connector_request_webhook:
      title: Create Webhook connector request
      description: >
        The Webhook connector uses axios to send a POST or PUT request to a web
        service.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_webhook\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .webhook
          example: .webhook
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_webhook\\"
    config_properties_xmatters:
      title: Connector request properties for a xMatters connector
      description: Defines properties for connectors when type is \`.xmatters\`.
      type: object
      additionalProperties: true
    secrets_properties_xmatters:
      title: Connector secrets properties for an xMatters connector
      description: Defines secrets for connectors when type is \`.xmatters\`.
      type: object
      additionalProperties: true
    create_connector_request_xmatters:
      title: Create xMatters connector request
      description: >
        The xMatters connector uses the xMatters Workflow for Elastic to send
        actionable alerts to on-call xMatters resources.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_xmatters\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .xmatters
          example: .xmatters
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_xmatters\\"
    is_deprecated:
      type: boolean
      description: Indicates whether the connector type is deprecated.
      example: false
    is_missing_secrets:
      type: boolean
      description: Indicates whether secrets are missing for the connector. Secrets
        configuration properties vary depending on the connector type.
      example: false
    is_preconfigured:
      type: boolean
      description: Indicates whether it is a preconfigured connector. If true, the
        \`config\` and \`is_missing_secrets\` properties are omitted from the
        response.
      example: false
    connector_response_properties_cases_webhook:
      title: Connector request properties for a Webhook - Case Management connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_cases_webhook\\"
        connector_type_id:
          description: The type of connector.
          type: string
          enum:
            - .cases-webhook
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_email:
      title: Connector response properties for an email connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_email\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .email
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_index:
      title: Connector response properties for an index connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_index\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .index
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_jira:
      title: Connector response properties for a Jira connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_jira\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .jira
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_opsgenie:
      title: Connector response properties for an Opsgenie connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_opsgenie\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .opsgenie
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_pagerduty:
      title: Connector response properties for a PagerDuty connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_pagerduty\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .pagerduty
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_resilient:
      title: Connector response properties for a IBM Resilient connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_resilient\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .resilient
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_serverlog:
      title: Connector response properties for a server log connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          type: object
          nullable: true
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .server-log
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_servicenow:
      title: Connector response properties for a ServiceNow ITSM connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_servicenow_itom:
      title: Connector response properties for a ServiceNow ITOM connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow_itom\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-itom
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_servicenow_sir:
      title: Connector response properties for a ServiceNow SecOps connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-sir
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_slack_api:
      title: Connector response properties for a Slack connector
      type: object
      required:
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack_api
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_slack_webhook:
      title: Connector response properties for a Slack connector
      type: object
      required:
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_swimlane:
      title: Connector response properties for a Swimlane connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_swimlane\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .swimlane
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_teams:
      title: Connector response properties for a Microsoft Teams connector
      type: object
      required:
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .teams
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_tines:
      title: Connector response properties for a Tines connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_tines\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .tines
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_webhook:
      title: Connector response properties for a Webhook connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_webhook\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .webhook
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_xmatters:
      title: Connector response properties for an xMatters connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_xmatters\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .xmatters
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties:
      title: Connector response properties
      description: The properties vary depending on the connector type.
      oneOf:
        - $ref: \\"#/components/schemas/connector_response_properties_cases_webhook\\"
        - $ref: \\"#/components/schemas/connector_response_properties_email\\"
        - $ref: \\"#/components/schemas/connector_response_properties_index\\"
        - $ref: \\"#/components/schemas/connector_response_properties_jira\\"
        - $ref: \\"#/components/schemas/connector_response_properties_opsgenie\\"
        - $ref: \\"#/components/schemas/connector_response_properties_pagerduty\\"
        - $ref: \\"#/components/schemas/connector_response_properties_resilient\\"
        - $ref: \\"#/components/schemas/connector_response_properties_serverlog\\"
        - $ref: \\"#/components/schemas/connector_response_properties_servicenow\\"
        - $ref: \\"#/components/schemas/connector_response_properties_servicenow_itom\\"
        - $ref: \\"#/components/schemas/connector_response_properties_servicenow_sir\\"
        - $ref: \\"#/components/schemas/connector_response_properties_slack_api\\"
        - $ref: \\"#/components/schemas/connector_response_properties_slack_webhook\\"
        - $ref: \\"#/components/schemas/connector_response_properties_swimlane\\"
        - $ref: \\"#/components/schemas/connector_response_properties_teams\\"
        - $ref: \\"#/components/schemas/connector_response_properties_tines\\"
        - $ref: \\"#/components/schemas/connector_response_properties_webhook\\"
        - $ref: \\"#/components/schemas/connector_response_properties_xmatters\\"
      discriminator:
        propertyName: connector_type_id
    update_connector_request_cases_webhook:
      title: Update Webhook - Case Managment connector request
      type: object
      required:
        - config
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_cases_webhook\\"
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_cases_webhook\\"
    update_connector_request_index:
      title: Update index connector request
      type: object
      required:
        - config
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_index\\"
        name:
          type: string
          description: The display name for the connector.
    update_connector_request_jira:
      title: Update Jira connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_jira\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_jira\\"
    update_connector_request_opsgenie:
      title: Update Opsgenie connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_opsgenie\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_opsgenie\\"
    update_connector_request_resilient:
      title: Update IBM Resilient connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_resilient\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_resilient\\"
    update_connector_request_serverlog:
      title: Update server log connector request
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The display name for the connector.
    update_connector_request_servicenow:
      title: Update ServiceNow ITSM connector or ServiceNow SecOps request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    update_connector_request_servicenow_itom:
      title: Create ServiceNow ITOM connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow_itom\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    update_connector_request_slack_api:
      title: Update Slack connector request
      type: object
      required:
        - name
        - secrets
      properties:
        name:
          type: string
          description: The display name for the connector.
        secrets:
          type: object
          description: The secrets object containing the necessary fields for
            authentication.
          $ref: \\"#/components/schemas/secrets_properties_slack_api\\"
    update_connector_request_slack_webhook:
      title: Update Slack connector request
      type: object
      required:
        - name
        - secrets
      properties:
        name:
          type: string
          description: The display name for the connector.
        secrets:
          type: object
          description: The secrets object containing the necessary fields for
            authentication.
          $ref: \\"#/components/schemas/secrets_properties_slack_webhook\\"
    update_connector_request_swimlane:
      title: Update Swimlane connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_swimlane\\"
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_swimlane\\"
    connector_types:
      title: Connector types
      type: string
      description: The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`,
        \`.opsgenie\`, or \`.server-log\`.
      enum:
        - .cases-webhook
        - .email
        - .index
        - .jira
        - .opsgenie
        - .pagerduty
        - .resilient
        - .servicenow
        - .servicenow-itom
        - .servicenow-sir
        - .server-log
        - .slack
        - .swimlane
        - .teams
        - .tines
        - .webhook
        - .xmatters
      example: .server-log
    features:
      type: string
      description: >
        The feature that uses the connector. Valid values are \`alerting\`,
        \`cases\`, \`uptime\`, and \`siem\`.
      enum:
        - alerting
        - cases
        - uptime
        - siem
    run_connector_params_documents:
      title: Index connector parameters
      description: Test an action that indexes a document into Elasticsearch.
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          description: The documents in JSON format for index connectors.
          items:
            type: object
            additionalProperties: true
    run_connector_params_level_message:
      title: Server log connector parameters
      description: Test an action that writes an entry to the Kibana server log.
      type: object
      required:
        - message
      properties:
        level:
          type: string
          description: The log level of the message for server log connectors.
          enum:
            - debug
            - error
            - fatal
            - info
            - trace
            - warn
          default: info
        message:
          type: string
          description: The message for server log connectors.
    run_connector_subaction_addevent:
      title: The addEvent subaction
      type: object
      required:
        - subAction
      description: The \`addEvent\` subaction for ServiceNow ITOM connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - addEvent
        subActionParams:
          type: object
          description: The set of configuration properties for the action.
          properties:
            additional_info:
              type: string
              description: Additional information about the event.
            description:
              type: string
              description: The details about the event.
            event_class:
              type: string
              description: A specific instance of the source.
            message_key:
              type: string
              description: All actions sharing this key are associated with the same
                ServiceNow alert. The default value is \`<rule ID>:<alert
                instance ID>\`.
            metric_name:
              type: string
              description: The name of the metric.
            node:
              type: string
              description: The host that the event was triggered for.
            resource:
              type: string
              description: The name of the resource.
            severity:
              type: string
              description: The severity of the event.
            source:
              type: string
              description: The name of the event source type.
            time_of_event:
              type: string
              description: The time of the event.
            type:
              type: string
              description: The type of event.
    run_connector_subaction_closealert:
      title: The closeAlert subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`closeAlert\` subaction for Opsgenie connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - closeAlert
        subActionParams:
          type: object
          required:
            - alias
          properties:
            alias:
              type: string
              description: The unique identifier used for alert deduplication in Opsgenie. The
                alias must match the value used when creating the alert.
            note:
              type: string
              description: Additional information for the alert.
            source:
              type: string
              description: The display name for the source of the alert.
            user:
              type: string
              description: The display name for the owner.
    run_connector_subaction_createalert:
      title: The createAlert subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`createAlert\` subaction for Opsgenie connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - createAlert
        subActionParams:
          type: object
          required:
            - message
          properties:
            actions:
              type: array
              description: The custom actions available to the alert.
              items:
                type: string
            alias:
              type: string
              description: The unique identifier used for alert deduplication in Opsgenie.
            description:
              type: string
              description: A description that provides detailed information about the alert.
            details:
              type: object
              description: The custom properties of the alert.
              additionalProperties: true
              example:
                key1: value1
                key2: value2
            entity:
              type: string
              description: The domain of the alert. For example, the application or server
                name.
            message:
              type: string
              description: The alert message.
            note:
              type: string
              description: Additional information for the alert.
            priority:
              type: string
              description: The priority level for the alert.
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
            responders:
              type: array
              description: >
                The entities to receive notifications about the alert. If \`type\`
                is \`user\`, either \`id\` or \`username\` is required. If \`type\` is
                \`team\`, either \`id\` or \`name\` is required.
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier for the entity.
                  name:
                    type: string
                    description: The name of the entity.
                  type:
                    type: string
                    description: The type of responders, in this case \`escalation\`.
                    enum:
                      - escalation
                      - schedule
                      - team
                      - user
                  username:
                    type: string
                    description: A valid email address for the user.
            source:
              type: string
              description: The display name for the source of the alert.
            tags:
              type: array
              description: The tags for the alert.
              items:
                type: string
            user:
              type: string
              description: The display name for the owner.
            visibleTo:
              type: array
              description: The teams and users that the alert will be visible to without
                sending a notification. Only one of \`id\`, \`name\`, or \`username\`
                is required.
              items:
                type: object
                required:
                  - type
                properties:
                  id:
                    type: string
                    description: The identifier for the entity.
                  name:
                    type: string
                    description: The name of the entity.
                  type:
                    type: string
                    description: Valid values are \`team\` and \`user\`.
                    enum:
                      - team
                      - user
                  username:
                    type: string
                    description: The user name. This property is required only when the \`type\` is
                      \`user\`.
    run_connector_subaction_fieldsbyissuetype:
      title: The fieldsByIssueType subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`fieldsByIssueType\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - fieldsByIssueType
        subActionParams:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: The Jira issue type identifier.
              example: 10024
    run_connector_subaction_getchoices:
      title: The getChoices subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM,
        and ServiceNow SecOps connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - getChoices
        subActionParams:
          type: object
          description: The set of configuration properties for the action.
          required:
            - fields
          properties:
            fields:
              type: array
              description: An array of fields.
              items:
                type: string
    run_connector_subaction_getfields:
      title: The getFields subaction
      type: object
      required:
        - subAction
      description: The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow
        SecOps connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - getFields
    run_connector_subaction_getincident:
      title: The getIncident subaction
      type: object
      description: The \`getIncident\` subaction for Jira, ServiceNow ITSM, and
        ServiceNow SecOps connectors.
      required:
        - subAction
        - subActionParams
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - getIncident
        subActionParams:
          type: object
          required:
            - externalId
          properties:
            externalId:
              type: string
              description: The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.
              example: 71778
    run_connector_subaction_issue:
      title: The issue subaction
      type: object
      required:
        - subAction
      description: The \`issue\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - issue
        subActionParams:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: The Jira issue identifier.
              example: 71778
    run_connector_subaction_issues:
      title: The issues subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`issues\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - issues
        subActionParams:
          type: object
          required:
            - title
          properties:
            title:
              type: string
              description: The title of the Jira issue.
    run_connector_subaction_issuetypes:
      title: The issueTypes subaction
      type: object
      required:
        - subAction
      description: The \`issueTypes\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - issueTypes
    run_connector_subaction_pushtoservice:
      title: The pushToService subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow
        SecOps, and Swimlane connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - pushToService
        subActionParams:
          type: object
          description: The set of configuration properties for the action.
          properties:
            comments:
              type: array
              description: Additional information that is sent to Jira, ServiceNow ITSM,
                ServiceNow SecOps, or Swimlane.
              items:
                type: object
                properties:
                  comment:
                    type: string
                    description: A comment related to the incident. For example, describe how to
                      troubleshoot the issue.
                  commentId:
                    type: integer
                    description: A unique identifier for the comment.
            incident:
              type: object
              description: Information necessary to create or update a Jira, ServiceNow ITSM,
                ServiveNow SecOps, or Swimlane incident.
              properties:
                alertId:
                  type: string
                  description: The alert identifier for Swimlane connectors.
                caseId:
                  type: string
                  description: The case identifier for the incident for Swimlane connectors.
                caseName:
                  type: string
                  description: The case name for the incident for Swimlane connectors.
                category:
                  type: string
                  description: The category of the incident for ServiceNow ITSM and ServiceNow
                    SecOps connectors.
                correlation_display:
                  type: string
                  description: A descriptive label of the alert for correlation purposes for
                    ServiceNow ITSM and ServiceNow SecOps connectors.
                correlation_id:
                  type: string
                  description: >
                    The correlation identifier for the security incident for
                    ServiceNow ITSM and ServiveNow SecOps connectors. Connectors
                    using the same correlation ID are associated with the same
                    ServiceNow incident. This value determines whether a new
                    ServiceNow incident is created or an existing one is
                    updated. Modifying this value is optional; if not modified,
                    the rule ID and alert ID are combined as \`{{ruleID}}:{{alert
                    ID}}\` to form the correlation ID value in ServiceNow. The
                    maximum character length for this value is 100 characters.
                    NOTE: Using the default configuration of \`{{ruleID}}:{{alert
                    ID}}\` ensures that ServiceNow creates a separate incident
                    record for every generated alert that uses a unique alert
                    ID. If the rule generates multiple alerts that use the same
                    alert IDs, ServiceNow creates and continually updates a
                    single incident record for the alert.
                description:
                  type: string
                  description: The description of the incident for Jira, ServiceNow ITSM,
                    ServiceNow SecOps, and Swimlane connectors.
                dest_ip:
                  description: >
                    A list of destination IP addresses related to the security
                    incident for ServiceNow SecOps connectors. The IPs are added
                    as observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                externalId:
                  type: string
                  description: >
                    The Jira, ServiceNow ITSM, or ServiceNow SecOps issue
                    identifier. If present, the incident is updated. Otherwise,
                    a new incident is created.
                impact:
                  type: string
                  description: The impact of the incident for ServiceNow ITSM connectors.
                issueType:
                  type: integer
                  description: The type of incident for Jira connectors. For example, 10006. To
                    obtain the list of valid values, set \`subAction\` to
                    \`issueTypes\`.
                labels:
                  type: array
                  items:
                    type: string
                  description: >
                    The labels for the incident for Jira connectors. NOTE:
                    Labels cannot contain spaces.
                malware_hash:
                  description: A list of malware hashes related to the security incident for
                    ServiceNow SecOps connectors. The hashes are added as
                    observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                malware_url:
                  type: string
                  description: A list of malware URLs related to the security incident for
                    ServiceNow SecOps connectors. The URLs are added as
                    observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                parent:
                  type: string
                  description: The ID or key of the parent issue for Jira connectors. Applies only
                    to \`Sub-task\` types of issues.
                priority:
                  type: string
                  description: The priority of the incident in Jira and ServiceNow SecOps
                    connectors.
                ruleName:
                  type: string
                  description: The rule name for Swimlane connectors.
                severity:
                  type: string
                  description: The severity of the incident for ServiceNow ITSM and Swimlane
                    connectors.
                short_description:
                  type: string
                  description: >
                    A short description of the incident for ServiceNow ITSM and
                    ServiceNow SecOps connectors. It is used for searching the
                    contents of the knowledge base.
                source_ip:
                  description: A list of source IP addresses related to the security incident for
                    ServiceNow SecOps connectors. The IPs are added as
                    observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                subcategory:
                  type: string
                  description: The subcategory of the incident for ServiceNow ITSM and ServiceNow
                    SecOps connectors.
                summary:
                  type: string
                  description: A summary of the incident for Jira connectors.
                title:
                  type: string
                  description: >
                    A title for the incident for Jira connectors. It is used for
                    searching the contents of the knowledge base.
                urgency:
                  type: string
                  description: The urgency of the incident for ServiceNow ITSM connectors.
    action_response_properties:
      title: Action response properties
      description: The properties vary depending on the action type.
      type: object
      properties:
        actionTypeId:
          type: string
        config:
          type: object
        id:
          type: string
        isDeprecated:
          type: boolean
          description: Indicates whether the action type is deprecated.
        isMissingSecrets:
          type: boolean
          description: Indicates whether secrets are missing for the action.
        isPreconfigured:
          type: boolean
          description: Indicates whether it is a preconfigured action.
        name:
          type: string
    config_properties_index:
      title: Connector request properties for an index connector
      required:
        - index
      description: Defines properties for connectors when type is \`.index\`.
      type: object
      properties:
        executionTimeField:
          description: Specifies a field that will contain the time the alert condition
            was detected.
          default: null
          type: string
          nullable: true
        index:
          description: The Elasticsearch index to be written to.
          type: string
        refresh:
          description: >
            The refresh policy for the write request, which affects when changes
            are made visible to search. Refer to the refresh setting for
            Elasticsearch document APIs.
          default: false
          type: boolean
  examples:
    create_index_connector_request:
      summary: Create an index connector.
      value:
        name: my-connector
        connector_type_id: .index
        config:
          index: test-index
    create_index_connector_response:
      summary: A new index connector.
      value:
        id: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
        connector_type_id: .index
        name: my-connector
        config:
          index: test-index
          refresh: false
          executionTimeField: null
        is_preconfigured: false
        is_deprecated: false
        is_missing_secrets: false
    get_connector_response:
      summary: A list of connector types
      value:
        id: df770e30-8b8b-11ed-a780-3b746c987a81
        name: my_server_log_connector
        config: {}
        connector_type_id: .server-log
        is_preconfigured: false
        is_deprecated: false
        is_missing_secrets: false
    update_index_connector_request:
      summary: Update an index connector.
      value:
        name: updated-connector
        config:
          index: updated-index
    get_connectors_response:
      summary: A list of connectors
      value:
        - id: preconfigured-email-connector
          name: my-preconfigured-email-notification
          connector_type_id: .email
          is_preconfigured: true
          is_deprecated: false
          referenced_by_count: 0
        - id: e07d0c80-8b8b-11ed-a780-3b746c987a81
          name: my-index-connector
          config:
            index: test-index
            refresh: false
            executionTimeField: null
          connector_type_id: .index
          is_preconfigured: false
          is_deprecated: false
          referenced_by_count: 2
          is_missing_secrets: false
    get_connector_types_response:
      summary: A list of connector types
      value:
        - id: .swimlane
          name: Swimlane
          enabled: true
          enabled_in_config: true
          enabled_in_license: true
          minimum_license_required: gold
          supported_feature_ids:
            - alerting
            - cases
            - siem
        - id: .index
          name: Index
          enabled: true
          enabled_in_config: true
          enabled_in_license: true
          minimum_license_required: basic
          supported_feature_ids:
            - alerting
            - uptime
            - siem
        - id: .server-log
          name: Server log
          enabled: true
          enabled_in_config: true
          enabled_in_license: true
          minimum_license_required: basic
          supported_feature_ids:
            - alerting
            - uptime
    run_index_connector_request:
      summary: Run an index connector.
      value:
        params:
          documents:
            - id: my_doc_id
              name: my_doc_name
              message: hello, world
    run_jira_connector_request:
      summary: Run a Jira connector to retrieve the list of issue types.
      value:
        params:
          subAction: issueTypes
    run_server_log_connector_request:
      summary: Run a server log connector.
      value:
        params:
          level: warn
          message: Test warning message.
    run_servicenow_itom_connector_request:
      summary: Run a ServiceNow ITOM connector to retrieve the list of choices.
      value:
        params:
          subAction: getChoices
          subActionParams:
            fields:
              - severity
              - urgency
    run_swimlane_connector_request:
      summary: Run a Swimlane connector to create an incident.
      value:
        params:
          subAction: pushToService
          subActionParams:
            comments:
              - commentId: 1
                comment: A comment about the incident.
            incident:
              caseId: \\"1000\\"
              caseName: Case name
              description: Description of the incident.
    run_index_connector_response:
      summary: Response from running an index connector.
      value:
        connector_id: fd38c600-96a5-11ed-bb79-353b74189cba
        data:
          errors: false
          items:
            - create:
                _id: 4JtvwYUBrcyxt2NnfW3y
                _index: my-index
                _primary_term: 1
                _seq_no: 0
                _shards:
                  failed: 0
                  successful: 1
                  total: 2
                _version: 1
                result: created
                status: 201
          took: 135
        status: ok
    run_jira_connector_response:
      summary: Response from retrieving the list of issue types for a Jira connector.
      value:
        connector_id: b3aad810-edbe-11ec-82d1-11348ecbf4a6
        data:
          - id: 10024
            name: Improvement
          - id: 10006
            name: Task
          - id: 10007
            name: Sub-task
          - id: 10025
            name: New Feature
          - id: 10023
            name: Bug
          - id: 10000
            name: Epic
        status: ok
    run_server_log_connector_response:
      summary: Response from running a server log connector.
      value:
        connector_id: 7fc7b9a0-ecc9-11ec-8736-e7d63118c907
        status: ok
    run_servicenow_itom_connector_response:
      summary: Response from retrieving the list of choices for a ServiceNow ITOM
        connector.
      value:
        connector_id: 9d9be270-2fd2-11ed-b0e0-87533c532698
        data:
          - dependent_value: \\"\\"
            element: severity
            label: Critical
            value: 1
          - dependent_value: \\"\\"
            element: severity
            label: Major
            value: 2
          - dependent_value: \\"\\"
            element: severity
            label: Minor
            value: 3
          - dependent_value: \\"\\"
            element: severity
            label: Warning
            value: 4
          - dependent_value: \\"\\"
            element: severity
            label: OK
            value: 5
          - dependent_value: \\"\\"
            element: severity
            label: Clear
            value: 0
          - dependent_value: \\"\\"
            element: urgency
            label: 1 - High
            value: 1
          - dependent_value: \\"\\"
            element: urgency
            label: 2 - Medium
            value: 2
          - dependent_value: \\"\\"
            element: urgency
            label: 3 - Low
            value: 3
        status: ok
    run_swimlane_connector_response:
      summary: Response from creating a Swimlane incident.
      value:
        connector_id: a4746470-2f94-11ed-b0e0-87533c532698
        data:
          id: aKPmBHWzmdRQtx6Mx
          title: TEST-457
          url: https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx
          pushedDate: 2022-09-08T16:52:27.866Z
          comments:
            - commentId: 1
              pushedDate: 2022-09-08T16:52:27.865Z
        status: ok
  responses:
    \\"401\\":
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            type: object
            title: Unauthorized response
            properties:
              error:
                type: string
                example: Unauthorized
                enum:
                  - Unauthorized
              message:
                type: string
              statusCode:
                type: integer
                example: 401
                enum:
                  - 401
    \\"404\\":
      description: Object is not found.
      content:
        application/json:
          schema:
            type: object
            title: Not found response
            properties:
              error:
                type: string
                example: Not Found
                enum:
                  - Not Found
              message:
                type: string
                example: Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found
              statusCode:
                type: integer
                example: 404
                enum:
                  - 404
    200_actions:
      description: Indicates a successful call.
      content:
        application/json:
          schema:
            $ref: \\"#/components/schemas/action_response_properties\\"
security:
  - basicAuth: []
  - apiKeyAuth: []
",
  },
]
`;

exports[`getYamlSpecs 1`] = `
[
  {
    "doc": {
      "components": {
        "examples": {
          "create_rule_request": {
            "summary": "Create an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert '{{alertName}}' is active for group '{{context.group}}':

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "consumer": "alerts",
              "name": "my rule",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "tags": [
                "cpu",
              ],
            },
          },
          "create_rule_response": {
            "summary": "The create rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group} :

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-06-08T17:20:31.632Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_execution_date": "2022-06-08T17:20:31.632Z",
                "status": "pending",
              },
              "id": "41893910-6bca-11eb-9e0d-85d233e3ee35",
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my rule",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 0,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "425b0800-6bca-11eb-9e0d-85d233e3ee35",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-06-08T17:20:31.632Z",
              "updated_by": "elastic",
            },
          },
          "find_rules_response": {
            "summary": "Retrieve information about a rule.",
            "value": {
              "data": [
                {
                  "actions": [
                    {
                      "group": "threshold met",
                      "id": "9dca3e00-74f5-11ed-9801-35303b735aef",
                      "params": {
                        "connector_type_id": ".server-log",
                        "level": "info",
                        "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                      },
                      "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                    },
                  ],
                  "api_key_created_by_user": false,
                  "api_key_owner": "elastic",
                  "consumer": "alerts",
                  "created_at": "2022-12-05T23:40:33.132Z",
                  "created_by": "elastic",
                  "enabled": true,
                  "execution_status": {
                    "last_duration": 48,
                    "last_execution_date": "2022-12-06T01:44:23.983Z",
                    "status": "ok",
                  },
                  "id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "last_run": {
                    "alerts_count": {
                      "active": 0,
                      "ignored": 0,
                      "new": 0,
                      "recovered": 0,
                    },
                    "outcome": "succeeded",
                    "outcome_msg": null,
                    "warning": null,
                  },
                  "mute_all": false,
                  "muted_alert_ids": [],
                  "name": "my alert",
                  "next_run": "2022-12-06T01:45:23.912Z",
                  "notify_when": "onActionGroupChange",
                  "params": {
                    "aggField": "sheet.version",
                    "aggType": "avg",
                    "groupBy": "top",
                    "index": [
                      "test-index",
                    ],
                    "termField": "name.keyword",
                    "termSize": 6,
                    "threshold": [
                      1000,
                    ],
                    "thresholdComparator": ">",
                    "timeField": "@timestamp",
                    "timeWindowSize": 5,
                    "timeWindowUnit": "m",
                  },
                  "revision": 1,
                  "rule_type_id": ".index-threshold",
                  "schedule": {
                    "interval": "1m",
                  },
                  "scheduled_task_id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "tags": [
                    "cpu",
                  ],
                  "throttle": null,
                  "updated_at": "2022-12-05T23:40:33.132Z",
                  "updated_by": "elastic",
                },
              ],
              "page": 1,
              "per_page": 10,
              "total": 1,
            },
          },
          "get_health_response": {
            "summary": "Retrieve information about the health of the alerting framework.",
            "value": {
              "alerting_framework_health": {
                "decryption_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "execution_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "read_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
              },
              "has_permanent_encryption_key": true,
              "is_sufficiently_secure": true,
            },
          },
          "get_rule_response": {
            "summary": "The get rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "group": "threshold met",
                  "id": "1007a0c0-7a6e-11ed-89d5-abec321c0def",
                  "params": {
                    "connector_type_id": ".server-log",
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-12-13T22:33:41.163Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 83,
                "last_execution_date": "2022-12-13T22:33:44.388Z",
                "status": "ok",
              },
              "id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my alert",
              "next_run": "2022-12-13T22:34:44.314Z",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  "test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-12-13T22:33:41.163Z",
              "updated_by": "elastic",
            },
          },
          "get_rule_types_response": {
            "summary": "Retrieve rule types associated with Kibana machine learning features",
            "value": [
              {
                "action_groups": [
                  {
                    "id": "anomaly_score_match",
                    "name": "Anomaly score matched the condition",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "The bucket timestamp of the anomaly",
                      "name": "timestamp",
                    },
                    {
                      "description": "The bucket time of the anomaly in ISO8601 format",
                      "name": "timestampIso8601",
                    },
                    {
                      "description": "List of job IDs that triggered the alert",
                      "name": "jobIds",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                    {
                      "description": "Indicate if top hits contain interim results",
                      "name": "isInterim",
                    },
                    {
                      "description": "Anomaly score at the time of the notification action",
                      "name": "score",
                    },
                    {
                      "description": "Top records",
                      "name": "topRecords",
                    },
                    {
                      "description": "Top influencers",
                      "name": "topInfluencers",
                    },
                    {
                      "description": "URL to open in the Anomaly Explorer",
                      "name": "anomalyExplorerUrl",
                      "useWithTripleBracesInTemplates": true,
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_score_match",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_alert",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection alert",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
              {
                "action_groups": [
                  {
                    "id": "anomaly_detection_realtime_issue",
                    "name": "Issue detected",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "Results of the rule execution",
                      "name": "results",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_detection_realtime_issue",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_jobs_health",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection jobs health",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
            ],
          },
          "update_rule_request": {
            "summary": "Update an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "name": "new name",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "schedule": {
                "interval": "1m",
              },
              "tags": [],
              "throttle": null,
            },
          },
          "update_rule_response": {
            "summary": "The update rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "connector_type_id": ".server-log",
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2023-01-31T23:03:33.127Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 52,
                "last_execution_date": "2023-01-31T23:48:42.499Z",
                "status": "ok",
              },
              "id": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "new name",
              "next_run": "2023-01-31T23:49:42.432Z",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".updated-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "10m",
              },
              "scheduled_task_id": "4c5eda00-e74f-11ec-b72f-5b18752ff9ea",
              "tags": [],
              "throttle": null,
              "updated_at": "2023-01-31T23:55:27.314Z",
              "updated_by": "elastic",
            },
          },
        },
        "parameters": {
          "alert_id": {
            "description": "An identifier for the alert. The identifier is generated by the rule and might be any arbitrary string.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "rule_id": {
            "description": "An identifier for the rule.",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "schemas": {
          "401_response": {
            "properties": {
              "error": {
                "enum": [
                  "Unauthorized",
                ],
                "example": "Unauthorized",
                "type": "string",
              },
              "message": {
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  401,
                ],
                "example": 401,
                "type": "integer",
              },
            },
            "title": "Unsuccessful rule API response",
            "type": "object",
          },
          "404_response": {
            "properties": {
              "error": {
                "enum": [
                  "Not Found",
                ],
                "example": "Not Found",
                "type": "string",
              },
              "message": {
                "example": "Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found",
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  404,
                ],
                "example": 404,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "actions": {
            "default": [],
            "items": {
              "properties": {
                "connector_type_id": {
                  "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                  "example": ".server-log",
                  "readOnly": true,
                  "type": "string",
                },
                "frequency": {
                  "description": "The parameters that affect how often actions are generated. NOTE: You cannot specify these parameters when \`notify_when\` or \`throttle\` are defined at the rule level.
",
                  "properties": {
                    "notify_when": {
                      "$ref": "#/components/schemas/notify_when",
                    },
                    "summary": {
                      "description": "Indicates whether the action is a summary.",
                      "type": "boolean",
                    },
                    "throttle": {
                      "$ref": "#/components/schemas/throttle",
                    },
                  },
                  "required": [
                    "notify_when",
                    "summary",
                  ],
                  "type": "object",
                },
                "group": {
                  "description": "The group name for the actions. If you don't need to group actions, set to \`default\`.",
                  "example": "default",
                  "type": "string",
                },
                "id": {
                  "description": "The identifier for the connector saved object.",
                  "example": "9dca3e00-74f5-11ed-9801-35303b735aef",
                  "type": "string",
                },
                "params": {
                  "additionalProperties": true,
                  "description": "The parameters for the action, which are sent to the connector. The \`params\` are handled as Mustache templates and passed a default set of context.",
                  "type": "object",
                },
                "uuid": {
                  "description": "A universally unique identifier (UUID) for the action.",
                  "example": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "nullable": true,
            "required": [
              "group",
              "id",
              "params",
            ],
            "type": "array",
          },
          "alert_response_properties": {
            "properties": {
              "actions": {
                "items": {
                  "type": "object",
                },
                "type": "array",
              },
              "alertTypeId": {
                "example": ".index-threshold",
                "type": "string",
              },
              "apiKeyOwner": {
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "createdAt": {
                "description": "The date and time that the alert was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "createdBy": {
                "description": "The identifier for the user that created the alert.",
                "example": "elastic",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the alert is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "executionStatus": {
                "properties": {
                  "lastExecutionDate": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the alert.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "muteAll": {
                "example": false,
                "type": "boolean",
              },
              "mutedInstanceIds": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the alert.",
                "example": "my alert",
                "type": "string",
              },
              "notifyWhen": {
                "example": "onActionGroupChange",
                "type": "string",
              },
              "params": {
                "additionalProperties": true,
                "type": "object",
              },
              "schedule": {
                "properties": {
                  "interval": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "scheduledTaskId": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "throttle": {
                "nullable": true,
                "type": "string",
              },
              "updatedAt": {
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updatedBy": {
                "description": "The identifier for the user that updated this alert most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "title": "Legacy alert response properties",
            "type": "object",
          },
          "create_rule_request": {
            "description": "The create rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "consumer": {
                "description": "The name of the application or feature that owns the rule. For example: \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.
",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                "type": "boolean",
              },
              "name": {
                "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/params_property_index_threshold",
                  },
                ],
                "type": "object",
              },
              "rule_type_id": {
                "description": "The ID of the rule type that you want to call when the rule is scheduled to run. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "type": "string",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "consumer",
              "name",
              "params",
              "rule_type_id",
              "schedule",
            ],
            "title": "Create rule request",
            "type": "object",
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: \`onActionGroupChange\`: Actions run when the alert status changes; \`onActiveAlert\`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; \`onThrottleInterval\`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met.
",
            "enum": [
              "onActionGroupChange",
              "onActiveAlert",
              "onThrottleInterval",
            ],
            "example": "onActiveAlert",
            "type": "string",
          },
          "params_property_index_threshold": {
            "properties": {
              "aggField": {
                "type": "string",
              },
              "aggType": {
                "type": "string",
              },
              "groupBy": {
                "type": "string",
              },
              "index": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "termField": {
                "type": "string",
              },
              "termSize": {
                "type": "number",
              },
              "threshold": {
                "items": {
                  "type": "number",
                },
                "type": "array",
              },
              "thresholdComparator": {
                "type": "string",
              },
              "timeField": {
                "type": "string",
              },
              "timeWindowSize": {
                "type": "number",
              },
              "timeWindowUnit": {
                "type": "string",
              },
            },
          },
          "rule_response_properties": {
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "api_key_created_by_user": {
                "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                "example": false,
                "type": "boolean",
              },
              "api_key_owner": {
                "description": "The owner of the API key that is associated with the rule and used to run background tasks.
",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "consumer": {
                "description": "The application or feature that owns the rule. For example, \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.",
                "example": "alerts",
                "type": "string",
              },
              "created_at": {
                "description": "The date and time that the rule was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "created_by": {
                "description": "The identifier for the user that created the rule.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the rule is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "execution_status": {
                "properties": {
                  "last_duration": {
                    "example": 55,
                    "type": "integer",
                  },
                  "last_execution_date": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the rule.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "last_run": {
                "properties": {
                  "alerts_count": {
                    "properties": {
                      "active": {
                        "type": "integer",
                      },
                      "ignored": {
                        "type": "integer",
                      },
                      "new": {
                        "type": "integer",
                      },
                      "recovered": {
                        "type": "integer",
                      },
                    },
                    "type": "object",
                  },
                  "outcome": {
                    "example": "succeeded",
                    "type": "string",
                  },
                  "outcome_msg": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                  "warning": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "mute_all": {
                "example": false,
                "type": "boolean",
              },
              "muted_alert_ids": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "next_run": {
                "example": "2022-12-06T00:14:43.818Z",
                "format": "date-time",
                "nullable": true,
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "revision": {
                "description": "The rule revision number.",
                "type": "integer",
              },
              "rule_type_id": {
                "description": "The identifier for the type of rule. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "example": "monitoring_alert_cluster_health",
                "type": "string",
              },
              "running": {
                "description": "Indicates whether the rule is running.",
                "type": "boolean",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "scheduled_task_id": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
              "updated_at": {
                "description": "The date and time that the rule was updated most recently.",
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updated_by": {
                "description": "The identifier for the user that updated this rule most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "required": [
              "actions",
              "api_key_owner",
              "consumer",
              "created_at",
              "created_by",
              "enabled",
              "execution_status",
              "id",
              "mute_all",
              "muted_alert_ids",
              "name",
              "params",
              "rule_type_id",
              "schedule",
              "tags",
              "throttle",
              "updated_at",
              "updated_by",
            ],
            "title": "Rule response properties",
            "type": "object",
          },
          "schedule": {
            "description": "The check interval, which specifies how frequently the rule conditions are checked. The interval is specified in seconds, minutes, hours, or days.",
            "properties": {
              "interval": {
                "example": "1m",
                "type": "string",
              },
            },
            "type": "object",
          },
          "tags": {
            "default": [],
            "description": "The tags for the rule.",
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "throttle": {
            "default": null,
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is applicable only if \`notify_when\` is set to \`onThrottleInterval\`. It is specified in seconds, minutes, hours, or days.",
            "example": "10m",
            "nullable": true,
            "type": "string",
          },
          "update_rule_request": {
            "description": "The update rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "name",
              "params",
              "schedule",
            ],
            "title": "Update rule request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Alerting Team",
        },
        "description": "OpenAPI schema for alerting endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Alerting",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/alerting/_health": {
          "get": {
            "description": "You must have \`read\` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
",
            "operationId": "getAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getAlertingHealthResponse": {
                        "$ref": "#/components/examples/get_health_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "alerting_framework_health": {
                          "description": "Three substates identify the health of the alerting framework: \`decryption_health\`, \`execution_health\`, and \`read_health\`.
",
                          "properties": {
                            "decryption_health": {
                              "description": "The timestamp and status of the rule decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "execution_health": {
                              "description": "The timestamp and status of the rule run.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "read_health": {
                              "description": "The timestamp and status of the rule reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "has_permanent_encryption_key": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "is_sufficiently_secure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're deleting. For example, the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it.
",
            "operationId": "deleteRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a rule.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleResponse": {
                        "$ref": "#/components/examples/get_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a rule by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you create a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If a user with different privileges updates the rule, its behavior might change.
",
            "operationId": "createRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.
",
                "in": "path",
                "name": "ruleId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createCaseRequest": {
                      "$ref": "#/components/examples/create_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/create_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createRuleResponse": {
                        "$ref": "#/components/examples/create_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a rule.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're updating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you update a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If you have different privileges than the user that created or most recently updated the rule, you might change its behavior. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.
",
            "operationId": "updateRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateCaseRequest": {
                      "$ref": "#/components/examples/update_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/update_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "updateRuleResponse": {
                        "$ref": "#/components/examples/update_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_disable": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "disableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_enable": {
          "post": {
            "description": "This API supports token-based authentication only. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "enableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all": {
          "post": {
            "description": "This API snoozes the notifications for the rule indefinitely. The rule checks continue to occur but alerts will not trigger any actions. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all": {
          "post": {
            "description": "If the rule has its notifications snoozed indefinitely, this API cancels the snooze. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule_types": {
          "get": {
            "description": "If you have \`read\` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRuleTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleTypesResponse": {
                        "$ref": "#/components/examples/get_rule_types_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "action_groups": {
                            "description": "An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "action_variables": {
                            "description": "A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                    "useWithTripleBracesInTemplates": {
                                      "type": "boolean",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorized_consumers": {
                            "description": "The list of the plugins IDs that have access to the rule type.",
                            "properties": {
                              "alerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "apm": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "discover": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "infrastructure": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "logs": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "ml": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "monitoring": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "siem": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "stackAlerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "uptime": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "default_action_group_id": {
                            "description": "The default identifier for the rule type group.",
                            "type": "string",
                          },
                          "does_set_recovery_context": {
                            "description": "Indicates whether the rule passes context variables to its recovery action.",
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the rule type is enabled or disabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the rule type.",
                            "type": "string",
                          },
                          "is_exportable": {
                            "description": "Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.",
                            "type": "boolean",
                          },
                          "minimum_license_required": {
                            "description": "The subscriptions required to use the rule type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the rule type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this rule type.",
                            "example": "stackAlerts",
                            "type": "string",
                          },
                          "recovery_action_group": {
                            "description": "An action group to use when an alert goes from an active state to an inactive one.",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "rule_task_timeout": {
                            "example": "5m",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of rule types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rules/_find": {
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "findRules",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the simple_query_string.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of rules to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the simple_query_string parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "findRulesResponse": {
                        "$ref": "#/components/examples/find_rules_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/rule_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "per_page": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves information about rules.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
",
            "operationId": "legaryDeleteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Permanently removes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule API instead.",
            "operationId": "legacyGetAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves an alert by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create rule API instead.",
            "operationId": "legacyCreateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "description": "An UUID v1 or v4 identifier for the alert. If this parameter is omitted, the identifier is randomly generated.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "alertTypeId": {
                        "description": "The ID of the alert type that you want to call when the alert is scheduled to run.",
                        "type": "string",
                      },
                      "consumer": {
                        "description": "The name of the application that owns the alert. This name has to match the Kibana feature name, as that dictates the required role-based access control privileges.",
                        "type": "string",
                      },
                      "enabled": {
                        "description": "Indicates if you want to run the alert on an interval basis after it is created.",
                        "type": "boolean",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "10s",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "alertTypeId",
                      "consumer",
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy create alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Create an alert.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update rule API instead.",
            "operationId": "legacyUpdateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "1d",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy update alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_disable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the disable rule API instead.",
            "operationId": "legacyDisableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_enable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the enable rule API instead.",
            "operationId": "legacyEnableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_mute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute all alerts API instead.",
            "operationId": "legacyMuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute all alerts API instead.",
            "operationId": "legacyUnmuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute alert API instead.",
            "operationId": "legacyMuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute alert API instead.",
            "operationId": "legacyUnmuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_find": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert \`params\` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
",
            "operationId": "legacyFindAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the \`simple_query_string\`.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of alerts to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch \`simple_query_string\` query that filters the alerts in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the \`simple_query_string\` parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/alert_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "perPage": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a paginated set of alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_health": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get alerting framework health API instead.",
            "operationId": "legacyGetAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "alertingFrameworkHealth": {
                          "description": "Three substates identify the health of the alerting framework: \`decryptionHealth\`, \`executionHealth\`, and \`readHealth\`.
",
                          "properties": {
                            "decryptionHealth": {
                              "description": "The timestamp and status of the alert decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "executionHealth": {
                              "description": "The timestamp and status of the alert execution.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "readHealth": {
                              "description": "The timestamp and status of the alert reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "hasPermanentEncryptionKey": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "isSufficientlySecure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/list_alert_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule types API instead.",
            "operationId": "legacyGetAlertTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "actionGroups": {
                            "description": "An explicit list of groups for which the alert type can schedule actions, each with the action group's unique ID and human readable name. Alert actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "actionVariables": {
                            "description": "A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorizedConsumers": {
                            "description": "The list of the plugins IDs that have access to the alert type.",
                            "type": "object",
                          },
                          "defaultActionGroupId": {
                            "description": "The default identifier for the alert type group.",
                            "type": "string",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the rule type is enabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the alert type.",
                            "type": "string",
                          },
                          "isExportable": {
                            "description": "Indicates whether the alert type is exportable in Saved Objects Management UI.",
                            "type": "boolean",
                          },
                          "minimumLicenseRequired": {
                            "description": "The subscriptions required to use the alert type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the alert type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this alert type.",
                            "type": "string",
                          },
                          "recoveryActionGroup": {
                            "description": "An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of alert types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Alerting APIs enable you to create and manage rules and alerts.",
          "name": "alerting",
        },
      ],
    },
    "fileName": "openapi/rules/bundled.yaml",
    "openApi": {
      "components": {
        "examples": {
          "create_rule_request": {
            "summary": "Create an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert '{{alertName}}' is active for group '{{context.group}}':

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "consumer": "alerts",
              "name": "my rule",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "tags": [
                "cpu",
              ],
            },
          },
          "create_rule_response": {
            "summary": "The create rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group} :

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-06-08T17:20:31.632Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_execution_date": "2022-06-08T17:20:31.632Z",
                "status": "pending",
              },
              "id": "41893910-6bca-11eb-9e0d-85d233e3ee35",
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my rule",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 0,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "425b0800-6bca-11eb-9e0d-85d233e3ee35",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-06-08T17:20:31.632Z",
              "updated_by": "elastic",
            },
          },
          "find_rules_response": {
            "summary": "Retrieve information about a rule.",
            "value": {
              "data": [
                {
                  "actions": [
                    {
                      "group": "threshold met",
                      "id": "9dca3e00-74f5-11ed-9801-35303b735aef",
                      "params": {
                        "connector_type_id": ".server-log",
                        "level": "info",
                        "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                      },
                      "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                    },
                  ],
                  "api_key_created_by_user": false,
                  "api_key_owner": "elastic",
                  "consumer": "alerts",
                  "created_at": "2022-12-05T23:40:33.132Z",
                  "created_by": "elastic",
                  "enabled": true,
                  "execution_status": {
                    "last_duration": 48,
                    "last_execution_date": "2022-12-06T01:44:23.983Z",
                    "status": "ok",
                  },
                  "id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "last_run": {
                    "alerts_count": {
                      "active": 0,
                      "ignored": 0,
                      "new": 0,
                      "recovered": 0,
                    },
                    "outcome": "succeeded",
                    "outcome_msg": null,
                    "warning": null,
                  },
                  "mute_all": false,
                  "muted_alert_ids": [],
                  "name": "my alert",
                  "next_run": "2022-12-06T01:45:23.912Z",
                  "notify_when": "onActionGroupChange",
                  "params": {
                    "aggField": "sheet.version",
                    "aggType": "avg",
                    "groupBy": "top",
                    "index": [
                      "test-index",
                    ],
                    "termField": "name.keyword",
                    "termSize": 6,
                    "threshold": [
                      1000,
                    ],
                    "thresholdComparator": ">",
                    "timeField": "@timestamp",
                    "timeWindowSize": 5,
                    "timeWindowUnit": "m",
                  },
                  "revision": 1,
                  "rule_type_id": ".index-threshold",
                  "schedule": {
                    "interval": "1m",
                  },
                  "scheduled_task_id": "3583a470-74f6-11ed-9801-35303b735aef",
                  "tags": [
                    "cpu",
                  ],
                  "throttle": null,
                  "updated_at": "2022-12-05T23:40:33.132Z",
                  "updated_by": "elastic",
                },
              ],
              "page": 1,
              "per_page": 10,
              "total": 1,
            },
          },
          "get_health_response": {
            "summary": "Retrieve information about the health of the alerting framework.",
            "value": {
              "alerting_framework_health": {
                "decryption_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "execution_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
                "read_health": {
                  "status": "ok",
                  "timestamp": "2023-01-13T01:28:00.280Z",
                },
              },
              "has_permanent_encryption_key": true,
              "is_sufficiently_secure": true,
            },
          },
          "get_rule_response": {
            "summary": "The get rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "group": "threshold met",
                  "id": "1007a0c0-7a6e-11ed-89d5-abec321c0def",
                  "params": {
                    "connector_type_id": ".server-log",
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2022-12-13T22:33:41.163Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 83,
                "last_execution_date": "2022-12-13T22:33:44.388Z",
                "status": "ok",
              },
              "id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "my alert",
              "next_run": "2022-12-13T22:34:44.314Z",
              "notify_when": "onActionGroupChange",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  "test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "schedule": {
                "interval": "1m",
              },
              "scheduled_task_id": "31697a40-7b36-11ed-aa79-f742c05329b2",
              "tags": [
                "cpu",
              ],
              "throttle": null,
              "updated_at": "2022-12-13T22:33:41.163Z",
              "updated_by": "elastic",
            },
          },
          "get_rule_types_response": {
            "summary": "Retrieve rule types associated with Kibana machine learning features",
            "value": [
              {
                "action_groups": [
                  {
                    "id": "anomaly_score_match",
                    "name": "Anomaly score matched the condition",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "The bucket timestamp of the anomaly",
                      "name": "timestamp",
                    },
                    {
                      "description": "The bucket time of the anomaly in ISO8601 format",
                      "name": "timestampIso8601",
                    },
                    {
                      "description": "List of job IDs that triggered the alert",
                      "name": "jobIds",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                    {
                      "description": "Indicate if top hits contain interim results",
                      "name": "isInterim",
                    },
                    {
                      "description": "Anomaly score at the time of the notification action",
                      "name": "score",
                    },
                    {
                      "description": "Top records",
                      "name": "topRecords",
                    },
                    {
                      "description": "Top influencers",
                      "name": "topInfluencers",
                    },
                    {
                      "description": "URL to open in the Anomaly Explorer",
                      "name": "anomalyExplorerUrl",
                      "useWithTripleBracesInTemplates": true,
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_score_match",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_alert",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection alert",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
              {
                "action_groups": [
                  {
                    "id": "anomaly_detection_realtime_issue",
                    "name": "Issue detected",
                  },
                  {
                    "id": "recovered",
                    "name": "Recovered",
                  },
                ],
                "action_variables": {
                  "context": [
                    {
                      "description": "Results of the rule execution",
                      "name": "results",
                    },
                    {
                      "description": "Alert info message",
                      "name": "message",
                    },
                  ],
                  "params": [],
                  "state": [],
                },
                "authorized_consumers": {
                  "alerts": {
                    "all": true,
                    "read": true,
                  },
                  "ml": {
                    "all": true,
                    "read": true,
                  },
                },
                "default_action_group_id": "anomaly_detection_realtime_issue",
                "does_set_recovery_context": true,
                "enabled_in_license": true,
                "id": "xpack.ml.anomaly_detection_jobs_health",
                "is_exportable": true,
                "minimum_license_required": "platinum",
                "name": "Anomaly detection jobs health",
                "producer": "ml",
                "recovery_action_group": {
                  "id": "recovered",
                  "name": "Recovered",
                },
                "rule_task_timeout": "5m",
              },
            ],
          },
          "update_rule_request": {
            "summary": "Update an index threshold rule.",
            "value": {
              "actions": [
                {
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}}",
                  },
                },
              ],
              "name": "new name",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".test-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "schedule": {
                "interval": "1m",
              },
              "tags": [],
              "throttle": null,
            },
          },
          "update_rule_response": {
            "summary": "The update rule API returns a JSON object that contains details about the rule.",
            "value": {
              "actions": [
                {
                  "connector_type_id": ".server-log",
                  "frequency": {
                    "notify_when": "onActionGroupChange",
                    "summary": false,
                    "throttle": null,
                  },
                  "group": "threshold met",
                  "id": "96b668d0-a1b6-11ed-afdf-d39a49596974",
                  "params": {
                    "level": "info",
                    "message": "alert {{alertName}} is active for group {{context.group}}:

- Value: {{context.value}}
- Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}
- Timestamp: {{context.date}",
                  },
                  "uuid": "07aef2a0-9eed-4ef9-94ec-39ba58eb609d",
                },
              ],
              "api_key_created_by_user": false,
              "api_key_owner": "elastic",
              "consumer": "alerts",
              "created_at": "2023-01-31T23:03:33.127Z",
              "created_by": "elastic",
              "enabled": true,
              "execution_status": {
                "last_duration": 52,
                "last_execution_date": "2023-01-31T23:48:42.499Z",
                "status": "ok",
              },
              "id": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "last_run": {
                "alerts_count": {
                  "active": 0,
                  "ignored": 0,
                  "new": 0,
                  "recovered": 0,
                },
                "outcome": "succeeded",
                "outcome_msg": null,
                "warning": null,
              },
              "mute_all": false,
              "muted_alert_ids": [],
              "name": "new name",
              "next_run": "2023-01-31T23:49:42.432Z",
              "params": {
                "aggField": "sheet.version",
                "aggType": "avg",
                "groupBy": "top",
                "index": [
                  ".updated-index",
                ],
                "termField": "name.keyword",
                "termSize": 6,
                "threshold": [
                  1000,
                ],
                "thresholdComparator": ">",
                "timeField": "@timestamp",
                "timeWindowSize": 5,
                "timeWindowUnit": "m",
              },
              "revision": 1,
              "rule_type_id": ".index-threshold",
              "running": false,
              "schedule": {
                "interval": "10m",
              },
              "scheduled_task_id": "4c5eda00-e74f-11ec-b72f-5b18752ff9ea",
              "tags": [],
              "throttle": null,
              "updated_at": "2023-01-31T23:55:27.314Z",
              "updated_by": "elastic",
            },
          },
        },
        "parameters": {
          "alert_id": {
            "description": "An identifier for the alert. The identifier is generated by the rule and might be any arbitrary string.",
            "in": "path",
            "name": "alertId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "rule_id": {
            "description": "An identifier for the rule.",
            "in": "path",
            "name": "ruleId",
            "required": true,
            "schema": {
              "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "schemas": {
          "401_response": {
            "properties": {
              "error": {
                "enum": [
                  "Unauthorized",
                ],
                "example": "Unauthorized",
                "type": "string",
              },
              "message": {
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  401,
                ],
                "example": 401,
                "type": "integer",
              },
            },
            "title": "Unsuccessful rule API response",
            "type": "object",
          },
          "404_response": {
            "properties": {
              "error": {
                "enum": [
                  "Not Found",
                ],
                "example": "Not Found",
                "type": "string",
              },
              "message": {
                "example": "Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found",
                "type": "string",
              },
              "statusCode": {
                "enum": [
                  404,
                ],
                "example": 404,
                "type": "integer",
              },
            },
            "type": "object",
          },
          "actions": {
            "default": [],
            "items": {
              "properties": {
                "connector_type_id": {
                  "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                  "example": ".server-log",
                  "readOnly": true,
                  "type": "string",
                },
                "frequency": {
                  "description": "The parameters that affect how often actions are generated. NOTE: You cannot specify these parameters when \`notify_when\` or \`throttle\` are defined at the rule level.
",
                  "properties": {
                    "notify_when": {
                      "$ref": "#/components/schemas/notify_when",
                    },
                    "summary": {
                      "description": "Indicates whether the action is a summary.",
                      "type": "boolean",
                    },
                    "throttle": {
                      "$ref": "#/components/schemas/throttle",
                    },
                  },
                  "required": [
                    "notify_when",
                    "summary",
                  ],
                  "type": "object",
                },
                "group": {
                  "description": "The group name for the actions. If you don't need to group actions, set to \`default\`.",
                  "example": "default",
                  "type": "string",
                },
                "id": {
                  "description": "The identifier for the connector saved object.",
                  "example": "9dca3e00-74f5-11ed-9801-35303b735aef",
                  "type": "string",
                },
                "params": {
                  "additionalProperties": true,
                  "description": "The parameters for the action, which are sent to the connector. The \`params\` are handled as Mustache templates and passed a default set of context.",
                  "type": "object",
                },
                "uuid": {
                  "description": "A universally unique identifier (UUID) for the action.",
                  "example": "1c7a1280-f28c-4e06-96b2-e4e5f05d1d61",
                  "type": "string",
                },
              },
              "type": "object",
            },
            "nullable": true,
            "required": [
              "group",
              "id",
              "params",
            ],
            "type": "array",
          },
          "alert_response_properties": {
            "properties": {
              "actions": {
                "items": {
                  "type": "object",
                },
                "type": "array",
              },
              "alertTypeId": {
                "example": ".index-threshold",
                "type": "string",
              },
              "apiKeyOwner": {
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "createdAt": {
                "description": "The date and time that the alert was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "createdBy": {
                "description": "The identifier for the user that created the alert.",
                "example": "elastic",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the alert is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "executionStatus": {
                "properties": {
                  "lastExecutionDate": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the alert.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "muteAll": {
                "example": false,
                "type": "boolean",
              },
              "mutedInstanceIds": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the alert.",
                "example": "my alert",
                "type": "string",
              },
              "notifyWhen": {
                "example": "onActionGroupChange",
                "type": "string",
              },
              "params": {
                "additionalProperties": true,
                "type": "object",
              },
              "schedule": {
                "properties": {
                  "interval": {
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "scheduledTaskId": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "throttle": {
                "nullable": true,
                "type": "string",
              },
              "updatedAt": {
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updatedBy": {
                "description": "The identifier for the user that updated this alert most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "title": "Legacy alert response properties",
            "type": "object",
          },
          "create_rule_request": {
            "description": "The create rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "consumer": {
                "description": "The name of the application or feature that owns the rule. For example: \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.
",
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                "type": "boolean",
              },
              "name": {
                "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/params_property_index_threshold",
                  },
                ],
                "type": "object",
              },
              "rule_type_id": {
                "description": "The ID of the rule type that you want to call when the rule is scheduled to run. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "type": "string",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "consumer",
              "name",
              "params",
              "rule_type_id",
              "schedule",
            ],
            "title": "Create rule request",
            "type": "object",
          },
          "notify_when": {
            "description": "Indicates how often alerts generate actions. Valid values include: \`onActionGroupChange\`: Actions run when the alert status changes; \`onActiveAlert\`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; \`onThrottleInterval\`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met.
",
            "enum": [
              "onActionGroupChange",
              "onActiveAlert",
              "onThrottleInterval",
            ],
            "example": "onActiveAlert",
            "type": "string",
          },
          "params_property_index_threshold": {
            "properties": {
              "aggField": {
                "type": "string",
              },
              "aggType": {
                "type": "string",
              },
              "groupBy": {
                "type": "string",
              },
              "index": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
              "termField": {
                "type": "string",
              },
              "termSize": {
                "type": "number",
              },
              "threshold": {
                "items": {
                  "type": "number",
                },
                "type": "array",
              },
              "thresholdComparator": {
                "type": "string",
              },
              "timeField": {
                "type": "string",
              },
              "timeWindowSize": {
                "type": "number",
              },
              "timeWindowUnit": {
                "type": "string",
              },
            },
          },
          "rule_response_properties": {
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "api_key_created_by_user": {
                "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                "example": false,
                "type": "boolean",
              },
              "api_key_owner": {
                "description": "The owner of the API key that is associated with the rule and used to run background tasks.
",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "consumer": {
                "description": "The application or feature that owns the rule. For example, \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or \`uptime\`.",
                "example": "alerts",
                "type": "string",
              },
              "created_at": {
                "description": "The date and time that the rule was created.",
                "example": "2022-12-05T23:36:58.284Z",
                "format": "date-time",
                "type": "string",
              },
              "created_by": {
                "description": "The identifier for the user that created the rule.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
              "enabled": {
                "description": "Indicates whether the rule is currently enabled.",
                "example": true,
                "type": "boolean",
              },
              "execution_status": {
                "properties": {
                  "last_duration": {
                    "example": 55,
                    "type": "integer",
                  },
                  "last_execution_date": {
                    "example": "2022-12-06T00:13:43.890Z",
                    "format": "date-time",
                    "type": "string",
                  },
                  "status": {
                    "example": "ok",
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "id": {
                "description": "The identifier for the rule.",
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "last_run": {
                "properties": {
                  "alerts_count": {
                    "properties": {
                      "active": {
                        "type": "integer",
                      },
                      "ignored": {
                        "type": "integer",
                      },
                      "new": {
                        "type": "integer",
                      },
                      "recovered": {
                        "type": "integer",
                      },
                    },
                    "type": "object",
                  },
                  "outcome": {
                    "example": "succeeded",
                    "type": "string",
                  },
                  "outcome_msg": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                  "warning": {
                    "example": null,
                    "nullable": true,
                    "type": "string",
                  },
                },
                "type": "object",
              },
              "mute_all": {
                "example": false,
                "type": "boolean",
              },
              "muted_alert_ids": {
                "items": {
                  "type": "string",
                },
                "nullable": true,
                "type": "array",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "next_run": {
                "example": "2022-12-06T00:14:43.818Z",
                "format": "date-time",
                "nullable": true,
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "revision": {
                "description": "The rule revision number.",
                "type": "integer",
              },
              "rule_type_id": {
                "description": "The identifier for the type of rule. For example, \`.es-query\`, \`.index-threshold\`, \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
",
                "example": "monitoring_alert_cluster_health",
                "type": "string",
              },
              "running": {
                "description": "Indicates whether the rule is running.",
                "type": "boolean",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "scheduled_task_id": {
                "example": "b530fed0-74f5-11ed-9801-35303b735aef",
                "type": "string",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
              "updated_at": {
                "description": "The date and time that the rule was updated most recently.",
                "example": "2022-12-05T23:36:58.284Z",
                "type": "string",
              },
              "updated_by": {
                "description": "The identifier for the user that updated this rule most recently.",
                "example": "elastic",
                "nullable": true,
                "type": "string",
              },
            },
            "required": [
              "actions",
              "api_key_owner",
              "consumer",
              "created_at",
              "created_by",
              "enabled",
              "execution_status",
              "id",
              "mute_all",
              "muted_alert_ids",
              "name",
              "params",
              "rule_type_id",
              "schedule",
              "tags",
              "throttle",
              "updated_at",
              "updated_by",
            ],
            "title": "Rule response properties",
            "type": "object",
          },
          "schedule": {
            "description": "The check interval, which specifies how frequently the rule conditions are checked. The interval is specified in seconds, minutes, hours, or days.",
            "properties": {
              "interval": {
                "example": "1m",
                "type": "string",
              },
            },
            "type": "object",
          },
          "tags": {
            "default": [],
            "description": "The tags for the rule.",
            "items": {
              "type": "string",
            },
            "type": "array",
          },
          "throttle": {
            "default": null,
            "description": "The throttle interval, which defines how often an alert generates repeated actions. It is applicable only if \`notify_when\` is set to \`onThrottleInterval\`. It is specified in seconds, minutes, hours, or days.",
            "example": "10m",
            "nullable": true,
            "type": "string",
          },
          "update_rule_request": {
            "description": "The update rule API request body varies depending on the type of rule and actions.",
            "properties": {
              "actions": {
                "$ref": "#/components/schemas/actions",
              },
              "name": {
                "description": "The name of the rule.",
                "example": "cluster_health_rule",
                "type": "string",
              },
              "notify_when": {
                "$ref": "#/components/schemas/notify_when",
              },
              "params": {
                "additionalProperties": true,
                "description": "The parameters for the rule.",
                "type": "object",
              },
              "schedule": {
                "$ref": "#/components/schemas/schedule",
              },
              "tags": {
                "$ref": "#/components/schemas/tags",
              },
              "throttle": {
                "$ref": "#/components/schemas/throttle",
              },
            },
            "required": [
              "name",
              "params",
              "schedule",
            ],
            "title": "Update rule request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Alerting Team",
        },
        "description": "OpenAPI schema for alerting endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Alerting",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/alerting/_health": {
          "get": {
            "description": "You must have \`read\` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
",
            "operationId": "getAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getAlertingHealthResponse": {
                        "$ref": "#/components/examples/get_health_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "alerting_framework_health": {
                          "description": "Three substates identify the health of the alerting framework: \`decryption_health\`, \`execution_health\`, and \`read_health\`.
",
                          "properties": {
                            "decryption_health": {
                              "description": "The timestamp and status of the rule decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "execution_health": {
                              "description": "The timestamp and status of the rule run.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "read_health": {
                              "description": "The timestamp and status of the rule reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "has_permanent_encryption_key": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "is_sufficiently_secure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're deleting. For example, the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it.
",
            "operationId": "deleteRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a rule.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleResponse": {
                        "$ref": "#/components/examples/get_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a rule by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you create a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If a user with different privileges updates the rule, its behavior might change.
",
            "operationId": "createRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.
",
                "in": "path",
                "name": "ruleId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createCaseRequest": {
                      "$ref": "#/components/examples/create_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/create_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createRuleResponse": {
                        "$ref": "#/components/examples/create_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a rule.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule you're updating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features.  If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature. NOTE: This API supports only token-based authentication. When you update a rule, it identifies which roles you have at that point in time. Thereafter, when the rule performs queries, it uses those security privileges. If you have different privileges than the user that created or most recently updated the rule, you might change its behavior. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.
",
            "operationId": "updateRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateCaseRequest": {
                      "$ref": "#/components/examples/update_rule_request",
                    },
                  },
                  "schema": {
                    "$ref": "#/components/schemas/update_rule_request",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "updateRuleResponse": {
                        "$ref": "#/components/examples/update_rule_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/rule_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_disable": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "disableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/404_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_enable": {
          "post": {
            "description": "This API supports token-based authentication only. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
",
            "operationId": "enableRule",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables a rule.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all": {
          "post": {
            "description": "This API snoozes the notifications for the rule indefinitely. The rule checks continue to occur but alerts will not trigger any actions. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all": {
          "post": {
            "description": "If the rule has its notifications snoozed indefinitely, this API cancels the snooze. You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAllAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "muteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute": {
          "post": {
            "description": "You must have \`all\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have \`read\` privileges for the **Management > Actions and Connectors** feature.
",
            "operationId": "unmuteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/alert_id",
              },
              {
                "$ref": "#/components/parameters/rule_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rule_types": {
          "get": {
            "description": "If you have \`read\` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "getRuleTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getRuleTypesResponse": {
                        "$ref": "#/components/examples/get_rule_types_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "properties": {
                          "action_groups": {
                            "description": "An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "action_variables": {
                            "description": "A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                    "useWithTripleBracesInTemplates": {
                                      "type": "boolean",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorized_consumers": {
                            "description": "The list of the plugins IDs that have access to the rule type.",
                            "properties": {
                              "alerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "apm": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "discover": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "infrastructure": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "logs": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "ml": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "monitoring": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "siem": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "stackAlerts": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                              "uptime": {
                                "properties": {
                                  "all": {
                                    "type": "boolean",
                                  },
                                  "read": {
                                    "type": "boolean",
                                  },
                                },
                                "type": "object",
                              },
                            },
                            "type": "object",
                          },
                          "default_action_group_id": {
                            "description": "The default identifier for the rule type group.",
                            "type": "string",
                          },
                          "does_set_recovery_context": {
                            "description": "Indicates whether the rule passes context variables to its recovery action.",
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the rule type is enabled or disabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the rule type.",
                            "type": "string",
                          },
                          "is_exportable": {
                            "description": "Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.",
                            "type": "boolean",
                          },
                          "minimum_license_required": {
                            "description": "The subscriptions required to use the rule type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the rule type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this rule type.",
                            "example": "stackAlerts",
                            "type": "string",
                          },
                          "recovery_action_group": {
                            "description": "An action group to use when an alert goes from an active state to an inactive one.",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                          "rule_task_timeout": {
                            "example": "5m",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of rule types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerting/rules/_find": {
          "get": {
            "description": "You must have \`read\` privileges for the appropriate Kibana features, depending on the \`consumer\` and \`rule_type_id\` of the rules you're seeking. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the \`monitoring_user\` built-in role.
",
            "operationId": "findRules",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the simple_query_string.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of rules to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the simple_query_string parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "findRulesResponse": {
                        "$ref": "#/components/examples/find_rules_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/rule_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "per_page": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves information about rules.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
",
            "operationId": "legaryDeleteAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Permanently removes an alert.",
            "tags": [
              "alerting",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule API instead.",
            "operationId": "legacyGetAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves an alert by its identifier.",
            "tags": [
              "alerting",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create rule API instead.",
            "operationId": "legacyCreateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "description": "An UUID v1 or v4 identifier for the alert. If this parameter is omitted, the identifier is randomly generated.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "alertTypeId": {
                        "description": "The ID of the alert type that you want to call when the alert is scheduled to run.",
                        "type": "string",
                      },
                      "consumer": {
                        "description": "The name of the application that owns the alert. This name has to match the Kibana feature name, as that dictates the required role-based access control privileges.",
                        "type": "string",
                      },
                      "enabled": {
                        "description": "Indicates if you want to run the alert on an interval basis after it is created.",
                        "type": "boolean",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "10s",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "alertTypeId",
                      "consumer",
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy create alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Create an alert.",
            "tags": [
              "alerting",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update rule API instead.",
            "operationId": "legacyUpdateAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actions": {
                        "items": {
                          "properties": {
                            "actionTypeId": {
                              "description": "The identifier for the action type.",
                              "type": "string",
                            },
                            "group": {
                              "description": "Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to \`default\`.
",
                              "type": "string",
                            },
                            "id": {
                              "description": "The ID of the action saved object to execute.",
                              "type": "string",
                            },
                            "params": {
                              "description": "The map to the \`params\` that the action type will receive. \`params\` are handled as Mustache templates and passed a default set of context.
",
                              "type": "object",
                            },
                          },
                          "required": [
                            "actionTypeId",
                            "group",
                            "id",
                            "params",
                          ],
                          "type": "object",
                        },
                        "type": "array",
                      },
                      "name": {
                        "description": "A name to reference and search.",
                        "type": "string",
                      },
                      "notifyWhen": {
                        "description": "The condition for throttling the notification.",
                        "enum": [
                          "onActionGroupChange",
                          "onActiveAlert",
                          "onThrottleInterval",
                        ],
                        "type": "string",
                      },
                      "params": {
                        "description": "The parameters to pass to the alert type executor \`params\` value. This will also validate against the alert type params validator, if defined.",
                        "type": "object",
                      },
                      "schedule": {
                        "description": "The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
",
                        "properties": {
                          "interval": {
                            "description": "The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.",
                            "example": "1d",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "tags": {
                        "description": "A list of keywords to reference and search.",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "throttle": {
                        "description": "How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of \`10m\` or \`1h\` will prevent it from sending 90 notifications during this period.
",
                        "type": "string",
                      },
                    },
                    "required": [
                      "name",
                      "notifyWhen",
                      "params",
                      "schedule",
                    ],
                    "title": "Legacy update alert request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/alert_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_disable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the disable rule API instead.",
            "operationId": "legacyDisableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Disables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_enable": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the enable rule API instead.",
            "operationId": "legacyEnableAlert",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Enables an alert.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_mute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute all alerts API instead.",
            "operationId": "legacyMuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute all alerts API instead.",
            "operationId": "legacyUnmuteAllAlertInstances",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes all alert instances.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the mute alert API instead.",
            "operationId": "legacyMuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Mutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the unmute alert API instead.",
            "operationId": "legacyUnmuteAlertInstance",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "An identifier for the alert.",
                "in": "path",
                "name": "alertId",
                "required": true,
                "schema": {
                  "example": "41893910-6bca-11eb-9e0d-85d233e3ee35",
                  "type": "string",
                },
              },
              {
                "description": "An identifier for the alert instance.",
                "in": "path",
                "name": "alertInstanceId",
                "required": true,
                "schema": {
                  "example": "dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2",
                  "type": "string",
                },
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Unmutes an alert instance.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_find": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert \`params\` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
",
            "operationId": "legacyFindAlerts",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "The default operator to use for the \`simple_query_string\`.",
                "example": "OR",
                "in": "query",
                "name": "default_search_operator",
                "schema": {
                  "default": "OR",
                  "type": "string",
                },
              },
              {
                "description": "The fields to return in the \`attributes\` key of the response.",
                "in": "query",
                "name": "fields",
                "schema": {
                  "items": {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              {
                "description": "A KQL string that you filter with an attribute from your saved object. It should look like \`savedObjectType.attributes.title: \\"myTitle\\"\`. However, if you used a direct attribute of a saved object, such as \`updatedAt\`, you must define your filter, for example, \`savedObjectType.updatedAt > 2018-12-22\`.
",
                "in": "query",
                "name": "filter",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
                "in": "query",
                "name": "has_reference",
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string",
                    },
                    "type": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
              {
                "description": "The page number to return.",
                "example": 1,
                "in": "query",
                "name": "page",
                "schema": {
                  "default": 1,
                  "type": "integer",
                },
              },
              {
                "description": "The number of alerts to return per page.",
                "example": 20,
                "in": "query",
                "name": "per_page",
                "schema": {
                  "default": 20,
                  "type": "integer",
                },
              },
              {
                "description": "An Elasticsearch \`simple_query_string\` query that filters the alerts in the response.",
                "in": "query",
                "name": "search",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "The fields to perform the \`simple_query_string\` parsed query against.",
                "in": "query",
                "name": "search_fields",
                "schema": {
                  "oneOf": [
                    {
                      "type": "string",
                    },
                    {
                      "items": {
                        "type": "string",
                      },
                      "type": "array",
                    },
                  ],
                },
              },
              {
                "description": "Determines which field is used to sort the results. The field must exist in the \`attributes\` key of the response.
",
                "in": "query",
                "name": "sort_field",
                "schema": {
                  "type": "string",
                },
              },
              {
                "description": "Determines the sort order.",
                "example": "asc",
                "in": "query",
                "name": "sort_order",
                "schema": {
                  "default": "desc",
                  "enum": [
                    "asc",
                    "desc",
                  ],
                  "type": "string",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "data": {
                          "items": {
                            "$ref": "#/components/schemas/alert_response_properties",
                          },
                          "type": "array",
                        },
                        "page": {
                          "type": "integer",
                        },
                        "perPage": {
                          "type": "integer",
                        },
                        "total": {
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a paginated set of alerts.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/_health": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get alerting framework health API instead.",
            "operationId": "legacyGetAlertingHealth",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "alertingFrameworkHealth": {
                          "description": "Three substates identify the health of the alerting framework: \`decryptionHealth\`, \`executionHealth\`, and \`readHealth\`.
",
                          "properties": {
                            "decryptionHealth": {
                              "description": "The timestamp and status of the alert decryption.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "executionHealth": {
                              "description": "The timestamp and status of the alert execution.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "readHealth": {
                              "description": "The timestamp and status of the alert reading events.",
                              "properties": {
                                "status": {
                                  "enum": [
                                    "error",
                                    "ok",
                                    "warn",
                                  ],
                                  "example": "ok",
                                  "type": "string",
                                },
                                "timestamp": {
                                  "example": "2023-01-13T01:28:00.280Z",
                                  "format": "date-time",
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                          },
                          "type": "object",
                        },
                        "hasPermanentEncryptionKey": {
                          "description": "If \`false\`, the encrypted saved object plugin does not have a permanent encryption key.",
                          "example": true,
                          "type": "boolean",
                        },
                        "isSufficientlySecure": {
                          "description": "If \`false\`, security is enabled but TLS is not.",
                          "example": true,
                          "type": "boolean",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves the health status of the alerting framework.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/alerts/alerts/list_alert_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get rule types API instead.",
            "operationId": "legacyGetAlertTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "properties": {
                          "actionGroups": {
                            "description": "An explicit list of groups for which the alert type can schedule actions, each with the action group's unique ID and human readable name. Alert actions validation uses this configuration to ensure that groups are valid.
",
                            "items": {
                              "properties": {
                                "id": {
                                  "type": "string",
                                },
                                "name": {
                                  "type": "string",
                                },
                              },
                              "type": "object",
                            },
                            "type": "array",
                          },
                          "actionVariables": {
                            "description": "A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
",
                            "properties": {
                              "context": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "params": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                              "state": {
                                "items": {
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                    },
                                    "name": {
                                      "type": "string",
                                    },
                                  },
                                  "type": "object",
                                },
                                "type": "array",
                              },
                            },
                            "type": "object",
                          },
                          "authorizedConsumers": {
                            "description": "The list of the plugins IDs that have access to the alert type.",
                            "type": "object",
                          },
                          "defaultActionGroupId": {
                            "description": "The default identifier for the alert type group.",
                            "type": "string",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the rule type is enabled based on the subscription.",
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the alert type.",
                            "type": "string",
                          },
                          "isExportable": {
                            "description": "Indicates whether the alert type is exportable in Saved Objects Management UI.",
                            "type": "boolean",
                          },
                          "minimumLicenseRequired": {
                            "description": "The subscriptions required to use the alert type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The descriptive name of the alert type.",
                            "type": "string",
                          },
                          "producer": {
                            "description": "An identifier for the application that produces this alert type.",
                            "type": "string",
                          },
                          "recoveryActionGroup": {
                            "description": "An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
",
                            "properties": {
                              "id": {
                                "type": "string",
                              },
                              "name": {
                                "type": "string",
                              },
                            },
                            "type": "object",
                          },
                        },
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/401_response",
                    },
                  },
                },
                "description": "Authorization information is missing or invalid.",
              },
            },
            "summary": "Retrieves a list of alert types.",
            "tags": [
              "alerting",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Alerting APIs enable you to create and manage rules and alerts.",
          "name": "alerting",
        },
      ],
    },
    "yaml": "openapi: 3.0.1
info:
  title: Alerting
  description: OpenAPI schema for alerting endpoints
  version: \\"0.1\\"
  contact:
    name: Alerting Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
tags:
  - name: alerting
    description: Alerting APIs enable you to create and manage rules and alerts.
servers:
  - url: http://localhost:5601
    description: local
paths:
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}\\":
    get:
      summary: Retrieves a rule by its identifier.
      operationId: getRule
      description: >
        You must have \`read\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rules you're
        seeking. For example, the **Management > Stack Rules** feature,
        **Analytics > Discover** and **Machine Learning** features,
        **Observability** features, or **Security** features. To get rules
        associated with the **Stack Monitoring** feature, use the
        \`monitoring_user\` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/rule_response_properties\\"
              examples:
                getRuleResponse:
                  $ref: \\"#/components/examples/get_rule_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    delete:
      summary: Deletes a rule.
      operationId: deleteRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule you're
        deleting. For example, the **Management** > **Stack Rules** feature,
        **Analytics** > **Discover** or **Machine Learning** features,
        **Observability**, or **Security** features. WARNING: After you delete a
        rule, you cannot recover it.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    post:
      summary: Creates a rule.
      operationId: createRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule you're
        creating. For example, you must have privileges for the **Management >
        Stack rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, or **Security** features.  If the
        rule has actions, you must also have \`read\` privileges for the
        **Management > Actions and Connectors** feature. NOTE: This API supports
        only token-based authentication. When you create a rule, it identifies
        which roles you have at that point in time. Thereafter, when the rule
        performs queries, it uses those security privileges. If a user with
        different privileges updates the rule, its behavior might change.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: ruleId
          description: >
            An UUID v1 or v4 identifier for the rule. If you omit this
            parameter, an identifier is randomly generated.
          required: true
          schema:
            type: string
            example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: \\"#/components/schemas/create_rule_request\\"
            examples:
              createCaseRequest:
                $ref: \\"#/components/examples/create_rule_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/rule_response_properties\\"
              examples:
                createRuleResponse:
                  $ref: \\"#/components/examples/create_rule_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for a rule.
      operationId: updateRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule you're
        updating. For example, you must have privileges for the **Management >
        Stack rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, or **Security** features.  If the
        rule has actions, you must also have \`read\` privileges for the
        **Management > Actions and Connectors** feature. NOTE: This API supports
        only token-based authentication. When you update a rule, it identifies
        which roles you have at that point in time. Thereafter, when the rule
        performs queries, it uses those security privileges. If you have
        different privileges than the user that created or most recently updated
        the rule, you might change its behavior. Though some properties are
        optional, when you update the rule the existing property values are
        overwritten with default values. Therefore, it is recommended to
        explicitly set all property values.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: \\"#/components/schemas/update_rule_request\\"
            examples:
              updateCaseRequest:
                $ref: \\"#/components/examples/update_rule_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/rule_response_properties\\"
              examples:
                updateRuleResponse:
                  $ref: \\"#/components/examples/update_rule_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_disable\\":
    post:
      summary: Disables a rule.
      operationId: disableRule
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/404_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_enable\\":
    post:
      summary: Enables a rule.
      operationId: enableRule
      description: >
        This API supports token-based authentication only. You must have \`all\`
        privileges for the appropriate Kibana features, depending on the
        \`consumer\` and \`rule_type_id\` of the rule. For example, the **Management
        > Stack Rules** feature, **Analytics > Discover** and **Machine
        Learning** features, **Observability**, and **Security** features.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rules/_find\\":
    get:
      summary: Retrieves information about rules.
      operationId: findRules
      description: >
        You must have \`read\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rules you're
        seeking. For example, you must have privileges for the **Management >
        Stack rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, or **Security** features. To find
        rules associated with the **Stack Monitoring** feature, use the
        \`monitoring_user\` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - name: default_search_operator
          in: query
          description: The default operator to use for the simple_query_string.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the \`attributes\` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: >
            A KQL string that you filter with an attribute from your saved
            object. It should look like \`savedObjectType.attributes.title:
            \\"myTitle\\"\`. However, if you used a direct attribute of a saved
            object, such as \`updatedAt\`, you must define your filter, for
            example, \`savedObjectType.updatedAt > 2018-12-22\`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects
            with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of rules to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch simple_query_string query that filters the objects
            in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the simple_query_string parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: >
            Determines which field is used to sort the results. The field must
            exist in the \`attributes\` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: \\"#/components/schemas/rule_response_properties\\"
                  page:
                    type: integer
                  per_page:
                    type: integer
                  total:
                    type: integer
              examples:
                findRulesResponse:
                  $ref: \\"#/components/examples/find_rules_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/_health\\":
    get:
      summary: Retrieves the health status of the alerting framework.
      operationId: getAlertingHealth
      description: >
        You must have \`read\` privileges for the **Management > Stack Rules**
        feature or for at least one of the **Analytics > Discover**, **Analytics
        > Machine Learning**, **Observability**, or **Security** features.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerting_framework_health:
                    type: object
                    description: >
                      Three substates identify the health of the alerting
                      framework: \`decryption_health\`, \`execution_health\`, and
                      \`read_health\`.
                    properties:
                      decryption_health:
                        type: object
                        description: The timestamp and status of the rule decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      execution_health:
                        type: object
                        description: The timestamp and status of the rule run.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      read_health:
                        type: object
                        description: The timestamp and status of the rule reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                  has_permanent_encryption_key:
                    type: boolean
                    description: If \`false\`, the encrypted saved object plugin does not have a
                      permanent encryption key.
                    example: true
                  is_sufficiently_secure:
                    type: boolean
                    description: If \`false\`, security is enabled but TLS is not.
                    example: true
              examples:
                getAlertingHealthResponse:
                  $ref: \\"#/components/examples/get_health_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule_types\\":
    get:
      summary: Retrieves a list of rule types.
      operationId: getRuleTypes
      description: >
        If you have \`read\` privileges for one or more Kibana features, the API
        response contains information about the appropriate rule types. For
        example, there are rule types associated with the **Management > Stack
        Rules** feature, **Analytics > Discover** and **Machine Learning**
        features, **Observability** features, and **Security** features. To get
        rule types associated with the **Stack Monitoring** feature, use the
        \`monitoring_user\` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    action_groups:
                      description: >
                        An explicit list of groups for which the rule type can
                        schedule actions, each with the action group's unique ID
                        and human readable name. Rule actions validation uses
                        this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    action_variables:
                      description: >
                        A list of action variables that the rule type makes
                        available via context and state in action parameter
                        templates, and a short human readable description. When
                        you create a rule in Kibana, it uses this information to
                        prompt you for these variables in action parameter
                        editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                              useWithTripleBracesInTemplates:
                                type: boolean
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    authorized_consumers:
                      description: The list of the plugins IDs that have access to the rule type.
                      type: object
                      properties:
                        alerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        apm:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        discover:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        infrastructure:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        logs:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        ml:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        monitoring:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        siem:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        stackAlerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        uptime:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                    default_action_group_id:
                      description: The default identifier for the rule type group.
                      type: string
                    does_set_recovery_context:
                      description: Indicates whether the rule passes context variables to its recovery
                        action.
                      type: boolean
                    enabled_in_license:
                      description: Indicates whether the rule type is enabled or disabled based on the
                        subscription.
                      type: boolean
                    id:
                      description: The unique identifier for the rule type.
                      type: string
                    is_exportable:
                      description: Indicates whether the rule type is exportable in **Stack Management
                        > Saved Objects**.
                      type: boolean
                    minimum_license_required:
                      description: The subscriptions required to use the rule type.
                      type: string
                      example: basic
                    name:
                      description: The descriptive name of the rule type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this rule type.
                      type: string
                      example: stackAlerts
                    recovery_action_group:
                      description: An action group to use when an alert goes from an active state to
                        an inactive one.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    rule_task_timeout:
                      type: string
                      example: 5m
              examples:
                getRuleTypesResponse:
                  $ref: \\"#/components/examples/get_rule_types_response\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all\\":
    post:
      summary: Mutes all alerts.
      operationId: muteAllAlerts
      description: >
        This API snoozes the notifications for the rule indefinitely. The rule
        checks continue to occur but alerts will not trigger any actions. You
        must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features. If the rule has actions, you must also have \`read\` privileges
        for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all\\":
    post:
      summary: Unmutes all alerts.
      operationId: unmuteAllAlerts
      description: >
        If the rule has its notifications snoozed indefinitely, this API cancels
        the snooze. You must have \`all\` privileges for the appropriate Kibana
        features, depending on the \`consumer\` and \`rule_type_id\` of the rule.
        For example, the **Management > Stack Rules** feature, **Analytics >
        Discover** and **Machine Learning** features, **Observability**, and
        **Security** features. If the rule has actions, you must also have
        \`read\` privileges for the **Management > Actions and Connectors**
        feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute\\":
    post:
      summary: Mutes an alert.
      operationId: muteAlert
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features. If the rule has actions, you must also have \`read\` privileges
        for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/alert_id\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute\\":
    post:
      summary: Unmutes an alert.
      operationId: unmuteAlert
      description: >
        You must have \`all\` privileges for the appropriate Kibana features,
        depending on the \`consumer\` and \`rule_type_id\` of the rule. For example,
        the **Management > Stack Rules** feature, **Analytics > Discover** and
        **Machine Learning** features, **Observability**, and **Security**
        features. If the rule has actions, you must also have \`read\` privileges
        for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/alert_id\\"
        - $ref: \\"#/components/parameters/rule_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}\\":
    delete:
      summary: Permanently removes an alert.
      operationId: legaryDeleteAlert
      deprecated: true
      description: >
        Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After
        you delete an alert, you cannot recover it.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    get:
      summary: Retrieves an alert by its identifier.
      operationId: legacyGetAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/alert_response_properties\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    post:
      summary: Create an alert.
      operationId: legacyCreateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the create rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - in: path
          name: alertId
          description: An UUID v1 or v4 identifier for the alert. If this parameter is
            omitted, the identifier is randomly generated.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy create alert request properties
              type: object
              required:
                - alertTypeId
                - consumer
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: >
                          Grouping actions is recommended for escalations for
                          different types of alert instances. If you don't need
                          this functionality, set it to \`default\`.
                      id:
                        type: string
                        description: The ID of the action saved object to execute.
                      params:
                        type: object
                        description: >
                          The map to the \`params\` that the action type will
                          receive. \`params\` are handled as Mustache templates
                          and passed a default set of context.
                alertTypeId:
                  type: string
                  description: The ID of the alert type that you want to call when the alert is
                    scheduled to run.
                consumer:
                  type: string
                  description: The name of the application that owns the alert. This name has to
                    match the Kibana feature name, as that dictates the required
                    role-based access control privileges.
                enabled:
                  type: boolean
                  description: Indicates if you want to run the alert on an interval basis after
                    it is created.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor \`params\` value.
                    This will also validate against the alert type params
                    validator, if defined.
                schedule:
                  type: object
                  description: >
                    The schedule specifying when this alert should be run. A
                    schedule is structured such that the key specifies the
                    format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes,
                        hours or days at which the alert should execute.
                      example: 10s
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: >
                    How often this alert should fire the same actions. This will
                    prevent the alert from sending out the same notification
                    over and over. For example, if an alert with a schedule of 1
                    minute stays in a triggered state for 90 minutes, setting a
                    throttle of \`10m\` or \`1h\` will prevent it from sending 90
                    notifications during this period.
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/alert_response_properties\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for an alert.
      operationId: legacyUpdateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the update rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy update alert request properties
              type: object
              required:
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: >
                          Grouping actions is recommended for escalations for
                          different types of alert instances. If you don't need
                          this functionality, set it to \`default\`.
                      id:
                        type: string
                        description: The ID of the action saved object to execute.
                      params:
                        type: object
                        description: >
                          The map to the \`params\` that the action type will
                          receive. \`params\` are handled as Mustache templates
                          and passed a default set of context.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor \`params\` value.
                    This will also validate against the alert type params
                    validator, if defined.
                schedule:
                  type: object
                  description: >
                    The schedule specifying when this alert should be run. A
                    schedule is structured such that the key specifies the
                    format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes,
                        hours or days at which the alert should execute.
                      example: 1d
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: >
                    How often this alert should fire the same actions. This will
                    prevent the alert from sending out the same notification
                    over and over. For example, if an alert with a schedule of 1
                    minute stays in a triggered state for 90 minutes, setting a
                    throttle of \`10m\` or \`1h\` will prevent it from sending 90
                    notifications during this period.
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/alert_response_properties\\"
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_disable\\":
    post:
      summary: Disables an alert.
      operationId: legacyDisableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the disable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_enable\\":
    post:
      summary: Enables an alert.
      operationId: legacyEnableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the enable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_mute_all\\":
    post:
      summary: Mutes all alert instances.
      operationId: legacyMuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all\\":
    post:
      summary: Unmutes all alert instances.
      operationId: legacyUnmuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alerts/_find\\":
    get:
      summary: Retrieves a paginated set of alerts.
      operationId: legacyFindAlerts
      deprecated: true
      description: >
        Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert
        \`params\` are stored as a flattened field type and analyzed as keywords.
        As alerts change in Kibana, the results on each page of the response
        also change. Use the find API for traditional paginated results, but
        avoid using it to export large amounts of data.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - name: default_search_operator
          in: query
          description: The default operator to use for the \`simple_query_string\`.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the \`attributes\` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: >
            A KQL string that you filter with an attribute from your saved
            object. It should look like \`savedObjectType.attributes.title:
            \\"myTitle\\"\`. However, if you used a direct attribute of a saved
            object, such as \`updatedAt\`, you must define your filter, for
            example, \`savedObjectType.updatedAt > 2018-12-22\`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects
            with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of alerts to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch \`simple_query_string\` query that filters the
            alerts in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the \`simple_query_string\` parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: >
            Determines which field is used to sort the results. The field must
            exist in the \`attributes\` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: \\"#/components/schemas/alert_response_properties\\"
                  page:
                    type: integer
                  perPage:
                    type: integer
                  total:
                    type: integer
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alerts/_health\\":
    get:
      summary: Retrieves the health status of the alerting framework.
      operationId: legacyGetAlertingHealth
      deprecated: true
      description: Deprecated in 7.13.0. Use the get alerting framework health API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alertingFrameworkHealth:
                    type: object
                    description: >
                      Three substates identify the health of the alerting
                      framework: \`decryptionHealth\`, \`executionHealth\`, and
                      \`readHealth\`.
                    properties:
                      decryptionHealth:
                        type: object
                        description: The timestamp and status of the alert decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      executionHealth:
                        type: object
                        description: The timestamp and status of the alert execution.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                      readHealth:
                        type: object
                        description: The timestamp and status of the alert reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: 2023-01-13T01:28:00.280Z
                  hasPermanentEncryptionKey:
                    type: boolean
                    description: If \`false\`, the encrypted saved object plugin does not have a
                      permanent encryption key.
                    example: true
                  isSufficientlySecure:
                    type: boolean
                    description: If \`false\`, security is enabled but TLS is not.
                    example: true
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alerts/list_alert_types\\":
    get:
      summary: Retrieves a list of alert types.
      operationId: legacyGetAlertTypes
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule types API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    actionGroups:
                      description: >
                        An explicit list of groups for which the alert type can
                        schedule actions, each with the action group's unique ID
                        and human readable name. Alert actions validation uses
                        this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    actionVariables:
                      description: >
                        A list of action variables that the alert type makes
                        available via context and state in action parameter
                        templates, and a short human readable description. The
                        Alert UI will use this information to prompt users for
                        these variables in action parameter editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    authorizedConsumers:
                      description: The list of the plugins IDs that have access to the alert type.
                      type: object
                    defaultActionGroupId:
                      description: The default identifier for the alert type group.
                      type: string
                    enabledInLicense:
                      description: Indicates whether the rule type is enabled based on the
                        subscription.
                      type: boolean
                    id:
                      description: The unique identifier for the alert type.
                      type: string
                    isExportable:
                      description: Indicates whether the alert type is exportable in Saved Objects
                        Management UI.
                      type: boolean
                    minimumLicenseRequired:
                      description: The subscriptions required to use the alert type.
                      type: string
                    name:
                      description: The descriptive name of the alert type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this alert type.
                      type: string
                    recoveryActionGroup:
                      description: >
                        An action group to use when an alert instance goes from
                        an active state to an inactive one. If it is not
                        specified, the default recovered action group is used.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute\\":
    post:
      summary: Mutes an alert instance.
      operationId: legacyMuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute\\":
    post:
      summary: Unmutes an alert instance.
      operationId: legacyUnmuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/401_response\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: ApiKey
  parameters:
    rule_id:
      in: path
      name: ruleId
      description: An identifier for the rule.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
    space_id:
      in: path
      name: spaceId
      description: An identifier for the space. If \`/s/\` and the identifier are
        omitted from the path, the default space is used.
      required: true
      schema:
        type: string
        example: default
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
    alert_id:
      in: path
      name: alertId
      description: An identifier for the alert. The identifier is generated by the
        rule and might be any arbitrary string.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
  schemas:
    notify_when:
      type: string
      description: >
        Indicates how often alerts generate actions. Valid values include:
        \`onActionGroupChange\`: Actions run when the alert status changes;
        \`onActiveAlert\`: Actions run when the alert becomes active and at each
        check interval while the rule conditions are met; \`onThrottleInterval\`:
        Actions run when the alert becomes active and at the interval specified
        in the throttle property while the rule conditions are met.
      enum:
        - onActionGroupChange
        - onActiveAlert
        - onThrottleInterval
      example: onActiveAlert
    throttle:
      type: string
      description: The throttle interval, which defines how often an alert generates
        repeated actions. It is applicable only if \`notify_when\` is set to
        \`onThrottleInterval\`. It is specified in seconds, minutes, hours, or
        days.
      nullable: true
      default: null
      example: 10m
    actions:
      type: array
      default: []
      required:
        - group
        - id
        - params
      nullable: true
      items:
        type: object
        properties:
          connector_type_id:
            type: string
            description: The type of connector. This property appears in responses but
              cannot be set in requests.
            example: .server-log
            readOnly: true
          frequency:
            type: object
            description: >
              The parameters that affect how often actions are generated. NOTE:
              You cannot specify these parameters when \`notify_when\` or
              \`throttle\` are defined at the rule level.
            required:
              - notify_when
              - summary
            properties:
              notify_when:
                $ref: \\"#/components/schemas/notify_when\\"
              summary:
                type: boolean
                description: Indicates whether the action is a summary.
              throttle:
                $ref: \\"#/components/schemas/throttle\\"
          group:
            type: string
            description: The group name for the actions. If you don't need to group actions,
              set to \`default\`.
            example: default
          id:
            type: string
            description: The identifier for the connector saved object.
            example: 9dca3e00-74f5-11ed-9801-35303b735aef
          params:
            type: object
            description: The parameters for the action, which are sent to the connector. The
              \`params\` are handled as Mustache templates and passed a default
              set of context.
            additionalProperties: true
          uuid:
            type: string
            description: A universally unique identifier (UUID) for the action.
            example: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
    schedule:
      type: object
      description: The check interval, which specifies how frequently the rule
        conditions are checked. The interval is specified in seconds, minutes,
        hours, or days.
      properties:
        interval:
          type: string
          example: 1m
    tags:
      type: array
      description: The tags for the rule.
      items:
        type: string
      default: []
    rule_response_properties:
      title: Rule response properties
      type: object
      required:
        - actions
        - api_key_owner
        - consumer
        - created_at
        - created_by
        - enabled
        - execution_status
        - id
        - mute_all
        - muted_alert_ids
        - name
        - params
        - rule_type_id
        - schedule
        - tags
        - throttle
        - updated_at
        - updated_by
      properties:
        actions:
          $ref: \\"#/components/schemas/actions\\"
        api_key_created_by_user:
          type: boolean
          description: Indicates whether the API key that is associated with the rule was
            created by the user.
          example: false
        api_key_owner:
          type: string
          description: >
            The owner of the API key that is associated with the rule and used
            to run background tasks.
          nullable: true
          example: elastic
        consumer:
          type: string
          description: The application or feature that owns the rule. For example,
            \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`, \`metrics\`,
            \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`, \`stackAlerts\`, or
            \`uptime\`.
          example: alerts
        created_at:
          type: string
          description: The date and time that the rule was created.
          format: date-time
          example: 2022-12-05T23:36:58.284Z
        created_by:
          type: string
          description: The identifier for the user that created the rule.
          nullable: true
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the rule is currently enabled.
          example: true
        execution_status:
          type: object
          properties:
            last_duration:
              type: integer
              example: 55
            last_execution_date:
              type: string
              format: date-time
              example: 2022-12-06T00:13:43.890Z
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the rule.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        last_run:
          type: object
          properties:
            alerts_count:
              type: object
              properties:
                active:
                  type: integer
                ignored:
                  type: integer
                new:
                  type: integer
                recovered:
                  type: integer
            outcome:
              type: string
              example: succeeded
            outcome_msg:
              type: string
              nullable: true
              example: null
            warning:
              type: string
              nullable: true
              example: null
        muted_alert_ids:
          type: array
          nullable: true
          items:
            type: string
        mute_all:
          type: boolean
          example: false
        name:
          type: string
          description: The name of the rule.
          example: cluster_health_rule
        next_run:
          type: string
          format: date-time
          nullable: true
          example: 2022-12-06T00:14:43.818Z
        notify_when:
          $ref: \\"#/components/schemas/notify_when\\"
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
        revision:
          type: integer
          description: The rule revision number.
        rule_type_id:
          type: string
          description: >
            The identifier for the type of rule. For example, \`.es-query\`,
            \`.index-threshold\`, \`logs.alert.document.count\`,
            \`monitoring_alert_cluster_health\`, \`siem.thresholdRule\`, or
            \`xpack.ml.anomaly_detection_alert\`.
          example: monitoring_alert_cluster_health
        running:
          type: boolean
          description: Indicates whether the rule is running.
        schedule:
          $ref: \\"#/components/schemas/schedule\\"
        scheduled_task_id:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          $ref: \\"#/components/schemas/tags\\"
        throttle:
          $ref: \\"#/components/schemas/throttle\\"
        updated_at:
          type: string
          description: The date and time that the rule was updated most recently.
          example: 2022-12-05T23:36:58.284Z
        updated_by:
          type: string
          description: The identifier for the user that updated this rule most recently.
          nullable: true
          example: elastic
    401_response:
      type: object
      title: Unsuccessful rule API response
      properties:
        error:
          type: string
          example: Unauthorized
          enum:
            - Unauthorized
        message:
          type: string
        statusCode:
          type: integer
          example: 401
          enum:
            - 401
    404_response:
      type: object
      properties:
        error:
          type: string
          example: Not Found
          enum:
            - Not Found
        message:
          type: string
          example: Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found
        statusCode:
          type: integer
          example: 404
          enum:
            - 404
    update_rule_request:
      title: Update rule request
      description: The update rule API request body varies depending on the type of
        rule and actions.
      type: object
      required:
        - name
        - params
        - schedule
      properties:
        actions:
          $ref: \\"#/components/schemas/actions\\"
        name:
          type: string
          description: The name of the rule.
          example: cluster_health_rule
        notify_when:
          $ref: \\"#/components/schemas/notify_when\\"
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
        schedule:
          $ref: \\"#/components/schemas/schedule\\"
        tags:
          $ref: \\"#/components/schemas/tags\\"
        throttle:
          $ref: \\"#/components/schemas/throttle\\"
    create_rule_request:
      title: Create rule request
      description: The create rule API request body varies depending on the type of
        rule and actions.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: \\"#/components/schemas/actions\\"
        consumer:
          type: string
          description: >
            The name of the application or feature that owns the rule. For
            example: \`alerts\`, \`apm\`, \`discover\`, \`infrastructure\`, \`logs\`,
            \`metrics\`, \`ml\`, \`monitoring\`, \`securitySolution\`, \`siem\`,
            \`stackAlerts\`, or \`uptime\`.
        enabled:
          type: boolean
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
        name:
          type: string
          description: The name of the rule. While this name does not have to be unique, a
            distinctive name can help you identify a rule.
          example: cluster_health_rule
        notify_when:
          $ref: \\"#/components/schemas/notify_when\\"
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
          oneOf:
            - $ref: \\"#/components/schemas/params_property_index_threshold\\"
        rule_type_id:
          type: string
          description: >
            The ID of the rule type that you want to call when the rule is
            scheduled to run. For example, \`.es-query\`, \`.index-threshold\`,
            \`logs.alert.document.count\`, \`monitoring_alert_cluster_health\`,
            \`siem.thresholdRule\`, or \`xpack.ml.anomaly_detection_alert\`.
        schedule:
          $ref: \\"#/components/schemas/schedule\\"
        tags:
          $ref: \\"#/components/schemas/tags\\"
        throttle:
          $ref: \\"#/components/schemas/throttle\\"
    alert_response_properties:
      title: Legacy alert response properties
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
        alertTypeId:
          type: string
          example: .index-threshold
        apiKeyOwner:
          type: string
          nullable: true
          example: elastic
        createdAt:
          type: string
          description: The date and time that the alert was created.
          format: date-time
          example: 2022-12-05T23:36:58.284Z
        createdBy:
          type: string
          description: The identifier for the user that created the alert.
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the alert is currently enabled.
          example: true
        executionStatus:
          type: object
          properties:
            lastExecutionDate:
              type: string
              format: date-time
              example: 2022-12-06T00:13:43.890Z
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the alert.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        muteAll:
          type: boolean
          example: false
        mutedInstanceIds:
          type: array
          nullable: true
          items:
            type: string
        name:
          type: string
          description: The name of the alert.
          example: my alert
        notifyWhen:
          type: string
          example: onActionGroupChange
        params:
          type: object
          additionalProperties: true
        schedule:
          type: object
          properties:
            interval:
              type: string
        scheduledTaskId:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          type: array
          items:
            type: string
        throttle:
          type: string
          nullable: true
        updatedAt:
          type: string
          example: 2022-12-05T23:36:58.284Z
        updatedBy:
          type: string
          description: The identifier for the user that updated this alert most recently.
          nullable: true
          example: elastic
    params_property_index_threshold:
      properties:
        aggField:
          type: string
        aggType:
          type: string
        groupBy:
          type: string
        index:
          type: array
          items:
            type: string
        termField:
          type: string
        termSize:
          type: number
        threshold:
          type: array
          items:
            type: number
        thresholdComparator:
          type: string
        timeField:
          type: string
        timeWindowSize:
          type: number
        timeWindowUnit:
          type: string
  examples:
    get_rule_response:
      summary: The get rule API returns a JSON object that contains details about the
        rule.
      value:
        id: 31697a40-7b36-11ed-aa79-f742c05329b2
        consumer: alerts
        tags:
          - cpu
        name: my alert
        enabled: true
        throttle: null
        schedule:
          interval: 1m
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: \\">\\"
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - test-index
          timeField: \\"@timestamp\\"
          aggField: sheet.version
          termField: name.keyword
        revision: 1
        rule_type_id: .index-threshold
        created_by: elastic
        updated_by: elastic
        created_at: 2022-12-13T22:33:41.163Z
        updated_at: 2022-12-13T22:33:41.163Z
        api_key_owner: elastic
        notify_when: onActionGroupChange
        muted_alert_ids: []
        mute_all: false
        scheduled_task_id: 31697a40-7b36-11ed-aa79-f742c05329b2
        execution_status:
          status: ok
          last_execution_date: 2022-12-13T22:33:44.388Z
          last_duration: 83
        actions:
          - group: threshold met
            id: 1007a0c0-7a6e-11ed-89d5-abec321c0def
            uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group}}:


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}
              connector_type_id: .server-log
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: 2022-12-13T22:34:44.314Z
        api_key_created_by_user: false
    update_rule_request:
      summary: Update an index threshold rule.
      value:
        actions:
          - frequency:
              summary: false
              notify_when: onActionGroupChange
            group: threshold met
            id: 96b668d0-a1b6-11ed-afdf-d39a49596974
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group}}:


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}}
        params:
          aggField: sheet.version
          aggType: avg
          index:
            - .test-index
          groupBy: top
          termField: name.keyword
          termSize: 6
          threshold:
            - 1000
          thresholdComparator: \\">\\"
          timeField: \\"@timestamp\\"
          timeWindowSize: 5
          timeWindowUnit: m
        name: new name
        schedule:
          interval: 1m
        tags: []
        throttle: null
    update_rule_response:
      summary: The update rule API returns a JSON object that contains details about
        the rule.
      value:
        id: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
        consumer: alerts
        tags: []
        name: new name
        enabled: true
        throttle: null
        revision: 1
        running: false
        schedule:
          interval: 10m
        params:
          index:
            - .updated-index
          timeField: \\"@timestamp\\"
          groupBy: top
          aggType: avg
          timeWindowSize: 5
          timeWindowUnit: m
          thresholdComparator: \\">\\"
          threshold:
            - 1000
          aggField: sheet.version
          termField: name.keyword
          termSize: 6
        api_key_owner: elastic
        created_by: elastic
        updated_by: elastic
        rule_type_id: .index-threshold
        scheduled_task_id: 4c5eda00-e74f-11ec-b72f-5b18752ff9ea
        created_at: 2023-01-31T23:03:33.127Z
        updated_at: 2023-01-31T23:55:27.314Z
        mute_all: false
        muted_alert_ids: []
        execution_status:
          status: ok
          last_execution_date: 2023-01-31T23:48:42.499Z
          last_duration: 52
        actions:
          - group: threshold met
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group}}:


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}
            id: 96b668d0-a1b6-11ed-afdf-d39a49596974
            uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
            connector_type_id: .server-log
            frequency:
              summary: false
              throttle: null
              notify_when: onActionGroupChange
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: 2023-01-31T23:49:42.432Z
        api_key_created_by_user: false
    create_rule_request:
      summary: Create an index threshold rule.
      value:
        actions:
          - id: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
            frequency:
              notify_when: onActionGroupChange
              summary: false
            group: threshold met
            params:
              level: info
              message: >-
                alert '{{alertName}}' is active for group '{{context.group}}':


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}}
        consumer: alerts
        name: my rule
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: \\">\\"
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - .test-index
          timeField: \\"@timestamp\\"
          aggField: sheet.version
          termField: name.keyword
        rule_type_id: .index-threshold
        schedule:
          interval: 1m
        tags:
          - cpu
    create_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        actions:
          - group: threshold met
            id: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
            uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
            frequency:
              notify_when: onActionGroupChange
              summary: false
              throttle: null
            params:
              level: info
              message: >-
                alert {{alertName}} is active for group {{context.group} :


                - Value: {{context.value}}

                - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                - Timestamp: {{context.date}}
        api_key_created_by_user: false
        api_key_owner: elastic
        consumer: alerts
        created_at: 2022-06-08T17:20:31.632Z
        created_by: elastic
        enabled: true
        execution_status:
          last_execution_date: 2022-06-08T17:20:31.632Z
          status: pending
        id: 41893910-6bca-11eb-9e0d-85d233e3ee35
        muted_alert_ids: []
        mute_all: false
        name: my rule
        notify_when: onActionGroupChange
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: \\">\\"
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - .test-index
          timeField: \\"@timestamp\\"
          aggField: sheet.version
          termField: name.keyword
        revision: 0
        rule_type_id: .index-threshold
        running: false
        schedule:
          interval: 1m
        scheduled_task_id: 425b0800-6bca-11eb-9e0d-85d233e3ee35
        tags:
          - cpu
        throttle: null
        updated_at: 2022-06-08T17:20:31.632Z
        updated_by: elastic
    find_rules_response:
      summary: Retrieve information about a rule.
      value:
        page: 1
        total: 1
        per_page: 10
        data:
          - id: 3583a470-74f6-11ed-9801-35303b735aef
            consumer: alerts
            tags:
              - cpu
            name: my alert
            enabled: true
            throttle: null
            schedule:
              interval: 1m
            params:
              aggType: avg
              termSize: 6
              thresholdComparator: \\">\\"
              timeWindowSize: 5
              timeWindowUnit: m
              groupBy: top
              threshold:
                - 1000
              index:
                - test-index
              timeField: \\"@timestamp\\"
              aggField: sheet.version
              termField: name.keyword
            revision: 1
            rule_type_id: .index-threshold
            created_by: elastic
            updated_by: elastic
            created_at: 2022-12-05T23:40:33.132Z
            updated_at: 2022-12-05T23:40:33.132Z
            api_key_owner: elastic
            notify_when: onActionGroupChange
            mute_all: false
            muted_alert_ids: []
            scheduled_task_id: 3583a470-74f6-11ed-9801-35303b735aef
            execution_status:
              status: ok
              last_execution_date: 2022-12-06T01:44:23.983Z
              last_duration: 48
            actions:
              - id: 9dca3e00-74f5-11ed-9801-35303b735aef
                group: threshold met
                uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
                params:
                  level: info
                  message: >-
                    alert {{alertName}} is active for group {{context.group}}:


                    - Value: {{context.value}}

                    - Conditions Met: {{context.conditions}} over {{params.timeWindowSize}}{{params.timeWindowUnit}}

                    - Timestamp: {{context.date}}
                  connector_type_id: .server-log
            last_run:
              alerts_count:
                new: 0
                ignored: 0
                recovered: 0
                active: 0
              outcome_msg: null
              warning: null
              outcome: succeeded
            next_run: 2022-12-06T01:45:23.912Z
            api_key_created_by_user: false
    get_health_response:
      summary: Retrieve information about the health of the alerting framework.
      value:
        is_sufficiently_secure: true
        has_permanent_encryption_key: true
        alerting_framework_health:
          decryption_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
          execution_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
          read_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
    get_rule_types_response:
      summary: Retrieve rule types associated with Kibana machine learning features
      value:
        - id: xpack.ml.anomaly_detection_alert
          action_groups:
            - id: anomaly_score_match
              name: Anomaly score matched the condition
            - id: recovered
              name: Recovered
          action_variables:
            context:
              - name: timestamp
                description: The bucket timestamp of the anomaly
              - name: timestampIso8601
                description: The bucket time of the anomaly in ISO8601 format
              - name: jobIds
                description: List of job IDs that triggered the alert
              - name: message
                description: Alert info message
              - name: isInterim
                description: Indicate if top hits contain interim results
              - name: score
                description: Anomaly score at the time of the notification action
              - name: topRecords
                description: Top records
              - name: topInfluencers
                description: Top influencers
              - name: anomalyExplorerUrl
                description: URL to open in the Anomaly Explorer
                useWithTripleBracesInTemplates: true
            params: []
            state: []
          authorized_consumers:
            alerts:
              all: true
              read: true
            ml:
              all: true
              read: true
          default_action_group_id: anomaly_score_match
          does_set_recovery_context: true
          enabled_in_license: true
          is_exportable: true
          minimum_license_required: platinum
          name: Anomaly detection alert
          producer: ml
          recovery_action_group:
            id: recovered
            name: Recovered
          rule_task_timeout: 5m
        - id: xpack.ml.anomaly_detection_jobs_health
          action_groups:
            - id: anomaly_detection_realtime_issue
              name: Issue detected
            - id: recovered
              name: Recovered
          action_variables:
            context:
              - name: results
                description: Results of the rule execution
              - name: message
                description: Alert info message
            params: []
            state: []
          authorized_consumers:
            alerts:
              all: true
              read: true
            ml:
              all: true
              read: true
          default_action_group_id: anomaly_detection_realtime_issue
          does_set_recovery_context: true
          enabled_in_license: true
          is_exportable: true
          minimum_license_required: platinum
          name: Anomaly detection jobs health
          producer: ml
          recovery_action_group:
            id: recovered
            name: Recovered
          rule_task_timeout: 5m
security:
  - basicAuth: []
  - apiKeyAuth: []
",
  },
  {
    "doc": {
      "components": {
        "schemas": {
          "AnotherSchema": {
            "properties": {
              "address": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "type": "object",
          },
          "NewSchema": {
            "properties": {
              "age": {
                "type": "integer",
              },
              "email": {
                "type": "string",
              },
            },
            "required": [
              "email",
            ],
            "type": "object",
          },
        },
        "securitySchemes": {
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "license": {
          "name": "MIT",
          "url": "fakeurl",
        },
        "title": "Your API",
        "version": "1.0.0",
      },
      "openapi": "3.0.1",
      "paths": {
        "/example": {
          "post": {
            "operationId": "createExample",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/NewSchema",
                      },
                      {
                        "$ref": "#/components/schemas/AnotherSchema",
                      },
                    ],
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "description": "OK",
              },
              "400": {
                "description": "KO",
              },
            },
            "summary": "Create a new example",
          },
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
    },
    "fileName": "openapi/demo/example.yaml",
    "openApi": {
      "components": {
        "schemas": {
          "AnotherSchema": {
            "properties": {
              "address": {
                "type": "string",
              },
              "name": {
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "type": "object",
          },
          "NewSchema": {
            "properties": {
              "age": {
                "type": "integer",
              },
              "email": {
                "type": "string",
              },
            },
            "required": [
              "email",
            ],
            "type": "object",
          },
        },
        "securitySchemes": {
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "license": {
          "name": "MIT",
          "url": "fakeurl",
        },
        "title": "Your API",
        "version": "1.0.0",
      },
      "openapi": "3.0.1",
      "paths": {
        "/example": {
          "post": {
            "operationId": "createExample",
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/NewSchema",
                      },
                      {
                        "$ref": "#/components/schemas/AnotherSchema",
                      },
                    ],
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "description": "OK",
              },
              "400": {
                "description": "KO",
              },
            },
            "summary": "Create a new example",
          },
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
    },
    "yaml": "openapi: 3.0.1
info:
  title: Your API
  version: 1.0.0
  license:
    name: MIT
    url: fakeurl
servers:
  - url: http://localhost:5601
    description: local
paths:
  /example:
    post:
      operationId: createExample
      summary: Create a new example
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: \\"#/components/schemas/NewSchema\\"
                - $ref: \\"#/components/schemas/AnotherSchema\\"
      responses:
        \\"200\\":
          description: OK
        \\"400\\":
          description: KO
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    NewSchema:
      type: object
      properties:
        email:
          type: string
        age:
          type: integer
      required:
        - email
    AnotherSchema:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
      required:
        - name
security:
  - basicAuth: []
",
  },
  {
    "doc": {
      "components": {
        "examples": {
          "create_index_connector_request": {
            "summary": "Create an index connector.",
            "value": {
              "config": {
                "index": "test-index",
              },
              "connector_type_id": ".index",
              "name": "my-connector",
            },
          },
          "create_index_connector_response": {
            "summary": "A new index connector.",
            "value": {
              "config": {
                "executionTimeField": null,
                "index": "test-index",
                "refresh": false,
              },
              "connector_type_id": ".index",
              "id": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my-connector",
            },
          },
          "get_connector_response": {
            "summary": "A list of connector types",
            "value": {
              "config": {},
              "connector_type_id": ".server-log",
              "id": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my_server_log_connector",
            },
          },
          "get_connector_types_response": {
            "summary": "A list of connector types",
            "value": [
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".swimlane",
                "minimum_license_required": "gold",
                "name": "Swimlane",
                "supported_feature_ids": [
                  "alerting",
                  "cases",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".index",
                "minimum_license_required": "basic",
                "name": "Index",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".server-log",
                "minimum_license_required": "basic",
                "name": "Server log",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                ],
              },
            ],
          },
          "get_connectors_response": {
            "summary": "A list of connectors",
            "value": [
              {
                "connector_type_id": ".email",
                "id": "preconfigured-email-connector",
                "is_deprecated": false,
                "is_preconfigured": true,
                "name": "my-preconfigured-email-notification",
                "referenced_by_count": 0,
              },
              {
                "config": {
                  "executionTimeField": null,
                  "index": "test-index",
                  "refresh": false,
                },
                "connector_type_id": ".index",
                "id": "e07d0c80-8b8b-11ed-a780-3b746c987a81",
                "is_deprecated": false,
                "is_missing_secrets": false,
                "is_preconfigured": false,
                "name": "my-index-connector",
                "referenced_by_count": 2,
              },
            ],
          },
          "run_index_connector_request": {
            "summary": "Run an index connector.",
            "value": {
              "params": {
                "documents": [
                  {
                    "id": "my_doc_id",
                    "message": "hello, world",
                    "name": "my_doc_name",
                  },
                ],
              },
            },
          },
          "run_index_connector_response": {
            "summary": "Response from running an index connector.",
            "value": {
              "connector_id": "fd38c600-96a5-11ed-bb79-353b74189cba",
              "data": {
                "errors": false,
                "items": [
                  {
                    "create": {
                      "_id": "4JtvwYUBrcyxt2NnfW3y",
                      "_index": "my-index",
                      "_primary_term": 1,
                      "_seq_no": 0,
                      "_shards": {
                        "failed": 0,
                        "successful": 1,
                        "total": 2,
                      },
                      "_version": 1,
                      "result": "created",
                      "status": 201,
                    },
                  },
                ],
                "took": 135,
              },
              "status": "ok",
            },
          },
          "run_jira_connector_request": {
            "summary": "Run a Jira connector to retrieve the list of issue types.",
            "value": {
              "params": {
                "subAction": "issueTypes",
              },
            },
          },
          "run_jira_connector_response": {
            "summary": "Response from retrieving the list of issue types for a Jira connector.",
            "value": {
              "connector_id": "b3aad810-edbe-11ec-82d1-11348ecbf4a6",
              "data": [
                {
                  "id": 10024,
                  "name": "Improvement",
                },
                {
                  "id": 10006,
                  "name": "Task",
                },
                {
                  "id": 10007,
                  "name": "Sub-task",
                },
                {
                  "id": 10025,
                  "name": "New Feature",
                },
                {
                  "id": 10023,
                  "name": "Bug",
                },
                {
                  "id": 10000,
                  "name": "Epic",
                },
              ],
              "status": "ok",
            },
          },
          "run_server_log_connector_request": {
            "summary": "Run a server log connector.",
            "value": {
              "params": {
                "level": "warn",
                "message": "Test warning message.",
              },
            },
          },
          "run_server_log_connector_response": {
            "summary": "Response from running a server log connector.",
            "value": {
              "connector_id": "7fc7b9a0-ecc9-11ec-8736-e7d63118c907",
              "status": "ok",
            },
          },
          "run_servicenow_itom_connector_request": {
            "summary": "Run a ServiceNow ITOM connector to retrieve the list of choices.",
            "value": {
              "params": {
                "subAction": "getChoices",
                "subActionParams": {
                  "fields": [
                    "severity",
                    "urgency",
                  ],
                },
              },
            },
          },
          "run_servicenow_itom_connector_response": {
            "summary": "Response from retrieving the list of choices for a ServiceNow ITOM connector.",
            "value": {
              "connector_id": "9d9be270-2fd2-11ed-b0e0-87533c532698",
              "data": [
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Critical",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Major",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Minor",
                  "value": 3,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Warning",
                  "value": 4,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "OK",
                  "value": 5,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Clear",
                  "value": 0,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "1 - High",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "2 - Medium",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "3 - Low",
                  "value": 3,
                },
              ],
              "status": "ok",
            },
          },
          "run_swimlane_connector_request": {
            "summary": "Run a Swimlane connector to create an incident.",
            "value": {
              "params": {
                "subAction": "pushToService",
                "subActionParams": {
                  "comments": [
                    {
                      "comment": "A comment about the incident.",
                      "commentId": 1,
                    },
                  ],
                  "incident": {
                    "caseId": "1000",
                    "caseName": "Case name",
                    "description": "Description of the incident.",
                  },
                },
              },
            },
          },
          "run_swimlane_connector_response": {
            "summary": "Response from creating a Swimlane incident.",
            "value": {
              "connector_id": "a4746470-2f94-11ed-b0e0-87533c532698",
              "data": {
                "comments": [
                  {
                    "commentId": 1,
                    "pushedDate": "2022-09-08T16:52:27.865Z",
                  },
                ],
                "id": "aKPmBHWzmdRQtx6Mx",
                "pushedDate": "2022-09-08T16:52:27.866Z",
                "title": "TEST-457",
                "url": "https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx",
              },
              "status": "ok",
            },
          },
          "update_index_connector_request": {
            "summary": "Update an index connector.",
            "value": {
              "config": {
                "index": "updated-index",
              },
              "name": "updated-connector",
            },
          },
        },
        "parameters": {
          "action_id": {
            "description": "An identifier for the action.",
            "in": "path",
            "name": "actionId",
            "required": true,
            "schema": {
              "example": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "type": "string",
            },
          },
          "connector_id": {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "connectorId",
            "required": true,
            "schema": {
              "example": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "responses": {
          "200_actions": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Unauthorized",
                      ],
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "message": {
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        401,
                      ],
                      "example": 401,
                      "type": "integer",
                    },
                  },
                  "title": "Unauthorized response",
                  "type": "object",
                },
              },
            },
            "description": "Authorization information is missing or invalid.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Not Found",
                      ],
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        404,
                      ],
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "title": "Not found response",
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "schemas": {
          "action_response_properties": {
            "description": "The properties vary depending on the action type.",
            "properties": {
              "actionTypeId": {
                "type": "string",
              },
              "config": {
                "type": "object",
              },
              "id": {
                "type": "string",
              },
              "isDeprecated": {
                "description": "Indicates whether the action type is deprecated.",
                "type": "boolean",
              },
              "isMissingSecrets": {
                "description": "Indicates whether secrets are missing for the action.",
                "type": "boolean",
              },
              "isPreconfigured": {
                "description": "Indicates whether it is a preconfigured action.",
                "type": "boolean",
              },
              "name": {
                "type": "string",
              },
            },
            "title": "Action response properties",
            "type": "object",
          },
          "config_properties_cases_webhook": {
            "description": "Defines properties for connectors when type is \`.cases-webhook\`.",
            "properties": {
              "createCommentJson": {
                "description": "A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is \`case.comment\`. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": {
                  "body": {
                    "[object Object]": null,
                  },
                },
                "type": "string",
              },
              "createCommentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to create a case comment in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createCommentUrl": {
                "description": "The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts setting\`, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment",
                "type": "string",
              },
              "createIncidentJson": {
                "description": "A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "createIncidentMethod": {
                "default": "post",
                "description": "The REST API HTTP request method to create a case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createIncidentResponseKey": {
                "description": "The JSON key in the create case response that contains the external case ID.",
                "type": "string",
              },
              "createIncidentUrl": {
                "description": "The REST API URL to create a case in the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
              "getIncidentResponseExternalTitleKey": {
                "description": "The JSON key in get case response that contains the external case title.",
                "type": "string",
              },
              "getIncidentUrl": {
                "description": "The REST API URL to get the case by ID from the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}",
                "type": "string",
              },
              "hasAuth": {
                "default": true,
                "description": "If true, a username and password for login type authentication must be provided.",
                "type": "boolean",
              },
              "headers": {
                "description": "A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
",
                "type": "string",
              },
              "updateIncidentJson": {
                "description": "The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "updateIncidentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to update the case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "updateIncidentUrl": {
                "description": "The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}",
                "type": "string",
              },
              "viewIncidentUrl": {
                "description": "The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
",
                "example": "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}",
                "type": "string",
              },
            },
            "required": [
              "createIncidentJson",
              "createIncidentResponseKey",
              "createIncidentUrl",
              "getIncidentResponseExternalTitleKey",
              "getIncidentUrl",
              "updateIncidentJson",
              "updateIncidentUrl",
              "viewIncidentUrl",
            ],
            "title": "Connector request properties for Webhook - Case Management connector",
            "type": "object",
          },
          "config_properties_email": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.email\`.",
            "title": "Connector request properties for an email connector",
            "type": "object",
          },
          "config_properties_index": {
            "description": "Defines properties for connectors when type is \`.index\`.",
            "properties": {
              "executionTimeField": {
                "default": null,
                "description": "Specifies a field that will contain the time the alert condition was detected.",
                "nullable": true,
                "type": "string",
              },
              "index": {
                "description": "The Elasticsearch index to be written to.",
                "type": "string",
              },
              "refresh": {
                "default": false,
                "description": "The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
",
                "type": "boolean",
              },
            },
            "required": [
              "index",
            ],
            "title": "Connector request properties for an index connector",
            "type": "object",
          },
          "config_properties_jira": {
            "description": "Defines properties for connectors when type is \`.jira\`.",
            "properties": {
              "apiUrl": {
                "description": "The Jira instance URL.",
                "type": "string",
              },
              "projectKey": {
                "description": "The Jira project key.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "projectKey",
            ],
            "title": "Connector request properties for a Jira connector",
            "type": "object",
          },
          "config_properties_opsgenie": {
            "description": "Defines properties for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiUrl": {
                "description": "The Opsgenie URL. For example, \`https://api.opsgenie.com\` or \`https://api.eu.opsgenie.com\`. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for an Opsgenie connector",
            "type": "object",
          },
          "config_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.pagerduty\`.",
            "title": "Connector request properties for a PagerDuty connector",
            "type": "object",
          },
          "config_properties_resilient": {
            "description": "Defines properties for connectors when type is \`.resilient\`.",
            "properties": {
              "apiUrl": {
                "description": "The IBM Resilient instance URL.",
                "type": "string",
              },
              "orgId": {
                "description": "The IBM Resilient organization ID.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "orgId",
            ],
            "title": "Connector request properties for a IBM Resilient connector",
            "type": "object",
          },
          "config_properties_servicenow": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "usesTableApi": {
                "default": true,
                "description": "Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to \`false\`, the Elastic application should be installed in ServiceNow.
",
                "type": "boolean",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_servicenow_itom": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_swimlane": {
            "description": "Defines properties for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiUrl": {
                "description": "The Swimlane instance URL.",
                "type": "string",
              },
              "appId": {
                "description": "The Swimlane application ID.",
                "type": "string",
              },
              "connectorType": {
                "description": "The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.",
                "enum": [
                  "all",
                  "alerts",
                  "cases",
                ],
                "type": "string",
              },
              "mappings": {
                "description": "The field mapping.",
                "properties": {
                  "alertIdConfig": {
                    "description": "Mapping for the alert ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Alert identifier mapping",
                    "type": "object",
                  },
                  "caseIdConfig": {
                    "description": "Mapping for the case ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case identifier mapping",
                    "type": "object",
                  },
                  "caseNameConfig": {
                    "description": "Mapping for the case name.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case name mapping",
                    "type": "object",
                  },
                  "commentsConfig": {
                    "description": "Mapping for the case comments.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case comment mapping",
                    "type": "object",
                  },
                  "descriptionConfig": {
                    "description": "Mapping for the case description.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case description mapping",
                    "type": "object",
                  },
                  "ruleNameConfig": {
                    "description": "Mapping for the name of the alert's rule.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Rule name mapping",
                    "type": "object",
                  },
                  "severityConfig": {
                    "description": "Mapping for the severity.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Severity mapping",
                    "type": "object",
                  },
                },
                "title": "Connector mappings properties for a Swimlane connector",
                "type": "object",
              },
            },
            "required": [
              "apiUrl",
              "appId",
              "connectorType",
            ],
            "title": "Connector request properties for a Swimlane connector",
            "type": "object",
          },
          "config_properties_tines": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.tines\`.",
            "title": "Connector request properties for a Tines connector",
            "type": "object",
          },
          "config_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.webhook\`.",
            "title": "Connector request properties for a Webhook connector",
            "type": "object",
          },
          "config_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.xmatters\`.",
            "title": "Connector request properties for a xMatters connector",
            "type": "object",
          },
          "connector_response_properties": {
            "description": "The properties vary depending on the connector type.",
            "discriminator": {
              "propertyName": "connector_type_id",
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/connector_response_properties_cases_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_email",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_index",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_jira",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_opsgenie",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_pagerduty",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_resilient",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_serverlog",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_itom",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_sir",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_api",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_swimlane",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_teams",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_tines",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_xmatters",
              },
            ],
            "title": "Connector response properties",
          },
          "connector_response_properties_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector request properties for a Webhook - Case Management connector",
            "type": "object",
          },
          "connector_response_properties_email": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an email connector",
            "type": "object",
          },
          "connector_response_properties_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an index connector",
            "type": "object",
          },
          "connector_response_properties_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Jira connector",
            "type": "object",
          },
          "connector_response_properties_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an Opsgenie connector",
            "type": "object",
          },
          "connector_response_properties_pagerduty": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a PagerDuty connector",
            "type": "object",
          },
          "connector_response_properties_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a IBM Resilient connector",
            "type": "object",
          },
          "connector_response_properties_serverlog": {
            "properties": {
              "config": {
                "nullable": true,
                "type": "object",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a server log connector",
            "type": "object",
          },
          "connector_response_properties_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITOM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_sir": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow SecOps connector",
            "type": "object",
          },
          "connector_response_properties_slack_api": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_slack_webhook": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Swimlane connector",
            "type": "object",
          },
          "connector_response_properties_teams": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Microsoft Teams connector",
            "type": "object",
          },
          "connector_response_properties_tines": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Tines connector",
            "type": "object",
          },
          "connector_response_properties_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Webhook connector",
            "type": "object",
          },
          "connector_response_properties_xmatters": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an xMatters connector",
            "type": "object",
          },
          "connector_types": {
            "description": "The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`, \`.opsgenie\`, or \`.server-log\`.",
            "enum": [
              ".cases-webhook",
              ".email",
              ".index",
              ".jira",
              ".opsgenie",
              ".pagerduty",
              ".resilient",
              ".servicenow",
              ".servicenow-itom",
              ".servicenow-sir",
              ".server-log",
              ".slack",
              ".swimlane",
              ".teams",
              ".tines",
              ".webhook",
              ".xmatters",
            ],
            "example": ".server-log",
            "title": "Connector types",
            "type": "string",
          },
          "create_connector_request_cases_webhook": {
            "description": "The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "example": ".cases-webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create Webhook - Case Managment connector request",
            "type": "object",
          },
          "create_connector_request_email": {
            "description": "The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "example": ".email",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_email",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create email connector request",
            "type": "object",
          },
          "create_connector_request_index": {
            "description": "The index connector indexes a document into Elasticsearch.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "example": ".index",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create index connector request",
            "type": "object",
          },
          "create_connector_request_jira": {
            "description": "The Jira connector uses the REST API v2 to create Jira issues.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "example": ".jira",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Jira connector request",
            "type": "object",
          },
          "create_connector_request_opsgenie": {
            "description": "The Opsgenie connector uses the Opsgenie alert API.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "example": ".opsgenie",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Opsgenie connector request",
            "type": "object",
          },
          "create_connector_request_pagerduty": {
            "description": "The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "example": ".pagerduty",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_pagerduty",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create PagerDuty connector request",
            "type": "object",
          },
          "create_connector_request_resilient": {
            "description": "The IBM Resilient connector uses the RESILIENT REST v2 to create IBM Resilient incidents.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "example": ".resilient",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create IBM Resilient connector request",
            "type": "object",
          },
          "create_connector_request_serverlog": {
            "description": "This connector writes an entry to the Kibana server log.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "example": ".server-log",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "name",
            ],
            "title": "Create server log connector request",
            "type": "object",
          },
          "create_connector_request_servicenow": {
            "description": "The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "example": ".servicenow",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITSM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_itom": {
            "description": "The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "example": ".servicenow-itom",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_sir": {
            "description": "The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "example": ".servicenow-sir",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow SecOps connector request",
            "type": "object",
          },
          "create_connector_request_slack_api": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "example": ".slack_api",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_slack_webhook": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "example": ".slack",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_swimlane": {
            "description": "The Swimlane connector uses the Swimlane REST API to create Swimlane records.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "example": ".swimlane",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Swimlane connector request",
            "type": "object",
          },
          "create_connector_request_teams": {
            "description": "The Microsoft Teams connector uses Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "example": ".teams",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_teams",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Microsoft Teams connector request",
            "type": "object",
          },
          "create_connector_request_tines": {
            "description": "The Tines connector uses Tines Webhook actions to send events via POST request.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "example": ".tines",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_tines",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Tines connector request",
            "type": "object",
          },
          "create_connector_request_webhook": {
            "description": "The Webhook connector uses axios to send a POST or PUT request to a web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "example": ".webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Webhook connector request",
            "type": "object",
          },
          "create_connector_request_xmatters": {
            "description": "The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "example": ".xmatters",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_xmatters",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create xMatters connector request",
            "type": "object",
          },
          "features": {
            "description": "The feature that uses the connector. Valid values are \`alerting\`, \`cases\`, \`uptime\`, and \`siem\`.
",
            "enum": [
              "alerting",
              "cases",
              "uptime",
              "siem",
            ],
            "type": "string",
          },
          "is_deprecated": {
            "description": "Indicates whether the connector type is deprecated.",
            "example": false,
            "type": "boolean",
          },
          "is_missing_secrets": {
            "description": "Indicates whether secrets are missing for the connector. Secrets configuration properties vary depending on the connector type.",
            "example": false,
            "type": "boolean",
          },
          "is_preconfigured": {
            "description": "Indicates whether it is a preconfigured connector. If true, the \`config\` and \`is_missing_secrets\` properties are omitted from the response.",
            "example": false,
            "type": "boolean",
          },
          "run_connector_params_documents": {
            "description": "Test an action that indexes a document into Elasticsearch.",
            "properties": {
              "documents": {
                "description": "The documents in JSON format for index connectors.",
                "items": {
                  "additionalProperties": true,
                  "type": "object",
                },
                "type": "array",
              },
            },
            "required": [
              "documents",
            ],
            "title": "Index connector parameters",
            "type": "object",
          },
          "run_connector_params_level_message": {
            "description": "Test an action that writes an entry to the Kibana server log.",
            "properties": {
              "level": {
                "default": "info",
                "description": "The log level of the message for server log connectors.",
                "enum": [
                  "debug",
                  "error",
                  "fatal",
                  "info",
                  "trace",
                  "warn",
                ],
                "type": "string",
              },
              "message": {
                "description": "The message for server log connectors.",
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "title": "Server log connector parameters",
            "type": "object",
          },
          "run_connector_subaction_addevent": {
            "description": "The \`addEvent\` subaction for ServiceNow ITOM connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "addEvent",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "additional_info": {
                    "description": "Additional information about the event.",
                    "type": "string",
                  },
                  "description": {
                    "description": "The details about the event.",
                    "type": "string",
                  },
                  "event_class": {
                    "description": "A specific instance of the source.",
                    "type": "string",
                  },
                  "message_key": {
                    "description": "All actions sharing this key are associated with the same ServiceNow alert. The default value is \`<rule ID>:<alert instance ID>\`.",
                    "type": "string",
                  },
                  "metric_name": {
                    "description": "The name of the metric.",
                    "type": "string",
                  },
                  "node": {
                    "description": "The host that the event was triggered for.",
                    "type": "string",
                  },
                  "resource": {
                    "description": "The name of the resource.",
                    "type": "string",
                  },
                  "severity": {
                    "description": "The severity of the event.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The name of the event source type.",
                    "type": "string",
                  },
                  "time_of_event": {
                    "description": "The time of the event.",
                    "type": "string",
                  },
                  "type": {
                    "description": "The type of event.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The addEvent subaction",
            "type": "object",
          },
          "run_connector_subaction_closealert": {
            "description": "The \`closeAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "closeAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie. The alias must match the value used when creating the alert.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                },
                "required": [
                  "alias",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The closeAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_createalert": {
            "description": "The \`createAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "createAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "actions": {
                    "description": "The custom actions available to the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie.",
                    "type": "string",
                  },
                  "description": {
                    "description": "A description that provides detailed information about the alert.",
                    "type": "string",
                  },
                  "details": {
                    "additionalProperties": true,
                    "description": "The custom properties of the alert.",
                    "example": {
                      "key1": "value1",
                      "key2": "value2",
                    },
                    "type": "object",
                  },
                  "entity": {
                    "description": "The domain of the alert. For example, the application or server name.",
                    "type": "string",
                  },
                  "message": {
                    "description": "The alert message.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "priority": {
                    "description": "The priority level for the alert.",
                    "enum": [
                      "P1",
                      "P2",
                      "P3",
                      "P4",
                      "P5",
                    ],
                    "type": "string",
                  },
                  "responders": {
                    "description": "The entities to receive notifications about the alert. If \`type\` is \`user\`, either \`id\` or \`username\` is required. If \`type\` is \`team\`, either \`id\` or \`name\` is required.
",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "The type of responders, in this case \`escalation\`.",
                          "enum": [
                            "escalation",
                            "schedule",
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "A valid email address for the user.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "tags": {
                    "description": "The tags for the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                  "visibleTo": {
                    "description": "The teams and users that the alert will be visible to without sending a notification. Only one of \`id\`, \`name\`, or \`username\` is required.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "Valid values are \`team\` and \`user\`.",
                          "enum": [
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "The user name. This property is required only when the \`type\` is \`user\`.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "type",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "message",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The createAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_fieldsbyissuetype": {
            "description": "The \`fieldsByIssueType\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "fieldsByIssueType",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue type identifier.",
                    "example": 10024,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The fieldsByIssueType subaction",
            "type": "object",
          },
          "run_connector_subaction_getchoices": {
            "description": "The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getChoices",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "fields": {
                    "description": "An array of fields.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "fields",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getChoices subaction",
            "type": "object",
          },
          "run_connector_subaction_getfields": {
            "description": "The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getFields",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The getFields subaction",
            "type": "object",
          },
          "run_connector_subaction_getincident": {
            "description": "The \`getIncident\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getIncident",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "externalId": {
                    "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "externalId",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getIncident subaction",
            "type": "object",
          },
          "run_connector_subaction_issue": {
            "description": "The \`issue\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issue",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issue subaction",
            "type": "object",
          },
          "run_connector_subaction_issues": {
            "description": "The \`issues\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issues",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "title": {
                    "description": "The title of the Jira issue.",
                    "type": "string",
                  },
                },
                "required": [
                  "title",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The issues subaction",
            "type": "object",
          },
          "run_connector_subaction_issuetypes": {
            "description": "The \`issueTypes\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issueTypes",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issueTypes subaction",
            "type": "object",
          },
          "run_connector_subaction_pushtoservice": {
            "description": "The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "pushToService",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "comments": {
                    "description": "Additional information that is sent to Jira, ServiceNow ITSM, ServiceNow SecOps, or Swimlane.",
                    "items": {
                      "properties": {
                        "comment": {
                          "description": "A comment related to the incident. For example, describe how to troubleshoot the issue.",
                          "type": "string",
                        },
                        "commentId": {
                          "description": "A unique identifier for the comment.",
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "incident": {
                    "description": "Information necessary to create or update a Jira, ServiceNow ITSM, ServiveNow SecOps, or Swimlane incident.",
                    "properties": {
                      "alertId": {
                        "description": "The alert identifier for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseId": {
                        "description": "The case identifier for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseName": {
                        "description": "The case name for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "category": {
                        "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_display": {
                        "description": "A descriptive label of the alert for correlation purposes for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_id": {
                        "description": "The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as \`{{ruleID}}:{{alert ID}}\` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of \`{{ruleID}}:{{alert ID}}\` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
",
                        "type": "string",
                      },
                      "description": {
                        "description": "The description of the incident for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
                        "type": "string",
                      },
                      "dest_ip": {
                        "description": "A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "externalId": {
                        "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
",
                        "type": "string",
                      },
                      "impact": {
                        "description": "The impact of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                      "issueType": {
                        "description": "The type of incident for Jira connectors. For example, 10006. To obtain the list of valid values, set \`subAction\` to \`issueTypes\`.",
                        "type": "integer",
                      },
                      "labels": {
                        "description": "The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "malware_hash": {
                        "description": "A list of malware hashes related to the security incident for ServiceNow SecOps connectors. The hashes are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "malware_url": {
                        "description": "A list of malware URLs related to the security incident for ServiceNow SecOps connectors. The URLs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                        "type": "string",
                      },
                      "parent": {
                        "description": "The ID or key of the parent issue for Jira connectors. Applies only to \`Sub-task\` types of issues.",
                        "type": "string",
                      },
                      "priority": {
                        "description": "The priority of the incident in Jira and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "ruleName": {
                        "description": "The rule name for Swimlane connectors.",
                        "type": "string",
                      },
                      "severity": {
                        "description": "The severity of the incident for ServiceNow ITSM and Swimlane connectors.",
                        "type": "string",
                      },
                      "short_description": {
                        "description": "A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "source_ip": {
                        "description": "A list of source IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "subcategory": {
                        "description": "The subcategory of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "summary": {
                        "description": "A summary of the incident for Jira connectors.",
                        "type": "string",
                      },
                      "title": {
                        "description": "A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "urgency": {
                        "description": "The urgency of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The pushToService subaction",
            "type": "object",
          },
          "secrets_properties_cases_webhook": {
            "properties": {
              "password": {
                "description": "The password for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
              "user": {
                "description": "The username for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for Webhook - Case Management connector",
            "type": "object",
          },
          "secrets_properties_email": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.email\`.",
            "title": "Connector secrets properties for an email connector",
            "type": "object",
          },
          "secrets_properties_jira": {
            "description": "Defines secrets for connectors when type is \`.jira\`.",
            "properties": {
              "apiToken": {
                "description": "The Jira API authentication token for HTTP basic authentication.",
                "type": "string",
              },
              "email": {
                "description": "The account email for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiToken",
              "email",
            ],
            "title": "Connector secrets properties for a Jira connector",
            "type": "object",
          },
          "secrets_properties_opsgenie": {
            "description": "Defines secrets for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiKey": {
                "description": "The Opsgenie API authentication key for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKey",
            ],
            "title": "Connector secrets properties for an Opsgenie connector",
            "type": "object",
          },
          "secrets_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.pagerduty\`.",
            "title": "Connector secrets properties for a PagerDuty connector",
            "type": "object",
          },
          "secrets_properties_resilient": {
            "description": "Defines secrets for connectors when type is \`.resilient\`.",
            "properties": {
              "apiKeyId": {
                "description": "The authentication key ID for HTTP Basic authentication.",
                "type": "string",
              },
              "apiKeySecret": {
                "description": "The authentication key secret for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKeyId",
              "apiKeySecret",
            ],
            "title": "Connector secrets properties for IBM Resilient connector",
            "type": "object",
          },
          "secrets_properties_servicenow": {
            "description": "Defines secrets for connectors when type is \`.servicenow\`, \`.servicenow-sir\`, or \`.servicenow-itom\`.",
            "properties": {
              "clientSecret": {
                "description": "The client secret assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "password": {
                "description": "The password for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
              "privateKey": {
                "description": "The RSA private key that you created for use in ServiceNow. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "privateKeyPassword": {
                "description": "The password for the RSA private key. This property is required when \`isOAuth\` is \`true\` and you set a password on your private key.",
                "type": "string",
              },
              "username": {
                "description": "The username for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors",
            "type": "object",
          },
          "secrets_properties_slack_api": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "token": {
                "description": "Slack bot user OAuth token.",
                "type": "string",
              },
            },
            "required": [
              "token",
            ],
            "title": "Connector secrets properties for a Web API Slack connector",
            "type": "object",
          },
          "secrets_properties_slack_webhook": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "webhookUrl": {
                "description": "Slack webhook url.",
                "type": "string",
              },
            },
            "required": [
              "webhookUrl",
            ],
            "title": "Connector secrets properties for a Webhook Slack connector",
            "type": "object",
          },
          "secrets_properties_swimlane": {
            "description": "Defines secrets for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiToken": {
                "description": "Swimlane API authentication token.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for a Swimlane connector",
            "type": "object",
          },
          "secrets_properties_teams": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.teams\`.",
            "title": "Connector secrets properties for a Microsoft Teams connector",
            "type": "object",
          },
          "secrets_properties_tines": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.tines\`.",
            "title": "Connector secrets properties for a Tines connector",
            "type": "object",
          },
          "secrets_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.webhook\`.",
            "title": "Connector secrets properties for a Webhook connector",
            "type": "object",
          },
          "secrets_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.xmatters\`.",
            "title": "Connector secrets properties for an xMatters connector",
            "type": "object",
          },
          "update_connector_request_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update Webhook - Case Managment connector request",
            "type": "object",
          },
          "update_connector_request_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update index connector request",
            "type": "object",
          },
          "update_connector_request_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Jira connector request",
            "type": "object",
          },
          "update_connector_request_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Opsgenie connector request",
            "type": "object",
          },
          "update_connector_request_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update IBM Resilient connector request",
            "type": "object",
          },
          "update_connector_request_serverlog": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "title": "Update server log connector request",
            "type": "object",
          },
          "update_connector_request_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update ServiceNow ITSM connector or ServiceNow SecOps request",
            "type": "object",
          },
          "update_connector_request_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "update_connector_request_slack_api": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_slack_webhook": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Swimlane connector request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Connectors Team",
        },
        "description": "OpenAPI schema for Connectors endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Connectors",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/actions": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connectors API instead.",
            "operationId": "legacyGetConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/action_response_properties",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create connector API instead.",
            "operationId": "legacyCreateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actionTypeId": {
                        "description": "The connector type identifier.",
                        "type": "string",
                      },
                      "config": {
                        "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The display name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
",
                        "type": "object",
                      },
                    },
                    "title": "Legacy create connector request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "legacyDeleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get connector API instead.",
            "operationId": "legacyGetConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update connector API instead.",
            "operationId": "legacyUpdateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "config": {
                        "description": "The new connector configuration. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The new name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The updated secrets configuration for the connector. Secrets properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "title": "Legacy update connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}/_execute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the run connector API instead.",
            "operationId": "legacyRunConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "description": "The parameters of the connector. Parameter properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Legacy run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "actionId": {
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector": {
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "deleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorResponse": {
                        "$ref": "#/components/examples/get_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnectorId",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A UUID v1 or v4 identifier for the connector. If you omit this parameter, an identifier is randomly generated.",
                "in": "path",
                "name": "connectorId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "updateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateIndexConnectorRequest": {
                      "$ref": "#/components/examples/update_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/update_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_swimlane",
                      },
                    ],
                    "title": "Update connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Bad Request",
                          "type": "string",
                        },
                        "message": {
                          "example": "error validating action type config: [index]: expected value of type [string] but got [undefined]",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 400,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a bad request.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}/_execute": {
          "post": {
            "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\` indices privileges.
",
            "operationId": "runConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "runIndexConnectorRequest": {
                      "$ref": "#/components/examples/run_index_connector_request",
                    },
                    "runJiraConnectorRequest": {
                      "$ref": "#/components/examples/run_jira_connector_request",
                    },
                    "runServerLogConnectorRequest": {
                      "$ref": "#/components/examples/run_server_log_connector_request",
                    },
                    "runServiceNowITOMConnectorRequest": {
                      "$ref": "#/components/examples/run_servicenow_itom_connector_request",
                    },
                    "runSwimlaneConnectorRequest": {
                      "$ref": "#/components/examples/run_swimlane_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/run_connector_params_documents",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_params_level_message",
                          },
                          {
                            "description": "Test an action that involves a subaction.",
                            "discriminator": {
                              "propertyName": "subAction",
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_addevent",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_closealert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_createalert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_fieldsbyissuetype",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getchoices",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getfields",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getincident",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issue",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issues",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issuetypes",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_pushtoservice",
                              },
                            ],
                            "title": "Subaction parameters",
                          },
                        ],
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "runIndexConnectorResponse": {
                        "$ref": "#/components/examples/run_index_connector_response",
                      },
                      "runJiraConnectorResponse": {
                        "$ref": "#/components/examples/run_jira_connector_response",
                      },
                      "runServerLogConnectorResponse": {
                        "$ref": "#/components/examples/run_server_log_connector_response",
                      },
                      "runServiceNowITOMConnectorResponse": {
                        "$ref": "#/components/examples/run_servicenow_itom_connector_response",
                      },
                      "runSwimlaneConnectorResponse": {
                        "$ref": "#/components/examples/run_swimlane_connector_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "connector_id": {
                          "description": "The identifier for the connector.",
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "enum": [
                            "error",
                            "ok",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "connector_id",
                        "status",
                      ],
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector_types": {
          "get": {
            "description": "You do not need any Kibana feature privileges to run this API.
",
            "operationId": "getConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
                "in": "query",
                "name": "feature_id",
                "schema": {
                  "$ref": "#/components/schemas/features",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorTypesResponse": {
                        "$ref": "#/components/examples/get_connector_types_response",
                      },
                    },
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_config": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "minimum_license_required": {
                            "description": "The license that is required to use the connector type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "example": "Index",
                            "type": "string",
                          },
                          "supported_feature_ids": {
                            "description": "The Kibana features that are supported by the connector type.",
                            "example": [
                              "alerting",
                              "uptime",
                              "siem",
                            ],
                            "items": {
                              "$ref": "#/components/schemas/features",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connectors": {
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorsResponse": {
                        "$ref": "#/components/examples/get_connectors_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "description": "The properties vary for each connector type.",
                        "properties": {
                          "config": {
                            "additionalProperties": true,
                            "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                            "nullable": true,
                            "type": "object",
                          },
                          "connector_type_id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "id": {
                            "description": "The identifier for the connector.",
                            "example": "b0766e10-d190-11ec-b04c-776c77d14fca",
                            "type": "string",
                          },
                          "is_deprecated": {
                            "$ref": "#/components/schemas/is_deprecated",
                          },
                          "is_missing_secrets": {
                            "$ref": "#/components/schemas/is_missing_secrets",
                          },
                          "is_preconfigured": {
                            "$ref": "#/components/schemas/is_preconfigured",
                          },
                          "name": {
                            "description": "The display name for the connector.",
                            "example": "my-connector",
                            "type": "string",
                          },
                          "referenced_by_count": {
                            "default": 0,
                            "description": "Indicates the number of saved objects that reference the connector. If \`is_preconfigured\` is true, this value is not calculated.",
                            "example": 2,
                            "type": "integer",
                          },
                        },
                        "required": [
                          "connector_type_id",
                          "id",
                          "is_deprecated",
                          "is_preconfigured",
                          "name",
                          "referenced_by_count",
                        ],
                        "title": "Get connectors response body properties",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/list_action_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connector types API instead.",
            "operationId": "legacyGetConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "type": "boolean",
                          },
                          "enabledInConfig": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "type": "boolean",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the connector type.",
                            "type": "string",
                          },
                          "minimumLicenseRequired": {
                            "description": "The license that is required to use the connector type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Legacy get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Connector APIs enable you to create and manage connectors.",
          "name": "connectors",
        },
      ],
    },
    "fileName": "openapi/connectors/bundled.yaml",
    "openApi": {
      "components": {
        "examples": {
          "create_index_connector_request": {
            "summary": "Create an index connector.",
            "value": {
              "config": {
                "index": "test-index",
              },
              "connector_type_id": ".index",
              "name": "my-connector",
            },
          },
          "create_index_connector_response": {
            "summary": "A new index connector.",
            "value": {
              "config": {
                "executionTimeField": null,
                "index": "test-index",
                "refresh": false,
              },
              "connector_type_id": ".index",
              "id": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my-connector",
            },
          },
          "get_connector_response": {
            "summary": "A list of connector types",
            "value": {
              "config": {},
              "connector_type_id": ".server-log",
              "id": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "is_deprecated": false,
              "is_missing_secrets": false,
              "is_preconfigured": false,
              "name": "my_server_log_connector",
            },
          },
          "get_connector_types_response": {
            "summary": "A list of connector types",
            "value": [
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".swimlane",
                "minimum_license_required": "gold",
                "name": "Swimlane",
                "supported_feature_ids": [
                  "alerting",
                  "cases",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".index",
                "minimum_license_required": "basic",
                "name": "Index",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                  "siem",
                ],
              },
              {
                "enabled": true,
                "enabled_in_config": true,
                "enabled_in_license": true,
                "id": ".server-log",
                "minimum_license_required": "basic",
                "name": "Server log",
                "supported_feature_ids": [
                  "alerting",
                  "uptime",
                ],
              },
            ],
          },
          "get_connectors_response": {
            "summary": "A list of connectors",
            "value": [
              {
                "connector_type_id": ".email",
                "id": "preconfigured-email-connector",
                "is_deprecated": false,
                "is_preconfigured": true,
                "name": "my-preconfigured-email-notification",
                "referenced_by_count": 0,
              },
              {
                "config": {
                  "executionTimeField": null,
                  "index": "test-index",
                  "refresh": false,
                },
                "connector_type_id": ".index",
                "id": "e07d0c80-8b8b-11ed-a780-3b746c987a81",
                "is_deprecated": false,
                "is_missing_secrets": false,
                "is_preconfigured": false,
                "name": "my-index-connector",
                "referenced_by_count": 2,
              },
            ],
          },
          "run_index_connector_request": {
            "summary": "Run an index connector.",
            "value": {
              "params": {
                "documents": [
                  {
                    "id": "my_doc_id",
                    "message": "hello, world",
                    "name": "my_doc_name",
                  },
                ],
              },
            },
          },
          "run_index_connector_response": {
            "summary": "Response from running an index connector.",
            "value": {
              "connector_id": "fd38c600-96a5-11ed-bb79-353b74189cba",
              "data": {
                "errors": false,
                "items": [
                  {
                    "create": {
                      "_id": "4JtvwYUBrcyxt2NnfW3y",
                      "_index": "my-index",
                      "_primary_term": 1,
                      "_seq_no": 0,
                      "_shards": {
                        "failed": 0,
                        "successful": 1,
                        "total": 2,
                      },
                      "_version": 1,
                      "result": "created",
                      "status": 201,
                    },
                  },
                ],
                "took": 135,
              },
              "status": "ok",
            },
          },
          "run_jira_connector_request": {
            "summary": "Run a Jira connector to retrieve the list of issue types.",
            "value": {
              "params": {
                "subAction": "issueTypes",
              },
            },
          },
          "run_jira_connector_response": {
            "summary": "Response from retrieving the list of issue types for a Jira connector.",
            "value": {
              "connector_id": "b3aad810-edbe-11ec-82d1-11348ecbf4a6",
              "data": [
                {
                  "id": 10024,
                  "name": "Improvement",
                },
                {
                  "id": 10006,
                  "name": "Task",
                },
                {
                  "id": 10007,
                  "name": "Sub-task",
                },
                {
                  "id": 10025,
                  "name": "New Feature",
                },
                {
                  "id": 10023,
                  "name": "Bug",
                },
                {
                  "id": 10000,
                  "name": "Epic",
                },
              ],
              "status": "ok",
            },
          },
          "run_server_log_connector_request": {
            "summary": "Run a server log connector.",
            "value": {
              "params": {
                "level": "warn",
                "message": "Test warning message.",
              },
            },
          },
          "run_server_log_connector_response": {
            "summary": "Response from running a server log connector.",
            "value": {
              "connector_id": "7fc7b9a0-ecc9-11ec-8736-e7d63118c907",
              "status": "ok",
            },
          },
          "run_servicenow_itom_connector_request": {
            "summary": "Run a ServiceNow ITOM connector to retrieve the list of choices.",
            "value": {
              "params": {
                "subAction": "getChoices",
                "subActionParams": {
                  "fields": [
                    "severity",
                    "urgency",
                  ],
                },
              },
            },
          },
          "run_servicenow_itom_connector_response": {
            "summary": "Response from retrieving the list of choices for a ServiceNow ITOM connector.",
            "value": {
              "connector_id": "9d9be270-2fd2-11ed-b0e0-87533c532698",
              "data": [
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Critical",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Major",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Minor",
                  "value": 3,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Warning",
                  "value": 4,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "OK",
                  "value": 5,
                },
                {
                  "dependent_value": "",
                  "element": "severity",
                  "label": "Clear",
                  "value": 0,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "1 - High",
                  "value": 1,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "2 - Medium",
                  "value": 2,
                },
                {
                  "dependent_value": "",
                  "element": "urgency",
                  "label": "3 - Low",
                  "value": 3,
                },
              ],
              "status": "ok",
            },
          },
          "run_swimlane_connector_request": {
            "summary": "Run a Swimlane connector to create an incident.",
            "value": {
              "params": {
                "subAction": "pushToService",
                "subActionParams": {
                  "comments": [
                    {
                      "comment": "A comment about the incident.",
                      "commentId": 1,
                    },
                  ],
                  "incident": {
                    "caseId": "1000",
                    "caseName": "Case name",
                    "description": "Description of the incident.",
                  },
                },
              },
            },
          },
          "run_swimlane_connector_response": {
            "summary": "Response from creating a Swimlane incident.",
            "value": {
              "connector_id": "a4746470-2f94-11ed-b0e0-87533c532698",
              "data": {
                "comments": [
                  {
                    "commentId": 1,
                    "pushedDate": "2022-09-08T16:52:27.865Z",
                  },
                ],
                "id": "aKPmBHWzmdRQtx6Mx",
                "pushedDate": "2022-09-08T16:52:27.866Z",
                "title": "TEST-457",
                "url": "https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx",
              },
              "status": "ok",
            },
          },
          "update_index_connector_request": {
            "summary": "Update an index connector.",
            "value": {
              "config": {
                "index": "updated-index",
              },
              "name": "updated-connector",
            },
          },
        },
        "parameters": {
          "action_id": {
            "description": "An identifier for the action.",
            "in": "path",
            "name": "actionId",
            "required": true,
            "schema": {
              "example": "c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad",
              "type": "string",
            },
          },
          "connector_id": {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "connectorId",
            "required": true,
            "schema": {
              "example": "df770e30-8b8b-11ed-a780-3b746c987a81",
              "type": "string",
            },
          },
          "kbn_xsrf": {
            "description": "Cross-site request forgery protection",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "type": "string",
            },
          },
          "space_id": {
            "description": "An identifier for the space. If \`/s/\` and the identifier are omitted from the path, the default space is used.",
            "in": "path",
            "name": "spaceId",
            "required": true,
            "schema": {
              "example": "default",
              "type": "string",
            },
          },
        },
        "responses": {
          "200_actions": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action_response_properties",
                },
              },
            },
            "description": "Indicates a successful call.",
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Unauthorized",
                      ],
                      "example": "Unauthorized",
                      "type": "string",
                    },
                    "message": {
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        401,
                      ],
                      "example": 401,
                      "type": "integer",
                    },
                  },
                  "title": "Unauthorized response",
                  "type": "object",
                },
              },
            },
            "description": "Authorization information is missing or invalid.",
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "enum": [
                        "Not Found",
                      ],
                      "example": "Not Found",
                      "type": "string",
                    },
                    "message": {
                      "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                      "type": "string",
                    },
                    "statusCode": {
                      "enum": [
                        404,
                      ],
                      "example": 404,
                      "type": "integer",
                    },
                  },
                  "title": "Not found response",
                  "type": "object",
                },
              },
            },
            "description": "Object is not found.",
          },
        },
        "schemas": {
          "action_response_properties": {
            "description": "The properties vary depending on the action type.",
            "properties": {
              "actionTypeId": {
                "type": "string",
              },
              "config": {
                "type": "object",
              },
              "id": {
                "type": "string",
              },
              "isDeprecated": {
                "description": "Indicates whether the action type is deprecated.",
                "type": "boolean",
              },
              "isMissingSecrets": {
                "description": "Indicates whether secrets are missing for the action.",
                "type": "boolean",
              },
              "isPreconfigured": {
                "description": "Indicates whether it is a preconfigured action.",
                "type": "boolean",
              },
              "name": {
                "type": "string",
              },
            },
            "title": "Action response properties",
            "type": "object",
          },
          "config_properties_cases_webhook": {
            "description": "Defines properties for connectors when type is \`.cases-webhook\`.",
            "properties": {
              "createCommentJson": {
                "description": "A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is \`case.comment\`. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": {
                  "body": {
                    "[object Object]": null,
                  },
                },
                "type": "string",
              },
              "createCommentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to create a case comment in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createCommentUrl": {
                "description": "The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts setting\`, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment",
                "type": "string",
              },
              "createIncidentJson": {
                "description": "A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "createIncidentMethod": {
                "default": "post",
                "description": "The REST API HTTP request method to create a case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "createIncidentResponseKey": {
                "description": "The JSON key in the create case response that contains the external case ID.",
                "type": "string",
              },
              "createIncidentUrl": {
                "description": "The REST API URL to create a case in the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
              "getIncidentResponseExternalTitleKey": {
                "description": "The JSON key in get case response that contains the external case title.",
                "type": "string",
              },
              "getIncidentUrl": {
                "description": "The REST API URL to get the case by ID from the third-party system. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}",
                "type": "string",
              },
              "hasAuth": {
                "default": true,
                "description": "If true, a username and password for login type authentication must be provided.",
                "type": "boolean",
              },
              "headers": {
                "description": "A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
",
                "type": "string",
              },
              "updateIncidentJson": {
                "description": "The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are \`case.title\` and \`case.description\`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, \`{{{case.title}}}\`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
",
                "example": {
                  "fields": {
                    "description": {
                      "[object Object]": null,
                    },
                    "labels": {
                      "[object Object]": null,
                    },
                    "summary": {
                      "[object Object]": null,
                    },
                  },
                },
                "type": "string",
              },
              "updateIncidentMethod": {
                "default": "put",
                "description": "The REST API HTTP request method to update the case in the third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
",
                "enum": [
                  "patch",
                  "post",
                  "put",
                ],
                "type": "string",
              },
              "updateIncidentUrl": {
                "description": "The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "example": "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}",
                "type": "string",
              },
              "viewIncidentUrl": {
                "description": "The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
",
                "example": "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}",
                "type": "string",
              },
            },
            "required": [
              "createIncidentJson",
              "createIncidentResponseKey",
              "createIncidentUrl",
              "getIncidentResponseExternalTitleKey",
              "getIncidentUrl",
              "updateIncidentJson",
              "updateIncidentUrl",
              "viewIncidentUrl",
            ],
            "title": "Connector request properties for Webhook - Case Management connector",
            "type": "object",
          },
          "config_properties_email": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.email\`.",
            "title": "Connector request properties for an email connector",
            "type": "object",
          },
          "config_properties_index": {
            "description": "Defines properties for connectors when type is \`.index\`.",
            "properties": {
              "executionTimeField": {
                "default": null,
                "description": "Specifies a field that will contain the time the alert condition was detected.",
                "nullable": true,
                "type": "string",
              },
              "index": {
                "description": "The Elasticsearch index to be written to.",
                "type": "string",
              },
              "refresh": {
                "default": false,
                "description": "The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
",
                "type": "boolean",
              },
            },
            "required": [
              "index",
            ],
            "title": "Connector request properties for an index connector",
            "type": "object",
          },
          "config_properties_jira": {
            "description": "Defines properties for connectors when type is \`.jira\`.",
            "properties": {
              "apiUrl": {
                "description": "The Jira instance URL.",
                "type": "string",
              },
              "projectKey": {
                "description": "The Jira project key.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "projectKey",
            ],
            "title": "Connector request properties for a Jira connector",
            "type": "object",
          },
          "config_properties_opsgenie": {
            "description": "Defines properties for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiUrl": {
                "description": "The Opsgenie URL. For example, \`https://api.opsgenie.com\` or \`https://api.eu.opsgenie.com\`. If you are using the \`xpack.actions.allowedHosts\` setting, add the hostname to the allowed hosts.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for an Opsgenie connector",
            "type": "object",
          },
          "config_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.pagerduty\`.",
            "title": "Connector request properties for a PagerDuty connector",
            "type": "object",
          },
          "config_properties_resilient": {
            "description": "Defines properties for connectors when type is \`.resilient\`.",
            "properties": {
              "apiUrl": {
                "description": "The IBM Resilient instance URL.",
                "type": "string",
              },
              "orgId": {
                "description": "The IBM Resilient organization ID.",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
              "orgId",
            ],
            "title": "Connector request properties for a IBM Resilient connector",
            "type": "object",
          },
          "config_properties_servicenow": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "usesTableApi": {
                "default": true,
                "description": "Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to \`false\`, the Elastic application should be installed in ServiceNow.
",
                "type": "boolean",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_servicenow_itom": {
            "description": "Defines properties for connectors when type is \`.servicenow\`.",
            "properties": {
              "apiUrl": {
                "description": "The ServiceNow instance URL.",
                "type": "string",
              },
              "clientId": {
                "description": "The client ID assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "isOAuth": {
                "default": false,
                "description": "The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
",
                "type": "boolean",
              },
              "jwtKeyId": {
                "description": "The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
              "userIdentifierValue": {
                "description": "The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is \`Email\`, the user identifier should be the user's email address. This property is required when \`isOAuth\` is \`true\`.
",
                "type": "string",
              },
            },
            "required": [
              "apiUrl",
            ],
            "title": "Connector request properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "config_properties_swimlane": {
            "description": "Defines properties for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiUrl": {
                "description": "The Swimlane instance URL.",
                "type": "string",
              },
              "appId": {
                "description": "The Swimlane application ID.",
                "type": "string",
              },
              "connectorType": {
                "description": "The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.",
                "enum": [
                  "all",
                  "alerts",
                  "cases",
                ],
                "type": "string",
              },
              "mappings": {
                "description": "The field mapping.",
                "properties": {
                  "alertIdConfig": {
                    "description": "Mapping for the alert ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Alert identifier mapping",
                    "type": "object",
                  },
                  "caseIdConfig": {
                    "description": "Mapping for the case ID.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case identifier mapping",
                    "type": "object",
                  },
                  "caseNameConfig": {
                    "description": "Mapping for the case name.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case name mapping",
                    "type": "object",
                  },
                  "commentsConfig": {
                    "description": "Mapping for the case comments.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case comment mapping",
                    "type": "object",
                  },
                  "descriptionConfig": {
                    "description": "Mapping for the case description.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Case description mapping",
                    "type": "object",
                  },
                  "ruleNameConfig": {
                    "description": "Mapping for the name of the alert's rule.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Rule name mapping",
                    "type": "object",
                  },
                  "severityConfig": {
                    "description": "Mapping for the severity.",
                    "properties": {
                      "fieldType": {
                        "description": "The type of field in Swimlane.",
                        "type": "string",
                      },
                      "id": {
                        "description": "The identifier for the field in Swimlane.",
                        "type": "string",
                      },
                      "key": {
                        "description": "The key for the field in Swimlane.",
                        "type": "string",
                      },
                      "name": {
                        "description": "The name of the field in Swimlane.",
                        "type": "string",
                      },
                    },
                    "required": [
                      "fieldType",
                      "id",
                      "key",
                      "name",
                    ],
                    "title": "Severity mapping",
                    "type": "object",
                  },
                },
                "title": "Connector mappings properties for a Swimlane connector",
                "type": "object",
              },
            },
            "required": [
              "apiUrl",
              "appId",
              "connectorType",
            ],
            "title": "Connector request properties for a Swimlane connector",
            "type": "object",
          },
          "config_properties_tines": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.tines\`.",
            "title": "Connector request properties for a Tines connector",
            "type": "object",
          },
          "config_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.webhook\`.",
            "title": "Connector request properties for a Webhook connector",
            "type": "object",
          },
          "config_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines properties for connectors when type is \`.xmatters\`.",
            "title": "Connector request properties for a xMatters connector",
            "type": "object",
          },
          "connector_response_properties": {
            "description": "The properties vary depending on the connector type.",
            "discriminator": {
              "propertyName": "connector_type_id",
            },
            "oneOf": [
              {
                "$ref": "#/components/schemas/connector_response_properties_cases_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_email",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_index",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_jira",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_opsgenie",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_pagerduty",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_resilient",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_serverlog",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_itom",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_servicenow_sir",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_api",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_slack_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_swimlane",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_teams",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_tines",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_webhook",
              },
              {
                "$ref": "#/components/schemas/connector_response_properties_xmatters",
              },
            ],
            "title": "Connector response properties",
          },
          "connector_response_properties_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector request properties for a Webhook - Case Management connector",
            "type": "object",
          },
          "connector_response_properties_email": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an email connector",
            "type": "object",
          },
          "connector_response_properties_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an index connector",
            "type": "object",
          },
          "connector_response_properties_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Jira connector",
            "type": "object",
          },
          "connector_response_properties_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an Opsgenie connector",
            "type": "object",
          },
          "connector_response_properties_pagerduty": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a PagerDuty connector",
            "type": "object",
          },
          "connector_response_properties_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a IBM Resilient connector",
            "type": "object",
          },
          "connector_response_properties_serverlog": {
            "properties": {
              "config": {
                "nullable": true,
                "type": "object",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a server log connector",
            "type": "object",
          },
          "connector_response_properties_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITSM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow ITOM connector",
            "type": "object",
          },
          "connector_response_properties_servicenow_sir": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a ServiceNow SecOps connector",
            "type": "object",
          },
          "connector_response_properties_slack_api": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_slack_webhook": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Slack connector",
            "type": "object",
          },
          "connector_response_properties_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Swimlane connector",
            "type": "object",
          },
          "connector_response_properties_teams": {
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Microsoft Teams connector",
            "type": "object",
          },
          "connector_response_properties_tines": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Tines connector",
            "type": "object",
          },
          "connector_response_properties_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for a Webhook connector",
            "type": "object",
          },
          "connector_response_properties_xmatters": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "type": "string",
              },
              "id": {
                "description": "The identifier for the connector.",
                "type": "string",
              },
              "is_deprecated": {
                "$ref": "#/components/schemas/is_deprecated",
              },
              "is_missing_secrets": {
                "$ref": "#/components/schemas/is_missing_secrets",
              },
              "is_preconfigured": {
                "$ref": "#/components/schemas/is_preconfigured",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "id",
              "is_deprecated",
              "is_preconfigured",
              "name",
            ],
            "title": "Connector response properties for an xMatters connector",
            "type": "object",
          },
          "connector_types": {
            "description": "The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`, \`.opsgenie\`, or \`.server-log\`.",
            "enum": [
              ".cases-webhook",
              ".email",
              ".index",
              ".jira",
              ".opsgenie",
              ".pagerduty",
              ".resilient",
              ".servicenow",
              ".servicenow-itom",
              ".servicenow-sir",
              ".server-log",
              ".slack",
              ".swimlane",
              ".teams",
              ".tines",
              ".webhook",
              ".xmatters",
            ],
            "example": ".server-log",
            "title": "Connector types",
            "type": "string",
          },
          "create_connector_request_cases_webhook": {
            "description": "The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".cases-webhook",
                ],
                "example": ".cases-webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create Webhook - Case Managment connector request",
            "type": "object",
          },
          "create_connector_request_email": {
            "description": "The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_email",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".email",
                ],
                "example": ".email",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_email",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create email connector request",
            "type": "object",
          },
          "create_connector_request_index": {
            "description": "The index connector indexes a document into Elasticsearch.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".index",
                ],
                "example": ".index",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
            ],
            "title": "Create index connector request",
            "type": "object",
          },
          "create_connector_request_jira": {
            "description": "The Jira connector uses the REST API v2 to create Jira issues.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".jira",
                ],
                "example": ".jira",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Jira connector request",
            "type": "object",
          },
          "create_connector_request_opsgenie": {
            "description": "The Opsgenie connector uses the Opsgenie alert API.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".opsgenie",
                ],
                "example": ".opsgenie",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Opsgenie connector request",
            "type": "object",
          },
          "create_connector_request_pagerduty": {
            "description": "The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_pagerduty",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".pagerduty",
                ],
                "example": ".pagerduty",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_pagerduty",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create PagerDuty connector request",
            "type": "object",
          },
          "create_connector_request_resilient": {
            "description": "The IBM Resilient connector uses the RESILIENT REST v2 to create IBM Resilient incidents.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".resilient",
                ],
                "example": ".resilient",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create IBM Resilient connector request",
            "type": "object",
          },
          "create_connector_request_serverlog": {
            "description": "This connector writes an entry to the Kibana server log.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".server-log",
                ],
                "example": ".server-log",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
            },
            "required": [
              "connector_type_id",
              "name",
            ],
            "title": "Create server log connector request",
            "type": "object",
          },
          "create_connector_request_servicenow": {
            "description": "The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow",
                ],
                "example": ".servicenow",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITSM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_itom": {
            "description": "The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-itom",
                ],
                "example": ".servicenow-itom",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "create_connector_request_servicenow_sir": {
            "description": "The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".servicenow-sir",
                ],
                "example": ".servicenow-sir",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow SecOps connector request",
            "type": "object",
          },
          "create_connector_request_slack_api": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack_api",
                ],
                "example": ".slack_api",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_slack_webhook": {
            "description": "The Slack connector uses Slack Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".slack",
                ],
                "example": ".slack",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Slack connector request",
            "type": "object",
          },
          "create_connector_request_swimlane": {
            "description": "The Swimlane connector uses the Swimlane REST API to create Swimlane records.",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".swimlane",
                ],
                "example": ".swimlane",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Swimlane connector request",
            "type": "object",
          },
          "create_connector_request_teams": {
            "description": "The Microsoft Teams connector uses Incoming Webhooks.",
            "properties": {
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".teams",
                ],
                "example": ".teams",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_teams",
              },
            },
            "required": [
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Microsoft Teams connector request",
            "type": "object",
          },
          "create_connector_request_tines": {
            "description": "The Tines connector uses Tines Webhook actions to send events via POST request.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_tines",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".tines",
                ],
                "example": ".tines",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_tines",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Tines connector request",
            "type": "object",
          },
          "create_connector_request_webhook": {
            "description": "The Webhook connector uses axios to send a POST or PUT request to a web service.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_webhook",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".webhook",
                ],
                "example": ".webhook",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_webhook",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create Webhook connector request",
            "type": "object",
          },
          "create_connector_request_xmatters": {
            "description": "The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
",
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_xmatters",
              },
              "connector_type_id": {
                "description": "The type of connector.",
                "enum": [
                  ".xmatters",
                ],
                "example": ".xmatters",
                "type": "string",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_xmatters",
              },
            },
            "required": [
              "config",
              "connector_type_id",
              "name",
              "secrets",
            ],
            "title": "Create xMatters connector request",
            "type": "object",
          },
          "features": {
            "description": "The feature that uses the connector. Valid values are \`alerting\`, \`cases\`, \`uptime\`, and \`siem\`.
",
            "enum": [
              "alerting",
              "cases",
              "uptime",
              "siem",
            ],
            "type": "string",
          },
          "is_deprecated": {
            "description": "Indicates whether the connector type is deprecated.",
            "example": false,
            "type": "boolean",
          },
          "is_missing_secrets": {
            "description": "Indicates whether secrets are missing for the connector. Secrets configuration properties vary depending on the connector type.",
            "example": false,
            "type": "boolean",
          },
          "is_preconfigured": {
            "description": "Indicates whether it is a preconfigured connector. If true, the \`config\` and \`is_missing_secrets\` properties are omitted from the response.",
            "example": false,
            "type": "boolean",
          },
          "run_connector_params_documents": {
            "description": "Test an action that indexes a document into Elasticsearch.",
            "properties": {
              "documents": {
                "description": "The documents in JSON format for index connectors.",
                "items": {
                  "additionalProperties": true,
                  "type": "object",
                },
                "type": "array",
              },
            },
            "required": [
              "documents",
            ],
            "title": "Index connector parameters",
            "type": "object",
          },
          "run_connector_params_level_message": {
            "description": "Test an action that writes an entry to the Kibana server log.",
            "properties": {
              "level": {
                "default": "info",
                "description": "The log level of the message for server log connectors.",
                "enum": [
                  "debug",
                  "error",
                  "fatal",
                  "info",
                  "trace",
                  "warn",
                ],
                "type": "string",
              },
              "message": {
                "description": "The message for server log connectors.",
                "type": "string",
              },
            },
            "required": [
              "message",
            ],
            "title": "Server log connector parameters",
            "type": "object",
          },
          "run_connector_subaction_addevent": {
            "description": "The \`addEvent\` subaction for ServiceNow ITOM connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "addEvent",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "additional_info": {
                    "description": "Additional information about the event.",
                    "type": "string",
                  },
                  "description": {
                    "description": "The details about the event.",
                    "type": "string",
                  },
                  "event_class": {
                    "description": "A specific instance of the source.",
                    "type": "string",
                  },
                  "message_key": {
                    "description": "All actions sharing this key are associated with the same ServiceNow alert. The default value is \`<rule ID>:<alert instance ID>\`.",
                    "type": "string",
                  },
                  "metric_name": {
                    "description": "The name of the metric.",
                    "type": "string",
                  },
                  "node": {
                    "description": "The host that the event was triggered for.",
                    "type": "string",
                  },
                  "resource": {
                    "description": "The name of the resource.",
                    "type": "string",
                  },
                  "severity": {
                    "description": "The severity of the event.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The name of the event source type.",
                    "type": "string",
                  },
                  "time_of_event": {
                    "description": "The time of the event.",
                    "type": "string",
                  },
                  "type": {
                    "description": "The type of event.",
                    "type": "string",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The addEvent subaction",
            "type": "object",
          },
          "run_connector_subaction_closealert": {
            "description": "The \`closeAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "closeAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie. The alias must match the value used when creating the alert.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                },
                "required": [
                  "alias",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The closeAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_createalert": {
            "description": "The \`createAlert\` subaction for Opsgenie connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "createAlert",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "actions": {
                    "description": "The custom actions available to the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "alias": {
                    "description": "The unique identifier used for alert deduplication in Opsgenie.",
                    "type": "string",
                  },
                  "description": {
                    "description": "A description that provides detailed information about the alert.",
                    "type": "string",
                  },
                  "details": {
                    "additionalProperties": true,
                    "description": "The custom properties of the alert.",
                    "example": {
                      "key1": "value1",
                      "key2": "value2",
                    },
                    "type": "object",
                  },
                  "entity": {
                    "description": "The domain of the alert. For example, the application or server name.",
                    "type": "string",
                  },
                  "message": {
                    "description": "The alert message.",
                    "type": "string",
                  },
                  "note": {
                    "description": "Additional information for the alert.",
                    "type": "string",
                  },
                  "priority": {
                    "description": "The priority level for the alert.",
                    "enum": [
                      "P1",
                      "P2",
                      "P3",
                      "P4",
                      "P5",
                    ],
                    "type": "string",
                  },
                  "responders": {
                    "description": "The entities to receive notifications about the alert. If \`type\` is \`user\`, either \`id\` or \`username\` is required. If \`type\` is \`team\`, either \`id\` or \`name\` is required.
",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "The type of responders, in this case \`escalation\`.",
                          "enum": [
                            "escalation",
                            "schedule",
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "A valid email address for the user.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "source": {
                    "description": "The display name for the source of the alert.",
                    "type": "string",
                  },
                  "tags": {
                    "description": "The tags for the alert.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                  "user": {
                    "description": "The display name for the owner.",
                    "type": "string",
                  },
                  "visibleTo": {
                    "description": "The teams and users that the alert will be visible to without sending a notification. Only one of \`id\`, \`name\`, or \`username\` is required.",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The identifier for the entity.",
                          "type": "string",
                        },
                        "name": {
                          "description": "The name of the entity.",
                          "type": "string",
                        },
                        "type": {
                          "description": "Valid values are \`team\` and \`user\`.",
                          "enum": [
                            "team",
                            "user",
                          ],
                          "type": "string",
                        },
                        "username": {
                          "description": "The user name. This property is required only when the \`type\` is \`user\`.",
                          "type": "string",
                        },
                      },
                      "required": [
                        "type",
                      ],
                      "type": "object",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "message",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The createAlert subaction",
            "type": "object",
          },
          "run_connector_subaction_fieldsbyissuetype": {
            "description": "The \`fieldsByIssueType\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "fieldsByIssueType",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue type identifier.",
                    "example": 10024,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The fieldsByIssueType subaction",
            "type": "object",
          },
          "run_connector_subaction_getchoices": {
            "description": "The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getChoices",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "fields": {
                    "description": "An array of fields.",
                    "items": {
                      "type": "string",
                    },
                    "type": "array",
                  },
                },
                "required": [
                  "fields",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getChoices subaction",
            "type": "object",
          },
          "run_connector_subaction_getfields": {
            "description": "The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getFields",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The getFields subaction",
            "type": "object",
          },
          "run_connector_subaction_getincident": {
            "description": "The \`getIncident\` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "getIncident",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "externalId": {
                    "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "externalId",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The getIncident subaction",
            "type": "object",
          },
          "run_connector_subaction_issue": {
            "description": "The \`issue\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issue",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "id": {
                    "description": "The Jira issue identifier.",
                    "example": 71778,
                    "type": "string",
                  },
                },
                "required": [
                  "id",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issue subaction",
            "type": "object",
          },
          "run_connector_subaction_issues": {
            "description": "The \`issues\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issues",
                ],
                "type": "string",
              },
              "subActionParams": {
                "properties": {
                  "title": {
                    "description": "The title of the Jira issue.",
                    "type": "string",
                  },
                },
                "required": [
                  "title",
                ],
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The issues subaction",
            "type": "object",
          },
          "run_connector_subaction_issuetypes": {
            "description": "The \`issueTypes\` subaction for Jira connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "issueTypes",
                ],
                "type": "string",
              },
            },
            "required": [
              "subAction",
            ],
            "title": "The issueTypes subaction",
            "type": "object",
          },
          "run_connector_subaction_pushtoservice": {
            "description": "The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
            "properties": {
              "subAction": {
                "description": "The action to test.",
                "enum": [
                  "pushToService",
                ],
                "type": "string",
              },
              "subActionParams": {
                "description": "The set of configuration properties for the action.",
                "properties": {
                  "comments": {
                    "description": "Additional information that is sent to Jira, ServiceNow ITSM, ServiceNow SecOps, or Swimlane.",
                    "items": {
                      "properties": {
                        "comment": {
                          "description": "A comment related to the incident. For example, describe how to troubleshoot the issue.",
                          "type": "string",
                        },
                        "commentId": {
                          "description": "A unique identifier for the comment.",
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                    "type": "array",
                  },
                  "incident": {
                    "description": "Information necessary to create or update a Jira, ServiceNow ITSM, ServiveNow SecOps, or Swimlane incident.",
                    "properties": {
                      "alertId": {
                        "description": "The alert identifier for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseId": {
                        "description": "The case identifier for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "caseName": {
                        "description": "The case name for the incident for Swimlane connectors.",
                        "type": "string",
                      },
                      "category": {
                        "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_display": {
                        "description": "A descriptive label of the alert for correlation purposes for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "correlation_id": {
                        "description": "The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as \`{{ruleID}}:{{alert ID}}\` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of \`{{ruleID}}:{{alert ID}}\` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
",
                        "type": "string",
                      },
                      "description": {
                        "description": "The description of the incident for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.",
                        "type": "string",
                      },
                      "dest_ip": {
                        "description": "A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "externalId": {
                        "description": "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
",
                        "type": "string",
                      },
                      "impact": {
                        "description": "The impact of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                      "issueType": {
                        "description": "The type of incident for Jira connectors. For example, 10006. To obtain the list of valid values, set \`subAction\` to \`issueTypes\`.",
                        "type": "integer",
                      },
                      "labels": {
                        "description": "The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
",
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                      "malware_hash": {
                        "description": "A list of malware hashes related to the security incident for ServiceNow SecOps connectors. The hashes are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "malware_url": {
                        "description": "A list of malware URLs related to the security incident for ServiceNow SecOps connectors. The URLs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                        "type": "string",
                      },
                      "parent": {
                        "description": "The ID or key of the parent issue for Jira connectors. Applies only to \`Sub-task\` types of issues.",
                        "type": "string",
                      },
                      "priority": {
                        "description": "The priority of the incident in Jira and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "ruleName": {
                        "description": "The rule name for Swimlane connectors.",
                        "type": "string",
                      },
                      "severity": {
                        "description": "The severity of the incident for ServiceNow ITSM and Swimlane connectors.",
                        "type": "string",
                      },
                      "short_description": {
                        "description": "A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "source_ip": {
                        "description": "A list of source IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.",
                        "oneOf": [
                          {
                            "type": "string",
                          },
                          {
                            "items": {
                              "type": "string",
                            },
                            "type": "array",
                          },
                        ],
                      },
                      "subcategory": {
                        "description": "The subcategory of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                        "type": "string",
                      },
                      "summary": {
                        "description": "A summary of the incident for Jira connectors.",
                        "type": "string",
                      },
                      "title": {
                        "description": "A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
",
                        "type": "string",
                      },
                      "urgency": {
                        "description": "The urgency of the incident for ServiceNow ITSM connectors.",
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
                "type": "object",
              },
            },
            "required": [
              "subAction",
              "subActionParams",
            ],
            "title": "The pushToService subaction",
            "type": "object",
          },
          "secrets_properties_cases_webhook": {
            "properties": {
              "password": {
                "description": "The password for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
              "user": {
                "description": "The username for HTTP basic authentication. If \`hasAuth\` is set to \`true\`, this property is required.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for Webhook - Case Management connector",
            "type": "object",
          },
          "secrets_properties_email": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.email\`.",
            "title": "Connector secrets properties for an email connector",
            "type": "object",
          },
          "secrets_properties_jira": {
            "description": "Defines secrets for connectors when type is \`.jira\`.",
            "properties": {
              "apiToken": {
                "description": "The Jira API authentication token for HTTP basic authentication.",
                "type": "string",
              },
              "email": {
                "description": "The account email for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiToken",
              "email",
            ],
            "title": "Connector secrets properties for a Jira connector",
            "type": "object",
          },
          "secrets_properties_opsgenie": {
            "description": "Defines secrets for connectors when type is \`.opsgenie\`.",
            "properties": {
              "apiKey": {
                "description": "The Opsgenie API authentication key for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKey",
            ],
            "title": "Connector secrets properties for an Opsgenie connector",
            "type": "object",
          },
          "secrets_properties_pagerduty": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.pagerduty\`.",
            "title": "Connector secrets properties for a PagerDuty connector",
            "type": "object",
          },
          "secrets_properties_resilient": {
            "description": "Defines secrets for connectors when type is \`.resilient\`.",
            "properties": {
              "apiKeyId": {
                "description": "The authentication key ID for HTTP Basic authentication.",
                "type": "string",
              },
              "apiKeySecret": {
                "description": "The authentication key secret for HTTP Basic authentication.",
                "type": "string",
              },
            },
            "required": [
              "apiKeyId",
              "apiKeySecret",
            ],
            "title": "Connector secrets properties for IBM Resilient connector",
            "type": "object",
          },
          "secrets_properties_servicenow": {
            "description": "Defines secrets for connectors when type is \`.servicenow\`, \`.servicenow-sir\`, or \`.servicenow-itom\`.",
            "properties": {
              "clientSecret": {
                "description": "The client secret assigned to your OAuth application. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "password": {
                "description": "The password for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
              "privateKey": {
                "description": "The RSA private key that you created for use in ServiceNow. This property is required when \`isOAuth\` is \`true\`.",
                "type": "string",
              },
              "privateKeyPassword": {
                "description": "The password for the RSA private key. This property is required when \`isOAuth\` is \`true\` and you set a password on your private key.",
                "type": "string",
              },
              "username": {
                "description": "The username for HTTP basic authentication. This property is required when \`isOAuth\` is \`false\`.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and ServiceNow SecOps connectors",
            "type": "object",
          },
          "secrets_properties_slack_api": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "token": {
                "description": "Slack bot user OAuth token.",
                "type": "string",
              },
            },
            "required": [
              "token",
            ],
            "title": "Connector secrets properties for a Web API Slack connector",
            "type": "object",
          },
          "secrets_properties_slack_webhook": {
            "description": "Defines secrets for connectors when type is \`.slack\`.",
            "properties": {
              "webhookUrl": {
                "description": "Slack webhook url.",
                "type": "string",
              },
            },
            "required": [
              "webhookUrl",
            ],
            "title": "Connector secrets properties for a Webhook Slack connector",
            "type": "object",
          },
          "secrets_properties_swimlane": {
            "description": "Defines secrets for connectors when type is \`.swimlane\`.",
            "properties": {
              "apiToken": {
                "description": "Swimlane API authentication token.",
                "type": "string",
              },
            },
            "title": "Connector secrets properties for a Swimlane connector",
            "type": "object",
          },
          "secrets_properties_teams": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.teams\`.",
            "title": "Connector secrets properties for a Microsoft Teams connector",
            "type": "object",
          },
          "secrets_properties_tines": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.tines\`.",
            "title": "Connector secrets properties for a Tines connector",
            "type": "object",
          },
          "secrets_properties_webhook": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.webhook\`.",
            "title": "Connector secrets properties for a Webhook connector",
            "type": "object",
          },
          "secrets_properties_xmatters": {
            "additionalProperties": true,
            "description": "Defines secrets for connectors when type is \`.xmatters\`.",
            "title": "Connector secrets properties for an xMatters connector",
            "type": "object",
          },
          "update_connector_request_cases_webhook": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_cases_webhook",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_cases_webhook",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update Webhook - Case Managment connector request",
            "type": "object",
          },
          "update_connector_request_index": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_index",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "config",
              "name",
            ],
            "title": "Update index connector request",
            "type": "object",
          },
          "update_connector_request_jira": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_jira",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_jira",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Jira connector request",
            "type": "object",
          },
          "update_connector_request_opsgenie": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_opsgenie",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_opsgenie",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Opsgenie connector request",
            "type": "object",
          },
          "update_connector_request_resilient": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_resilient",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_resilient",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update IBM Resilient connector request",
            "type": "object",
          },
          "update_connector_request_serverlog": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
            },
            "required": [
              "name",
            ],
            "title": "Update server log connector request",
            "type": "object",
          },
          "update_connector_request_servicenow": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update ServiceNow ITSM connector or ServiceNow SecOps request",
            "type": "object",
          },
          "update_connector_request_servicenow_itom": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_servicenow_itom",
              },
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_servicenow",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Create ServiceNow ITOM connector request",
            "type": "object",
          },
          "update_connector_request_slack_api": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_api",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_slack_webhook": {
            "properties": {
              "name": {
                "description": "The display name for the connector.",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_slack_webhook",
                "description": "The secrets object containing the necessary fields for authentication.",
                "type": "object",
              },
            },
            "required": [
              "name",
              "secrets",
            ],
            "title": "Update Slack connector request",
            "type": "object",
          },
          "update_connector_request_swimlane": {
            "properties": {
              "config": {
                "$ref": "#/components/schemas/config_properties_swimlane",
              },
              "name": {
                "description": "The display name for the connector.",
                "example": "my-connector",
                "type": "string",
              },
              "secrets": {
                "$ref": "#/components/schemas/secrets_properties_swimlane",
              },
            },
            "required": [
              "config",
              "name",
              "secrets",
            ],
            "title": "Update Swimlane connector request",
            "type": "object",
          },
        },
        "securitySchemes": {
          "apiKeyAuth": {
            "in": "header",
            "name": "ApiKey",
            "type": "apiKey",
          },
          "basicAuth": {
            "scheme": "basic",
            "type": "http",
          },
        },
      },
      "info": {
        "contact": {
          "name": "Connectors Team",
        },
        "description": "OpenAPI schema for Connectors endpoints",
        "license": {
          "name": "Elastic License 2.0",
          "url": "https://www.elastic.co/licensing/elastic-license",
        },
        "title": "Connectors",
        "version": "0.1",
      },
      "openapi": "3.0.1",
      "paths": {
        "/s/{spaceId}/api/actions": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connectors API instead.",
            "operationId": "legacyGetConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "items": {
                        "$ref": "#/components/schemas/action_response_properties",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the create connector API instead.",
            "operationId": "legacyCreateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "actionTypeId": {
                        "description": "The connector type identifier.",
                        "type": "string",
                      },
                      "config": {
                        "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The display name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
",
                        "type": "object",
                      },
                    },
                    "title": "Legacy create connector request properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}": {
          "delete": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "legacyDeleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get connector API instead.",
            "operationId": "legacyGetConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the update connector API instead.",
            "operationId": "legacyUpdateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "config": {
                        "description": "The new connector configuration. Configuration properties vary depending on the connector type.",
                        "type": "object",
                      },
                      "name": {
                        "description": "The new name for the connector.",
                        "type": "string",
                      },
                      "secrets": {
                        "description": "The updated secrets configuration for the connector. Secrets properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "title": "Legacy update connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "$ref": "#/components/responses/200_actions",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/action/{actionId}/_execute": {
          "post": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the run connector API instead.",
            "operationId": "legacyRunConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/action_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "description": "The parameters of the connector. Parameter properties vary depending on the connector type.",
                        "type": "object",
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Legacy run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "actionId": {
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "type": "string",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector": {
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}": {
          "delete": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
",
            "operationId": "deleteConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "204": {
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Deletes a connector.",
            "tags": [
              "connectors",
            ],
          },
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorResponse": {
                        "$ref": "#/components/examples/get_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Not Found",
                          "type": "string",
                        },
                        "message": {
                          "example": "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 404,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Object is not found.",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a connector by ID.",
            "tags": [
              "connectors",
            ],
          },
          "post": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "createConnectorId",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A UUID v1 or v4 identifier for the connector. If you omit this parameter, an identifier is randomly generated.",
                "in": "path",
                "name": "connectorId",
                "required": true,
                "schema": {
                  "example": "ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74",
                  "type": "string",
                },
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "createIndexConnectorRequest": {
                      "$ref": "#/components/examples/create_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "discriminator": {
                      "propertyName": "connector_type_id",
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/create_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_email",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_pagerduty",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_servicenow_sir",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_swimlane",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_teams",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_tines",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/create_connector_request_xmatters",
                      },
                    ],
                    "title": "Create connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "createIndexConnectorResponse": {
                        "$ref": "#/components/examples/create_index_connector_response",
                      },
                    },
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Creates a connector.",
            "tags": [
              "connectors",
            ],
          },
          "put": {
            "description": "You must have \`all\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "updateConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "updateIndexConnectorRequest": {
                      "$ref": "#/components/examples/update_index_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/update_connector_request_cases_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_index",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_jira",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_opsgenie",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_resilient",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_serverlog",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_servicenow_itom",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_api",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_slack_webhook",
                      },
                      {
                        "$ref": "#/components/schemas/update_connector_request_swimlane",
                      },
                    ],
                    "title": "Update connector request body properties",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/connector_response_properties",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                        "error": {
                          "example": "Bad Request",
                          "type": "string",
                        },
                        "message": {
                          "example": "error validating action type config: [index]: expected value of type [string] but got [undefined]",
                          "type": "string",
                        },
                        "statusCode": {
                          "example": 400,
                          "type": "integer",
                        },
                      },
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a bad request.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
              "404": {
                "$ref": "#/components/responses/404",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Updates the attributes for a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector/{connectorId}/_execute": {
          "post": {
            "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\` indices privileges.
",
            "operationId": "runConnector",
            "parameters": [
              {
                "$ref": "#/components/parameters/kbn_xsrf",
              },
              {
                "$ref": "#/components/parameters/connector_id",
              },
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "requestBody": {
              "content": {
                "application/json": {
                  "examples": {
                    "runIndexConnectorRequest": {
                      "$ref": "#/components/examples/run_index_connector_request",
                    },
                    "runJiraConnectorRequest": {
                      "$ref": "#/components/examples/run_jira_connector_request",
                    },
                    "runServerLogConnectorRequest": {
                      "$ref": "#/components/examples/run_server_log_connector_request",
                    },
                    "runServiceNowITOMConnectorRequest": {
                      "$ref": "#/components/examples/run_servicenow_itom_connector_request",
                    },
                    "runSwimlaneConnectorRequest": {
                      "$ref": "#/components/examples/run_swimlane_connector_request",
                    },
                  },
                  "schema": {
                    "description": "The properties vary depending on the connector type.",
                    "properties": {
                      "params": {
                        "oneOf": [
                          {
                            "$ref": "#/components/schemas/run_connector_params_documents",
                          },
                          {
                            "$ref": "#/components/schemas/run_connector_params_level_message",
                          },
                          {
                            "description": "Test an action that involves a subaction.",
                            "discriminator": {
                              "propertyName": "subAction",
                            },
                            "oneOf": [
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_addevent",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_closealert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_createalert",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_fieldsbyissuetype",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getchoices",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getfields",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_getincident",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issue",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issues",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_issuetypes",
                              },
                              {
                                "$ref": "#/components/schemas/run_connector_subaction_pushtoservice",
                              },
                            ],
                            "title": "Subaction parameters",
                          },
                        ],
                      },
                    },
                    "required": [
                      "params",
                    ],
                    "title": "Run connector request body properties",
                    "type": "object",
                  },
                },
              },
              "required": true,
            },
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "runIndexConnectorResponse": {
                        "$ref": "#/components/examples/run_index_connector_response",
                      },
                      "runJiraConnectorResponse": {
                        "$ref": "#/components/examples/run_jira_connector_response",
                      },
                      "runServerLogConnectorResponse": {
                        "$ref": "#/components/examples/run_server_log_connector_response",
                      },
                      "runServiceNowITOMConnectorResponse": {
                        "$ref": "#/components/examples/run_servicenow_itom_connector_response",
                      },
                      "runSwimlaneConnectorResponse": {
                        "$ref": "#/components/examples/run_swimlane_connector_response",
                      },
                    },
                    "schema": {
                      "properties": {
                        "connector_id": {
                          "description": "The identifier for the connector.",
                          "type": "string",
                        },
                        "data": {
                          "oneOf": [
                            {
                              "additionalProperties": true,
                              "description": "Information returned from the action.",
                              "type": "object",
                            },
                            {
                              "description": "An array of information returned from the action.",
                              "items": {
                                "type": "object",
                              },
                              "type": "array",
                            },
                          ],
                        },
                        "status": {
                          "description": "The status of the action.",
                          "enum": [
                            "error",
                            "ok",
                          ],
                          "type": "string",
                        },
                      },
                      "required": [
                        "connector_id",
                        "status",
                      ],
                      "type": "object",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Runs a connector.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connector_types": {
          "get": {
            "description": "You do not need any Kibana feature privileges to run this API.
",
            "operationId": "getConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
              {
                "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
                "in": "query",
                "name": "feature_id",
                "schema": {
                  "$ref": "#/components/schemas/features",
                },
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorTypesResponse": {
                        "$ref": "#/components/examples/get_connector_types_response",
                      },
                    },
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_config": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "example": true,
                            "type": "boolean",
                          },
                          "enabled_in_license": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "minimum_license_required": {
                            "description": "The license that is required to use the connector type.",
                            "example": "basic",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "example": "Index",
                            "type": "string",
                          },
                          "supported_feature_ids": {
                            "description": "The Kibana features that are supported by the connector type.",
                            "example": [
                              "alerting",
                              "uptime",
                              "siem",
                            ],
                            "items": {
                              "$ref": "#/components/schemas/features",
                            },
                            "type": "array",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/connectors": {
          "get": {
            "description": "You must have \`read\` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
",
            "operationId": "getConnectors",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "examples": {
                      "getConnectorsResponse": {
                        "$ref": "#/components/examples/get_connectors_response",
                      },
                    },
                    "schema": {
                      "items": {
                        "description": "The properties vary for each connector type.",
                        "properties": {
                          "config": {
                            "additionalProperties": true,
                            "description": "The configuration for the connector. Configuration properties vary depending on the connector type.",
                            "nullable": true,
                            "type": "object",
                          },
                          "connector_type_id": {
                            "$ref": "#/components/schemas/connector_types",
                          },
                          "id": {
                            "description": "The identifier for the connector.",
                            "example": "b0766e10-d190-11ec-b04c-776c77d14fca",
                            "type": "string",
                          },
                          "is_deprecated": {
                            "$ref": "#/components/schemas/is_deprecated",
                          },
                          "is_missing_secrets": {
                            "$ref": "#/components/schemas/is_missing_secrets",
                          },
                          "is_preconfigured": {
                            "$ref": "#/components/schemas/is_preconfigured",
                          },
                          "name": {
                            "description": "The display name for the connector.",
                            "example": "my-connector",
                            "type": "string",
                          },
                          "referenced_by_count": {
                            "default": 0,
                            "description": "Indicates the number of saved objects that reference the connector. If \`is_preconfigured\` is true, this value is not calculated.",
                            "example": 2,
                            "type": "integer",
                          },
                        },
                        "required": [
                          "connector_type_id",
                          "id",
                          "is_deprecated",
                          "is_preconfigured",
                          "name",
                          "referenced_by_count",
                        ],
                        "title": "Get connectors response body properties",
                        "type": "object",
                      },
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves all connectors.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
        "/s/{spaceId}/api/actions/list_action_types": {
          "get": {
            "deprecated": true,
            "description": "Deprecated in 7.13.0. Use the get all connector types API instead.",
            "operationId": "legacyGetConnectorTypes",
            "parameters": [
              {
                "$ref": "#/components/parameters/space_id",
              },
            ],
            "responses": {
              "200": {
                "content": {
                  "application/json": {
                    "schema": {
                      "description": "The properties vary for each connector type.",
                      "items": {
                        "properties": {
                          "enabled": {
                            "description": "Indicates whether the connector type is enabled in Kibana.",
                            "type": "boolean",
                          },
                          "enabledInConfig": {
                            "description": "Indicates whether the connector type is enabled in the Kibana \`.yml\` file.",
                            "type": "boolean",
                          },
                          "enabledInLicense": {
                            "description": "Indicates whether the connector is enabled in the license.",
                            "example": true,
                            "type": "boolean",
                          },
                          "id": {
                            "description": "The unique identifier for the connector type.",
                            "type": "string",
                          },
                          "minimumLicenseRequired": {
                            "description": "The license that is required to use the connector type.",
                            "type": "string",
                          },
                          "name": {
                            "description": "The name of the connector type.",
                            "type": "string",
                          },
                        },
                        "type": "object",
                      },
                      "title": "Legacy get connector types response body properties",
                      "type": "array",
                    },
                  },
                },
                "description": "Indicates a successful call.",
              },
              "401": {
                "$ref": "#/components/responses/401",
              },
            },
            "servers": [
              {
                "url": "https://localhost:5601",
              },
            ],
            "summary": "Retrieves a list of all connector types.",
            "tags": [
              "connectors",
            ],
          },
          "servers": [
            {
              "url": "https://localhost:5601",
            },
          ],
        },
      },
      "security": [
        {
          "basicAuth": [],
        },
        {
          "apiKeyAuth": [],
        },
      ],
      "servers": [
        {
          "description": "local",
          "url": "http://localhost:5601",
        },
      ],
      "tags": [
        {
          "description": "Connector APIs enable you to create and manage connectors.",
          "name": "connectors",
        },
      ],
    },
    "yaml": "openapi: 3.0.1
info:
  title: Connectors
  description: OpenAPI schema for Connectors endpoints
  version: \\"0.1\\"
  contact:
    name: Connectors Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
tags:
  - name: connectors
    description: Connector APIs enable you to create and manage connectors.
servers:
  - url: http://localhost:5601
    description: local
paths:
  \\"/s/{spaceId}/api/actions/connector\\":
    post:
      summary: Creates a connector.
      operationId: createConnector
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Create connector request body properties
              description: The properties vary depending on the connector type.
              oneOf:
                - $ref: \\"#/components/schemas/create_connector_request_cases_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_email\\"
                - $ref: \\"#/components/schemas/create_connector_request_index\\"
                - $ref: \\"#/components/schemas/create_connector_request_jira\\"
                - $ref: \\"#/components/schemas/create_connector_request_opsgenie\\"
                - $ref: \\"#/components/schemas/create_connector_request_pagerduty\\"
                - $ref: \\"#/components/schemas/create_connector_request_resilient\\"
                - $ref: \\"#/components/schemas/create_connector_request_serverlog\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_itom\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_sir\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_api\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_swimlane\\"
                - $ref: \\"#/components/schemas/create_connector_request_teams\\"
                - $ref: \\"#/components/schemas/create_connector_request_tines\\"
                - $ref: \\"#/components/schemas/create_connector_request_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_xmatters\\"
              discriminator:
                propertyName: connector_type_id
            examples:
              createIndexConnectorRequest:
                $ref: \\"#/components/examples/create_index_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
              examples:
                createIndexConnectorResponse:
                  $ref: \\"#/components/examples/create_index_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connector/{connectorId}\\":
    get:
      summary: Retrieves a connector by ID.
      operationId: getConnector
      description: >
        You must have \`read\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
              examples:
                getConnectorResponse:
                  $ref: \\"#/components/examples/get_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found
                  statusCode:
                    type: integer
                    example: 404
      servers:
        - url: https://localhost:5601
    delete:
      summary: Deletes a connector.
      operationId: deleteConnector
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
        WARNING: When you delete a connector, it cannot be recovered.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
        \\"404\\":
          description: Object is not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found
                  statusCode:
                    type: integer
                    example: 404
      servers:
        - url: https://localhost:5601
    post:
      summary: Creates a connector.
      operationId: createConnectorId
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
        - in: path
          name: connectorId
          description: A UUID v1 or v4 identifier for the connector. If you omit this
            parameter, an identifier is randomly generated.
          required: true
          schema:
            type: string
            example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Create connector request body properties
              description: The properties vary depending on the connector type.
              oneOf:
                - $ref: \\"#/components/schemas/create_connector_request_cases_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_email\\"
                - $ref: \\"#/components/schemas/create_connector_request_index\\"
                - $ref: \\"#/components/schemas/create_connector_request_jira\\"
                - $ref: \\"#/components/schemas/create_connector_request_opsgenie\\"
                - $ref: \\"#/components/schemas/create_connector_request_pagerduty\\"
                - $ref: \\"#/components/schemas/create_connector_request_resilient\\"
                - $ref: \\"#/components/schemas/create_connector_request_serverlog\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_itom\\"
                - $ref: \\"#/components/schemas/create_connector_request_servicenow_sir\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_api\\"
                - $ref: \\"#/components/schemas/create_connector_request_slack_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_swimlane\\"
                - $ref: \\"#/components/schemas/create_connector_request_teams\\"
                - $ref: \\"#/components/schemas/create_connector_request_tines\\"
                - $ref: \\"#/components/schemas/create_connector_request_webhook\\"
                - $ref: \\"#/components/schemas/create_connector_request_xmatters\\"
              discriminator:
                propertyName: connector_type_id
            examples:
              createIndexConnectorRequest:
                $ref: \\"#/components/examples/create_index_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
              examples:
                createIndexConnectorResponse:
                  $ref: \\"#/components/examples/create_index_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for a connector.
      operationId: updateConnector
      description: >
        You must have \`all\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Update connector request body properties
              description: The properties vary depending on the connector type.
              oneOf:
                - $ref: \\"#/components/schemas/update_connector_request_cases_webhook\\"
                - $ref: \\"#/components/schemas/update_connector_request_index\\"
                - $ref: \\"#/components/schemas/update_connector_request_jira\\"
                - $ref: \\"#/components/schemas/update_connector_request_opsgenie\\"
                - $ref: \\"#/components/schemas/update_connector_request_resilient\\"
                - $ref: \\"#/components/schemas/update_connector_request_serverlog\\"
                - $ref: \\"#/components/schemas/update_connector_request_servicenow\\"
                - $ref: \\"#/components/schemas/update_connector_request_servicenow_itom\\"
                - $ref: \\"#/components/schemas/update_connector_request_slack_api\\"
                - $ref: \\"#/components/schemas/update_connector_request_slack_webhook\\"
                - $ref: \\"#/components/schemas/update_connector_request_swimlane\\"
            examples:
              updateIndexConnectorRequest:
                $ref: \\"#/components/examples/update_index_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: \\"#/components/schemas/connector_response_properties\\"
        \\"400\\":
          description: Indicates a bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: \\"error validating action type config: [index]: expected value of type
                      [string] but got [undefined]\\"
                  statusCode:
                    type: integer
                    example: 400
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
        \\"404\\":
          $ref: \\"#/components/responses/404\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connectors\\":
    get:
      summary: Retrieves all connectors.
      operationId: getConnectors
      description: >
        You must have \`read\` privileges for the **Actions and Connectors**
        feature in the **Management** section of the Kibana feature privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Get connectors response body properties
                  description: The properties vary for each connector type.
                  type: object
                  required:
                    - connector_type_id
                    - id
                    - is_deprecated
                    - is_preconfigured
                    - name
                    - referenced_by_count
                  properties:
                    connector_type_id:
                      $ref: \\"#/components/schemas/connector_types\\"
                    config:
                      type: object
                      description: The configuration for the connector. Configuration properties vary
                        depending on the connector type.
                      additionalProperties: true
                      nullable: true
                    id:
                      type: string
                      description: The identifier for the connector.
                      example: b0766e10-d190-11ec-b04c-776c77d14fca
                    is_deprecated:
                      $ref: \\"#/components/schemas/is_deprecated\\"
                    is_missing_secrets:
                      $ref: \\"#/components/schemas/is_missing_secrets\\"
                    is_preconfigured:
                      $ref: \\"#/components/schemas/is_preconfigured\\"
                    name:
                      type: string
                      description: The display name for the connector.
                      example: my-connector
                    referenced_by_count:
                      type: integer
                      description: Indicates the number of saved objects that reference the connector.
                        If \`is_preconfigured\` is true, this value is not
                        calculated.
                      example: 2
                      default: 0
              examples:
                getConnectorsResponse:
                  $ref: \\"#/components/examples/get_connectors_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connector_types\\":
    get:
      summary: Retrieves a list of all connector types.
      operationId: getConnectorTypes
      description: |
        You do not need any Kibana feature privileges to run this API.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
        - in: query
          name: feature_id
          description: A filter to limit the retrieved connector types to those that
            support a specific feature (such as alerting or cases).
          schema:
            $ref: \\"#/components/schemas/features\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                title: Get connector types response body properties
                description: The properties vary for each connector type.
                type: array
                items:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      description: Indicates whether the connector type is enabled in Kibana.
                      example: true
                    enabled_in_config:
                      type: boolean
                      description: Indicates whether the connector type is enabled in the Kibana
                        \`.yml\` file.
                      example: true
                    enabled_in_license:
                      type: boolean
                      description: Indicates whether the connector is enabled in the license.
                      example: true
                    id:
                      $ref: \\"#/components/schemas/connector_types\\"
                    minimum_license_required:
                      type: string
                      description: The license that is required to use the connector type.
                      example: basic
                    name:
                      type: string
                      description: The name of the connector type.
                      example: Index
                    supported_feature_ids:
                      type: array
                      description: The Kibana features that are supported by the connector type.
                      items:
                        $ref: \\"#/components/schemas/features\\"
                      example:
                        - alerting
                        - uptime
                        - siem
              examples:
                getConnectorTypesResponse:
                  $ref: \\"#/components/examples/get_connector_types_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/connector/{connectorId}/_execute\\":
    post:
      summary: Runs a connector.
      operationId: runConnector
      description: >
        You can use this API to test an action that involves interaction with
        Kibana services or integrations with third-party systems. You must have
        \`read\` privileges for the **Actions and Connectors** feature in the
        **Management** section of the Kibana feature privileges. If you use an
        index connector, you must also have \`all\`, \`create\`, \`index\`, or \`write\`
        indices privileges.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/connector_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Run connector request body properties
              description: The properties vary depending on the connector type.
              type: object
              required:
                - params
              properties:
                params:
                  oneOf:
                    - $ref: \\"#/components/schemas/run_connector_params_documents\\"
                    - $ref: \\"#/components/schemas/run_connector_params_level_message\\"
                    - title: Subaction parameters
                      description: Test an action that involves a subaction.
                      oneOf:
                        - $ref: \\"#/components/schemas/run_connector_subaction_addevent\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_closealert\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_createalert\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_fieldsbyissuetype\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_getchoices\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_getfields\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_getincident\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_issue\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_issues\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_issuetypes\\"
                        - $ref: \\"#/components/schemas/run_connector_subaction_pushtoservice\\"
                      discriminator:
                        propertyName: subAction
            examples:
              runIndexConnectorRequest:
                $ref: \\"#/components/examples/run_index_connector_request\\"
              runJiraConnectorRequest:
                $ref: \\"#/components/examples/run_jira_connector_request\\"
              runServerLogConnectorRequest:
                $ref: \\"#/components/examples/run_server_log_connector_request\\"
              runServiceNowITOMConnectorRequest:
                $ref: \\"#/components/examples/run_servicenow_itom_connector_request\\"
              runSwimlaneConnectorRequest:
                $ref: \\"#/components/examples/run_swimlane_connector_request\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                required:
                  - connector_id
                  - status
                properties:
                  connector_id:
                    type: string
                    description: The identifier for the connector.
                  data:
                    oneOf:
                      - type: object
                        description: Information returned from the action.
                        additionalProperties: true
                      - type: array
                        description: An array of information returned from the action.
                        items:
                          type: object
                  status:
                    type: string
                    description: The status of the action.
                    enum:
                      - error
                      - ok
              examples:
                runIndexConnectorResponse:
                  $ref: \\"#/components/examples/run_index_connector_response\\"
                runJiraConnectorResponse:
                  $ref: \\"#/components/examples/run_jira_connector_response\\"
                runServerLogConnectorResponse:
                  $ref: \\"#/components/examples/run_server_log_connector_response\\"
                runServiceNowITOMConnectorResponse:
                  $ref: \\"#/components/examples/run_servicenow_itom_connector_response\\"
                runSwimlaneConnectorResponse:
                  $ref: \\"#/components/examples/run_swimlane_connector_response\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/action/{actionId}\\":
    delete:
      summary: Deletes a connector.
      operationId: legacyDeleteConnector
      deprecated: true
      description: >
        Deprecated in 7.13.0. Use the delete connector API instead. WARNING:
        When you delete a connector, it cannot be recovered.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"204\\":
          description: Indicates a successful call.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    get:
      summary: Retrieves a connector by ID.
      operationId: legacyGetConnector
      description: Deprecated in 7.13.0. Use the get connector API instead.
      deprecated: true
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          $ref: \\"#/components/responses/200_actions\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    put:
      summary: Updates the attributes for a connector.
      operationId: legacyUpdateConnector
      deprecated: true
      description: Deprecated in 7.13.0. Use the update connector API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy update connector request body properties
              description: The properties vary depending on the connector type.
              type: object
              properties:
                config:
                  type: object
                  description: The new connector configuration. Configuration properties vary
                    depending on the connector type.
                name:
                  type: string
                  description: The new name for the connector.
                secrets:
                  type: object
                  description: The updated secrets configuration for the connector. Secrets
                    properties vary depending on the connector type.
      responses:
        \\"200\\":
          $ref: \\"#/components/responses/200_actions\\"
        \\"404\\":
          $ref: \\"#/components/responses/404\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions\\":
    get:
      summary: Retrieves all connectors.
      operationId: legacyGetConnectors
      deprecated: true
      description: Deprecated in 7.13.0. Use the get all connectors API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: \\"#/components/schemas/action_response_properties\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    post:
      summary: Creates a connector.
      operationId: legacyCreateConnector
      deprecated: true
      description: Deprecated in 7.13.0. Use the create connector API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy create connector request properties
              type: object
              properties:
                actionTypeId:
                  type: string
                  description: The connector type identifier.
                config:
                  type: object
                  description: The configuration for the connector. Configuration properties vary
                    depending on the connector type.
                name:
                  type: string
                  description: The display name for the connector.
                secrets:
                  type: object
                  description: >
                    The secrets configuration for the connector. Secrets
                    configuration properties vary depending on the connector
                    type. NOTE: Remember these values. You must provide them
                    each time you update the connector.
      responses:
        \\"200\\":
          $ref: \\"#/components/responses/200_actions\\"
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/list_action_types\\":
    get:
      summary: Retrieves a list of all connector types.
      operationId: legacyGetConnectorTypes
      deprecated: true
      description: Deprecated in 7.13.0. Use the get all connector types API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/space_id\\"
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                title: Legacy get connector types response body properties
                description: The properties vary for each connector type.
                type: array
                items:
                  type: object
                  properties:
                    enabled:
                      type: boolean
                      description: Indicates whether the connector type is enabled in Kibana.
                    enabledInConfig:
                      type: boolean
                      description: Indicates whether the connector type is enabled in the Kibana
                        \`.yml\` file.
                    enabledInLicense:
                      type: boolean
                      description: Indicates whether the connector is enabled in the license.
                      example: true
                    id:
                      type: string
                      description: The unique identifier for the connector type.
                    minimumLicenseRequired:
                      type: string
                      description: The license that is required to use the connector type.
                    name:
                      type: string
                      description: The name of the connector type.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
  \\"/s/{spaceId}/api/actions/action/{actionId}/_execute\\":
    post:
      summary: Runs a connector.
      operationId: legacyRunConnector
      deprecated: true
      description: Deprecated in 7.13.0. Use the run connector API instead.
      tags:
        - connectors
      parameters:
        - $ref: \\"#/components/parameters/kbn_xsrf\\"
        - $ref: \\"#/components/parameters/action_id\\"
        - $ref: \\"#/components/parameters/space_id\\"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy run connector request body properties
              description: The properties vary depending on the connector type.
              type: object
              required:
                - params
              properties:
                params:
                  type: object
                  description: The parameters of the connector. Parameter properties vary
                    depending on the connector type.
      responses:
        \\"200\\":
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  actionId:
                    type: string
                  data:
                    oneOf:
                      - type: object
                        description: Information returned from the action.
                        additionalProperties: true
                      - type: array
                        description: An array of information returned from the action.
                        items:
                          type: object
                  status:
                    type: string
                    description: The status of the action.
        \\"401\\":
          $ref: \\"#/components/responses/401\\"
      servers:
        - url: https://localhost:5601
    servers:
      - url: https://localhost:5601
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: ApiKey
  parameters:
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
    space_id:
      in: path
      name: spaceId
      description: An identifier for the space. If \`/s/\` and the identifier are
        omitted from the path, the default space is used.
      required: true
      schema:
        type: string
        example: default
    connector_id:
      in: path
      name: connectorId
      description: An identifier for the connector.
      required: true
      schema:
        type: string
        example: df770e30-8b8b-11ed-a780-3b746c987a81
    action_id:
      in: path
      name: actionId
      description: An identifier for the action.
      required: true
      schema:
        type: string
        example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
  schemas:
    config_properties_cases_webhook:
      title: Connector request properties for Webhook - Case Management connector
      required:
        - createIncidentJson
        - createIncidentResponseKey
        - createIncidentUrl
        - getIncidentResponseExternalTitleKey
        - getIncidentUrl
        - updateIncidentJson
        - updateIncidentUrl
        - viewIncidentUrl
      description: Defines properties for connectors when type is \`.cases-webhook\`.
      type: object
      properties:
        createCommentJson:
          type: string
          description: >
            A JSON payload sent to the create comment URL to create a case
            comment. You can use variables to add Kibana Cases data to the
            payload. The required variable is \`case.comment\`. Due to Mustache
            template variables (the text enclosed in triple braces, for example,
            \`{{{case.title}}}\`), the JSON is not validated when you create the
            connector. The JSON is validated once the Mustache variables have
            been placed when the REST method runs. Manually ensure that the JSON
            is valid, disregarding the Mustache variables, so the later
            validation will pass.
          example:
            body:
              \\"[object Object]\\": null
        createCommentMethod:
          type: string
          description: >
            The REST API HTTP request method to create a case comment in the
            third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
          default: put
          enum:
            - patch
            - post
            - put
        createCommentUrl:
          type: string
          description: >
            The REST API URL to create a case comment by ID in the third-party
            system. You can use a variable to add the external system ID to the
            URL. If you are using the \`xpack.actions.allowedHosts setting\`, add
            the hostname to the allowed hosts.
          example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment
        createIncidentJson:
          type: string
          description: >
            A JSON payload sent to the create case URL to create a case. You can
            use variables to add case data to the payload. Required variables
            are \`case.title\` and \`case.description\`. Due to Mustache template
            variables (which is the text enclosed in triple braces, for example,
            \`{{{case.title}}}\`), the JSON is not validated when you create the
            connector. The JSON is validated after the Mustache variables have
            been placed when REST method runs. Manually ensure that the JSON is
            valid to avoid future validation errors; disregard Mustache
            variables during your review.
          example:
            fields:
              summary:
                \\"[object Object]\\": null
              description:
                \\"[object Object]\\": null
              labels:
                \\"[object Object]\\": null
        createIncidentMethod:
          type: string
          description: >
            The REST API HTTP request method to create a case in the third-party
            system. Valid values are \`patch\`, \`post\`, and \`put\`.
          enum:
            - patch
            - post
            - put
          default: post
        createIncidentResponseKey:
          type: string
          description: The JSON key in the create case response that contains the external
            case ID.
        createIncidentUrl:
          type: string
          description: >
            The REST API URL to create a case in the third-party system. If you
            are using the \`xpack.actions.allowedHosts\` setting, add the hostname
            to the allowed hosts.
        getIncidentResponseExternalTitleKey:
          type: string
          description: The JSON key in get case response that contains the external case
            title.
        getIncidentUrl:
          type: string
          description: >
            The REST API URL to get the case by ID from the third-party system.
            If you are using the \`xpack.actions.allowedHosts\` setting, add the
            hostname to the allowed hosts. You can use a variable to add the
            external system ID to the URL. Due to Mustache template variables
            (the text enclosed in triple braces, for example,
            \`{{{case.title}}}\`), the JSON is not validated when you create the
            connector. The JSON is validated after the Mustache variables have
            been placed when REST method runs. Manually ensure that the JSON is
            valid, disregarding the Mustache variables, so the later validation
            will pass.
          example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}
        hasAuth:
          type: boolean
          description: If true, a username and password for login type authentication must
            be provided.
          default: true
        headers:
          type: string
          description: >
            A set of key-value pairs sent as headers with the request URLs for
            the create case, update case, get case, and create comment methods.
        updateIncidentJson:
          type: string
          description: >
            The JSON payload sent to the update case URL to update the case. You
            can use variables to add Kibana Cases data to the payload. Required
            variables are \`case.title\` and \`case.description\`. Due to Mustache
            template variables (which is the text enclosed in triple braces, for
            example, \`{{{case.title}}}\`), the JSON is not validated when you
            create the connector. The JSON is validated after the Mustache
            variables have been placed when REST method runs. Manually ensure
            that the JSON is valid to avoid future validation errors; disregard
            Mustache variables during your review.
          example:
            fields:
              summary:
                \\"[object Object]\\": null
              description:
                \\"[object Object]\\": null
              labels:
                \\"[object Object]\\": null
        updateIncidentMethod:
          type: string
          description: >
            The REST API HTTP request method to update the case in the
            third-party system. Valid values are \`patch\`, \`post\`, and \`put\`.
          default: put
          enum:
            - patch
            - post
            - put
        updateIncidentUrl:
          type: string
          description: >
            The REST API URL to update the case by ID in the third-party system.
            You can use a variable to add the external system ID to the URL. If
            you are using the \`xpack.actions.allowedHosts\` setting, add the
            hostname to the allowed hosts.
          example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}
        viewIncidentUrl:
          type: string
          description: >
            The URL to view the case in the external system. You can use
            variables to add the external system ID or external system title to
            the URL.
          example: https://testing-jira.atlassian.net/browse/{{{external.system.title}}}
    secrets_properties_cases_webhook:
      title: Connector secrets properties for Webhook - Case Management connector
      type: object
      properties:
        password:
          type: string
          description: The password for HTTP basic authentication. If \`hasAuth\` is set to
            \`true\`, this property is required.
        user:
          type: string
          description: The username for HTTP basic authentication. If \`hasAuth\` is set to
            \`true\`, this property is required.
    create_connector_request_cases_webhook:
      title: Create Webhook - Case Managment connector request
      description: >
        The Webhook - Case Management connector uses axios to send POST, PUT,
        and GET requests to a case management RESTful API web service.
      type: object
      required:
        - config
        - connector_type_id
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_cases_webhook\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .cases-webhook
          example: .cases-webhook
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_cases_webhook\\"
    config_properties_email:
      title: Connector request properties for an email connector
      description: Defines properties for connectors when type is \`.email\`.
      type: object
      additionalProperties: true
    secrets_properties_email:
      title: Connector secrets properties for an email connector
      description: Defines secrets for connectors when type is \`.email\`.
      type: object
      additionalProperties: true
    create_connector_request_email:
      title: Create email connector request
      description: >
        The email connector uses the SMTP protocol to send mail messages, using
        an integration of Nodemailer. An exception is Microsoft Exchange, which
        uses HTTP protocol for sending emails, Send mail. Email message text is
        sent as both plain text and html text.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_email\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .email
          example: .email
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_email\\"
    create_connector_request_index:
      title: Create index connector request
      description: The index connector indexes a document into Elasticsearch.
      type: object
      required:
        - config
        - connector_type_id
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_index\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .index
          example: .index
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
    config_properties_jira:
      title: Connector request properties for a Jira connector
      required:
        - apiUrl
        - projectKey
      description: Defines properties for connectors when type is \`.jira\`.
      type: object
      properties:
        apiUrl:
          description: The Jira instance URL.
          type: string
        projectKey:
          description: The Jira project key.
          type: string
    secrets_properties_jira:
      title: Connector secrets properties for a Jira connector
      required:
        - apiToken
        - email
      description: Defines secrets for connectors when type is \`.jira\`.
      type: object
      properties:
        apiToken:
          description: The Jira API authentication token for HTTP basic authentication.
          type: string
        email:
          description: The account email for HTTP Basic authentication.
          type: string
    create_connector_request_jira:
      title: Create Jira connector request
      description: The Jira connector uses the REST API v2 to create Jira issues.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_jira\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .jira
          example: .jira
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_jira\\"
    config_properties_opsgenie:
      title: Connector request properties for an Opsgenie connector
      required:
        - apiUrl
      description: Defines properties for connectors when type is \`.opsgenie\`.
      type: object
      properties:
        apiUrl:
          description: >
            The Opsgenie URL. For example, \`https://api.opsgenie.com\` or
            \`https://api.eu.opsgenie.com\`. If you are using the
            \`xpack.actions.allowedHosts\` setting, add the hostname to the
            allowed hosts.
          type: string
    secrets_properties_opsgenie:
      title: Connector secrets properties for an Opsgenie connector
      required:
        - apiKey
      description: Defines secrets for connectors when type is \`.opsgenie\`.
      type: object
      properties:
        apiKey:
          description: The Opsgenie API authentication key for HTTP Basic authentication.
          type: string
    create_connector_request_opsgenie:
      title: Create Opsgenie connector request
      description: The Opsgenie connector uses the Opsgenie alert API.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_opsgenie\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .opsgenie
          example: .opsgenie
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_opsgenie\\"
    config_properties_pagerduty:
      title: Connector request properties for a PagerDuty connector
      description: Defines properties for connectors when type is \`.pagerduty\`.
      type: object
      additionalProperties: true
    secrets_properties_pagerduty:
      title: Connector secrets properties for a PagerDuty connector
      description: Defines secrets for connectors when type is \`.pagerduty\`.
      type: object
      additionalProperties: true
    create_connector_request_pagerduty:
      title: Create PagerDuty connector request
      description: >
        The PagerDuty connector uses the v2 Events API to trigger, acknowledge,
        and resolve PagerDuty alerts.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_pagerduty\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .pagerduty
          example: .pagerduty
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_pagerduty\\"
    config_properties_resilient:
      title: Connector request properties for a IBM Resilient connector
      required:
        - apiUrl
        - orgId
      description: Defines properties for connectors when type is \`.resilient\`.
      type: object
      properties:
        apiUrl:
          description: The IBM Resilient instance URL.
          type: string
        orgId:
          description: The IBM Resilient organization ID.
          type: string
    secrets_properties_resilient:
      title: Connector secrets properties for IBM Resilient connector
      required:
        - apiKeyId
        - apiKeySecret
      description: Defines secrets for connectors when type is \`.resilient\`.
      type: object
      properties:
        apiKeyId:
          type: string
          description: The authentication key ID for HTTP Basic authentication.
        apiKeySecret:
          type: string
          description: The authentication key secret for HTTP Basic authentication.
    create_connector_request_resilient:
      title: Create IBM Resilient connector request
      description: The IBM Resilient connector uses the RESILIENT REST v2 to create
        IBM Resilient incidents.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_resilient\\"
        connector_type_id:
          description: The type of connector.
          type: string
          example: .resilient
          enum:
            - .resilient
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_resilient\\"
    create_connector_request_serverlog:
      title: Create server log connector request
      description: This connector writes an entry to the Kibana server log.
      type: object
      required:
        - connector_type_id
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .server-log
          example: .server-log
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
    config_properties_servicenow:
      title: Connector request properties for a ServiceNow ITSM connector
      required:
        - apiUrl
      description: Defines properties for connectors when type is \`.servicenow\`.
      type: object
      properties:
        apiUrl:
          type: string
          description: The ServiceNow instance URL.
        clientId:
          description: >
            The client ID assigned to your OAuth application. This property is
            required when \`isOAuth\` is \`true\`.
          type: string
        isOAuth:
          description: >
            The type of authentication to use. The default value is false, which
            means basic authentication is used instead of open authorization
            (OAuth).
          default: false
          type: boolean
        jwtKeyId:
          description: >
            The key identifier assigned to the JWT verifier map of your OAuth
            application. This property is required when \`isOAuth\` is \`true\`.
          type: string
        userIdentifierValue:
          description: >
            The identifier to use for OAuth authentication. This identifier
            should be the user field you selected when you created an OAuth JWT
            API endpoint for external clients in your ServiceNow instance. For
            example, if the selected user field is \`Email\`, the user identifier
            should be the user's email address. This property is required when
            \`isOAuth\` is \`true\`.
          type: string
        usesTableApi:
          description: >
            Determines whether the connector uses the Table API or the Import
            Set API. This property is supported only for ServiceNow ITSM and
            ServiceNow SecOps connectors.  NOTE: If this property is set to
            \`false\`, the Elastic application should be installed in ServiceNow.
          default: true
          type: boolean
    secrets_properties_servicenow:
      title: Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and
        ServiceNow SecOps connectors
      description: Defines secrets for connectors when type is \`.servicenow\`,
        \`.servicenow-sir\`, or \`.servicenow-itom\`.
      type: object
      properties:
        clientSecret:
          type: string
          description: The client secret assigned to your OAuth application. This property
            is required when \`isOAuth\` is \`true\`.
        password:
          type: string
          description: The password for HTTP basic authentication. This property is
            required when \`isOAuth\` is \`false\`.
        privateKey:
          type: string
          description: The RSA private key that you created for use in ServiceNow. This
            property is required when \`isOAuth\` is \`true\`.
        privateKeyPassword:
          type: string
          description: The password for the RSA private key. This property is required
            when \`isOAuth\` is \`true\` and you set a password on your private key.
        username:
          type: string
          description: The username for HTTP basic authentication. This property is
            required when \`isOAuth\` is \`false\`.
    create_connector_request_servicenow:
      title: Create ServiceNow ITSM connector request
      description: >
        The ServiceNow ITSM connector uses the import set API to create
        ServiceNow incidents. You can use the connector for rule actions and
        cases.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow
          example: .servicenow
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    config_properties_servicenow_itom:
      title: Connector request properties for a ServiceNow ITSM connector
      required:
        - apiUrl
      description: Defines properties for connectors when type is \`.servicenow\`.
      type: object
      properties:
        apiUrl:
          type: string
          description: The ServiceNow instance URL.
        clientId:
          description: >
            The client ID assigned to your OAuth application. This property is
            required when \`isOAuth\` is \`true\`.
          type: string
        isOAuth:
          description: >
            The type of authentication to use. The default value is false, which
            means basic authentication is used instead of open authorization
            (OAuth).
          default: false
          type: boolean
        jwtKeyId:
          description: >
            The key identifier assigned to the JWT verifier map of your OAuth
            application. This property is required when \`isOAuth\` is \`true\`.
          type: string
        userIdentifierValue:
          description: >
            The identifier to use for OAuth authentication. This identifier
            should be the user field you selected when you created an OAuth JWT
            API endpoint for external clients in your ServiceNow instance. For
            example, if the selected user field is \`Email\`, the user identifier
            should be the user's email address. This property is required when
            \`isOAuth\` is \`true\`.
          type: string
    create_connector_request_servicenow_itom:
      title: Create ServiceNow ITOM connector request
      description: >
        The ServiceNow ITOM connector uses the event API to create ServiceNow
        events. You can use the connector for rule actions.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow_itom\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-itom
          example: .servicenow-itom
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    create_connector_request_servicenow_sir:
      title: Create ServiceNow SecOps connector request
      description: >
        The ServiceNow SecOps connector uses the import set API to create
        ServiceNow security incidents. You can use the connector for rule
        actions and cases.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-sir
          example: .servicenow-sir
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    secrets_properties_slack_api:
      title: Connector secrets properties for a Web API Slack connector
      description: Defines secrets for connectors when type is \`.slack\`.
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: Slack bot user OAuth token.
    create_connector_request_slack_api:
      title: Create Slack connector request
      description: The Slack connector uses Slack Incoming Webhooks.
      type: object
      required:
        - connector_type_id
        - name
        - secrets
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack_api
          example: .slack_api
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_slack_api\\"
    secrets_properties_slack_webhook:
      title: Connector secrets properties for a Webhook Slack connector
      description: Defines secrets for connectors when type is \`.slack\`.
      required:
        - webhookUrl
      type: object
      properties:
        webhookUrl:
          type: string
          description: Slack webhook url.
    create_connector_request_slack_webhook:
      title: Create Slack connector request
      description: The Slack connector uses Slack Incoming Webhooks.
      type: object
      required:
        - connector_type_id
        - name
        - secrets
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack
          example: .slack
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_slack_webhook\\"
    config_properties_swimlane:
      title: Connector request properties for a Swimlane connector
      required:
        - apiUrl
        - appId
        - connectorType
      description: Defines properties for connectors when type is \`.swimlane\`.
      type: object
      properties:
        apiUrl:
          description: The Swimlane instance URL.
          type: string
        appId:
          description: The Swimlane application ID.
          type: string
        connectorType:
          description: The type of connector. Valid values are \`all\`, \`alerts\`, and \`cases\`.
          type: string
          enum:
            - all
            - alerts
            - cases
        mappings:
          title: Connector mappings properties for a Swimlane connector
          description: The field mapping.
          type: object
          properties:
            alertIdConfig:
              title: Alert identifier mapping
              description: Mapping for the alert ID.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            caseIdConfig:
              title: Case identifier mapping
              description: Mapping for the case ID.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            caseNameConfig:
              title: Case name mapping
              description: Mapping for the case name.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            commentsConfig:
              title: Case comment mapping
              description: Mapping for the case comments.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            descriptionConfig:
              title: Case description mapping
              description: Mapping for the case description.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            ruleNameConfig:
              title: Rule name mapping
              description: Mapping for the name of the alert's rule.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
            severityConfig:
              title: Severity mapping
              description: Mapping for the severity.
              type: object
              required:
                - fieldType
                - id
                - key
                - name
              properties:
                fieldType:
                  type: string
                  description: The type of field in Swimlane.
                id:
                  type: string
                  description: The identifier for the field in Swimlane.
                key:
                  type: string
                  description: The key for the field in Swimlane.
                name:
                  type: string
                  description: The name of the field in Swimlane.
    secrets_properties_swimlane:
      title: Connector secrets properties for a Swimlane connector
      description: Defines secrets for connectors when type is \`.swimlane\`.
      type: object
      properties:
        apiToken:
          description: Swimlane API authentication token.
          type: string
    create_connector_request_swimlane:
      title: Create Swimlane connector request
      description: The Swimlane connector uses the Swimlane REST API to create
        Swimlane records.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_swimlane\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .swimlane
          example: .swimlane
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_swimlane\\"
    secrets_properties_teams:
      title: Connector secrets properties for a Microsoft Teams connector
      description: Defines secrets for connectors when type is \`.teams\`.
      type: object
      additionalProperties: true
    create_connector_request_teams:
      title: Create Microsoft Teams connector request
      description: The Microsoft Teams connector uses Incoming Webhooks.
      type: object
      required:
        - connector_type_id
        - name
        - secrets
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .teams
          example: .teams
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_teams\\"
    config_properties_tines:
      title: Connector request properties for a Tines connector
      description: Defines properties for connectors when type is \`.tines\`.
      type: object
      additionalProperties: true
    secrets_properties_tines:
      title: Connector secrets properties for a Tines connector
      description: Defines secrets for connectors when type is \`.tines\`.
      type: object
      additionalProperties: true
    create_connector_request_tines:
      title: Create Tines connector request
      description: >
        The Tines connector uses Tines Webhook actions to send events via POST
        request.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_tines\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .tines
          example: .tines
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_tines\\"
    config_properties_webhook:
      title: Connector request properties for a Webhook connector
      description: Defines properties for connectors when type is \`.webhook\`.
      type: object
      additionalProperties: true
    secrets_properties_webhook:
      title: Connector secrets properties for a Webhook connector
      description: Defines secrets for connectors when type is \`.webhook\`.
      type: object
      additionalProperties: true
    create_connector_request_webhook:
      title: Create Webhook connector request
      description: >
        The Webhook connector uses axios to send a POST or PUT request to a web
        service.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_webhook\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .webhook
          example: .webhook
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_webhook\\"
    config_properties_xmatters:
      title: Connector request properties for a xMatters connector
      description: Defines properties for connectors when type is \`.xmatters\`.
      type: object
      additionalProperties: true
    secrets_properties_xmatters:
      title: Connector secrets properties for an xMatters connector
      description: Defines secrets for connectors when type is \`.xmatters\`.
      type: object
      additionalProperties: true
    create_connector_request_xmatters:
      title: Create xMatters connector request
      description: >
        The xMatters connector uses the xMatters Workflow for Elastic to send
        actionable alerts to on-call xMatters resources.
      type: object
      required:
        - config
        - connector_type_id
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_xmatters\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .xmatters
          example: .xmatters
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_xmatters\\"
    is_deprecated:
      type: boolean
      description: Indicates whether the connector type is deprecated.
      example: false
    is_missing_secrets:
      type: boolean
      description: Indicates whether secrets are missing for the connector. Secrets
        configuration properties vary depending on the connector type.
      example: false
    is_preconfigured:
      type: boolean
      description: Indicates whether it is a preconfigured connector. If true, the
        \`config\` and \`is_missing_secrets\` properties are omitted from the
        response.
      example: false
    connector_response_properties_cases_webhook:
      title: Connector request properties for a Webhook - Case Management connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_cases_webhook\\"
        connector_type_id:
          description: The type of connector.
          type: string
          enum:
            - .cases-webhook
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_email:
      title: Connector response properties for an email connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_email\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .email
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_index:
      title: Connector response properties for an index connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_index\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .index
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_jira:
      title: Connector response properties for a Jira connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_jira\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .jira
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_opsgenie:
      title: Connector response properties for an Opsgenie connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_opsgenie\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .opsgenie
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_pagerduty:
      title: Connector response properties for a PagerDuty connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_pagerduty\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .pagerduty
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_resilient:
      title: Connector response properties for a IBM Resilient connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_resilient\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .resilient
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_serverlog:
      title: Connector response properties for a server log connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          type: object
          nullable: true
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .server-log
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_servicenow:
      title: Connector response properties for a ServiceNow ITSM connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_servicenow_itom:
      title: Connector response properties for a ServiceNow ITOM connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow_itom\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-itom
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_servicenow_sir:
      title: Connector response properties for a ServiceNow SecOps connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .servicenow-sir
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_slack_api:
      title: Connector response properties for a Slack connector
      type: object
      required:
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack_api
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_slack_webhook:
      title: Connector response properties for a Slack connector
      type: object
      required:
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .slack
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_swimlane:
      title: Connector response properties for a Swimlane connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_swimlane\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .swimlane
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_teams:
      title: Connector response properties for a Microsoft Teams connector
      type: object
      required:
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .teams
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_tines:
      title: Connector response properties for a Tines connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_tines\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .tines
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_webhook:
      title: Connector response properties for a Webhook connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_webhook\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .webhook
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties_xmatters:
      title: Connector response properties for an xMatters connector
      type: object
      required:
        - config
        - connector_type_id
        - id
        - is_deprecated
        - is_preconfigured
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_xmatters\\"
        connector_type_id:
          type: string
          description: The type of connector.
          enum:
            - .xmatters
        id:
          type: string
          description: The identifier for the connector.
        is_deprecated:
          $ref: \\"#/components/schemas/is_deprecated\\"
        is_missing_secrets:
          $ref: \\"#/components/schemas/is_missing_secrets\\"
        is_preconfigured:
          $ref: \\"#/components/schemas/is_preconfigured\\"
        name:
          type: string
          description: The display name for the connector.
    connector_response_properties:
      title: Connector response properties
      description: The properties vary depending on the connector type.
      oneOf:
        - $ref: \\"#/components/schemas/connector_response_properties_cases_webhook\\"
        - $ref: \\"#/components/schemas/connector_response_properties_email\\"
        - $ref: \\"#/components/schemas/connector_response_properties_index\\"
        - $ref: \\"#/components/schemas/connector_response_properties_jira\\"
        - $ref: \\"#/components/schemas/connector_response_properties_opsgenie\\"
        - $ref: \\"#/components/schemas/connector_response_properties_pagerduty\\"
        - $ref: \\"#/components/schemas/connector_response_properties_resilient\\"
        - $ref: \\"#/components/schemas/connector_response_properties_serverlog\\"
        - $ref: \\"#/components/schemas/connector_response_properties_servicenow\\"
        - $ref: \\"#/components/schemas/connector_response_properties_servicenow_itom\\"
        - $ref: \\"#/components/schemas/connector_response_properties_servicenow_sir\\"
        - $ref: \\"#/components/schemas/connector_response_properties_slack_api\\"
        - $ref: \\"#/components/schemas/connector_response_properties_slack_webhook\\"
        - $ref: \\"#/components/schemas/connector_response_properties_swimlane\\"
        - $ref: \\"#/components/schemas/connector_response_properties_teams\\"
        - $ref: \\"#/components/schemas/connector_response_properties_tines\\"
        - $ref: \\"#/components/schemas/connector_response_properties_webhook\\"
        - $ref: \\"#/components/schemas/connector_response_properties_xmatters\\"
      discriminator:
        propertyName: connector_type_id
    update_connector_request_cases_webhook:
      title: Update Webhook - Case Managment connector request
      type: object
      required:
        - config
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_cases_webhook\\"
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_cases_webhook\\"
    update_connector_request_index:
      title: Update index connector request
      type: object
      required:
        - config
        - name
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_index\\"
        name:
          type: string
          description: The display name for the connector.
    update_connector_request_jira:
      title: Update Jira connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_jira\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_jira\\"
    update_connector_request_opsgenie:
      title: Update Opsgenie connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_opsgenie\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_opsgenie\\"
    update_connector_request_resilient:
      title: Update IBM Resilient connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_resilient\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_resilient\\"
    update_connector_request_serverlog:
      title: Update server log connector request
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The display name for the connector.
    update_connector_request_servicenow:
      title: Update ServiceNow ITSM connector or ServiceNow SecOps request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    update_connector_request_servicenow_itom:
      title: Create ServiceNow ITOM connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_servicenow_itom\\"
        name:
          type: string
          description: The display name for the connector.
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_servicenow\\"
    update_connector_request_slack_api:
      title: Update Slack connector request
      type: object
      required:
        - name
        - secrets
      properties:
        name:
          type: string
          description: The display name for the connector.
        secrets:
          type: object
          description: The secrets object containing the necessary fields for
            authentication.
          $ref: \\"#/components/schemas/secrets_properties_slack_api\\"
    update_connector_request_slack_webhook:
      title: Update Slack connector request
      type: object
      required:
        - name
        - secrets
      properties:
        name:
          type: string
          description: The display name for the connector.
        secrets:
          type: object
          description: The secrets object containing the necessary fields for
            authentication.
          $ref: \\"#/components/schemas/secrets_properties_slack_webhook\\"
    update_connector_request_swimlane:
      title: Update Swimlane connector request
      type: object
      required:
        - config
        - name
        - secrets
      properties:
        config:
          $ref: \\"#/components/schemas/config_properties_swimlane\\"
        name:
          type: string
          description: The display name for the connector.
          example: my-connector
        secrets:
          $ref: \\"#/components/schemas/secrets_properties_swimlane\\"
    connector_types:
      title: Connector types
      type: string
      description: The type of connector. For example, \`.email\`, \`.index\`, \`.jira\`,
        \`.opsgenie\`, or \`.server-log\`.
      enum:
        - .cases-webhook
        - .email
        - .index
        - .jira
        - .opsgenie
        - .pagerduty
        - .resilient
        - .servicenow
        - .servicenow-itom
        - .servicenow-sir
        - .server-log
        - .slack
        - .swimlane
        - .teams
        - .tines
        - .webhook
        - .xmatters
      example: .server-log
    features:
      type: string
      description: >
        The feature that uses the connector. Valid values are \`alerting\`,
        \`cases\`, \`uptime\`, and \`siem\`.
      enum:
        - alerting
        - cases
        - uptime
        - siem
    run_connector_params_documents:
      title: Index connector parameters
      description: Test an action that indexes a document into Elasticsearch.
      type: object
      required:
        - documents
      properties:
        documents:
          type: array
          description: The documents in JSON format for index connectors.
          items:
            type: object
            additionalProperties: true
    run_connector_params_level_message:
      title: Server log connector parameters
      description: Test an action that writes an entry to the Kibana server log.
      type: object
      required:
        - message
      properties:
        level:
          type: string
          description: The log level of the message for server log connectors.
          enum:
            - debug
            - error
            - fatal
            - info
            - trace
            - warn
          default: info
        message:
          type: string
          description: The message for server log connectors.
    run_connector_subaction_addevent:
      title: The addEvent subaction
      type: object
      required:
        - subAction
      description: The \`addEvent\` subaction for ServiceNow ITOM connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - addEvent
        subActionParams:
          type: object
          description: The set of configuration properties for the action.
          properties:
            additional_info:
              type: string
              description: Additional information about the event.
            description:
              type: string
              description: The details about the event.
            event_class:
              type: string
              description: A specific instance of the source.
            message_key:
              type: string
              description: All actions sharing this key are associated with the same
                ServiceNow alert. The default value is \`<rule ID>:<alert
                instance ID>\`.
            metric_name:
              type: string
              description: The name of the metric.
            node:
              type: string
              description: The host that the event was triggered for.
            resource:
              type: string
              description: The name of the resource.
            severity:
              type: string
              description: The severity of the event.
            source:
              type: string
              description: The name of the event source type.
            time_of_event:
              type: string
              description: The time of the event.
            type:
              type: string
              description: The type of event.
    run_connector_subaction_closealert:
      title: The closeAlert subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`closeAlert\` subaction for Opsgenie connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - closeAlert
        subActionParams:
          type: object
          required:
            - alias
          properties:
            alias:
              type: string
              description: The unique identifier used for alert deduplication in Opsgenie. The
                alias must match the value used when creating the alert.
            note:
              type: string
              description: Additional information for the alert.
            source:
              type: string
              description: The display name for the source of the alert.
            user:
              type: string
              description: The display name for the owner.
    run_connector_subaction_createalert:
      title: The createAlert subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`createAlert\` subaction for Opsgenie connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - createAlert
        subActionParams:
          type: object
          required:
            - message
          properties:
            actions:
              type: array
              description: The custom actions available to the alert.
              items:
                type: string
            alias:
              type: string
              description: The unique identifier used for alert deduplication in Opsgenie.
            description:
              type: string
              description: A description that provides detailed information about the alert.
            details:
              type: object
              description: The custom properties of the alert.
              additionalProperties: true
              example:
                key1: value1
                key2: value2
            entity:
              type: string
              description: The domain of the alert. For example, the application or server
                name.
            message:
              type: string
              description: The alert message.
            note:
              type: string
              description: Additional information for the alert.
            priority:
              type: string
              description: The priority level for the alert.
              enum:
                - P1
                - P2
                - P3
                - P4
                - P5
            responders:
              type: array
              description: >
                The entities to receive notifications about the alert. If \`type\`
                is \`user\`, either \`id\` or \`username\` is required. If \`type\` is
                \`team\`, either \`id\` or \`name\` is required.
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The identifier for the entity.
                  name:
                    type: string
                    description: The name of the entity.
                  type:
                    type: string
                    description: The type of responders, in this case \`escalation\`.
                    enum:
                      - escalation
                      - schedule
                      - team
                      - user
                  username:
                    type: string
                    description: A valid email address for the user.
            source:
              type: string
              description: The display name for the source of the alert.
            tags:
              type: array
              description: The tags for the alert.
              items:
                type: string
            user:
              type: string
              description: The display name for the owner.
            visibleTo:
              type: array
              description: The teams and users that the alert will be visible to without
                sending a notification. Only one of \`id\`, \`name\`, or \`username\`
                is required.
              items:
                type: object
                required:
                  - type
                properties:
                  id:
                    type: string
                    description: The identifier for the entity.
                  name:
                    type: string
                    description: The name of the entity.
                  type:
                    type: string
                    description: Valid values are \`team\` and \`user\`.
                    enum:
                      - team
                      - user
                  username:
                    type: string
                    description: The user name. This property is required only when the \`type\` is
                      \`user\`.
    run_connector_subaction_fieldsbyissuetype:
      title: The fieldsByIssueType subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`fieldsByIssueType\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - fieldsByIssueType
        subActionParams:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: The Jira issue type identifier.
              example: 10024
    run_connector_subaction_getchoices:
      title: The getChoices subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`getChoices\` subaction for ServiceNow ITOM, ServiceNow ITSM,
        and ServiceNow SecOps connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - getChoices
        subActionParams:
          type: object
          description: The set of configuration properties for the action.
          required:
            - fields
          properties:
            fields:
              type: array
              description: An array of fields.
              items:
                type: string
    run_connector_subaction_getfields:
      title: The getFields subaction
      type: object
      required:
        - subAction
      description: The \`getFields\` subaction for Jira, ServiceNow ITSM, and ServiceNow
        SecOps connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - getFields
    run_connector_subaction_getincident:
      title: The getIncident subaction
      type: object
      description: The \`getIncident\` subaction for Jira, ServiceNow ITSM, and
        ServiceNow SecOps connectors.
      required:
        - subAction
        - subActionParams
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - getIncident
        subActionParams:
          type: object
          required:
            - externalId
          properties:
            externalId:
              type: string
              description: The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier.
              example: 71778
    run_connector_subaction_issue:
      title: The issue subaction
      type: object
      required:
        - subAction
      description: The \`issue\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - issue
        subActionParams:
          type: object
          required:
            - id
          properties:
            id:
              type: string
              description: The Jira issue identifier.
              example: 71778
    run_connector_subaction_issues:
      title: The issues subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`issues\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - issues
        subActionParams:
          type: object
          required:
            - title
          properties:
            title:
              type: string
              description: The title of the Jira issue.
    run_connector_subaction_issuetypes:
      title: The issueTypes subaction
      type: object
      required:
        - subAction
      description: The \`issueTypes\` subaction for Jira connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - issueTypes
    run_connector_subaction_pushtoservice:
      title: The pushToService subaction
      type: object
      required:
        - subAction
        - subActionParams
      description: The \`pushToService\` subaction for Jira, ServiceNow ITSM, ServiceNow
        SecOps, and Swimlane connectors.
      properties:
        subAction:
          type: string
          description: The action to test.
          enum:
            - pushToService
        subActionParams:
          type: object
          description: The set of configuration properties for the action.
          properties:
            comments:
              type: array
              description: Additional information that is sent to Jira, ServiceNow ITSM,
                ServiceNow SecOps, or Swimlane.
              items:
                type: object
                properties:
                  comment:
                    type: string
                    description: A comment related to the incident. For example, describe how to
                      troubleshoot the issue.
                  commentId:
                    type: integer
                    description: A unique identifier for the comment.
            incident:
              type: object
              description: Information necessary to create or update a Jira, ServiceNow ITSM,
                ServiveNow SecOps, or Swimlane incident.
              properties:
                alertId:
                  type: string
                  description: The alert identifier for Swimlane connectors.
                caseId:
                  type: string
                  description: The case identifier for the incident for Swimlane connectors.
                caseName:
                  type: string
                  description: The case name for the incident for Swimlane connectors.
                category:
                  type: string
                  description: The category of the incident for ServiceNow ITSM and ServiceNow
                    SecOps connectors.
                correlation_display:
                  type: string
                  description: A descriptive label of the alert for correlation purposes for
                    ServiceNow ITSM and ServiceNow SecOps connectors.
                correlation_id:
                  type: string
                  description: >
                    The correlation identifier for the security incident for
                    ServiceNow ITSM and ServiveNow SecOps connectors. Connectors
                    using the same correlation ID are associated with the same
                    ServiceNow incident. This value determines whether a new
                    ServiceNow incident is created or an existing one is
                    updated. Modifying this value is optional; if not modified,
                    the rule ID and alert ID are combined as \`{{ruleID}}:{{alert
                    ID}}\` to form the correlation ID value in ServiceNow. The
                    maximum character length for this value is 100 characters.
                    NOTE: Using the default configuration of \`{{ruleID}}:{{alert
                    ID}}\` ensures that ServiceNow creates a separate incident
                    record for every generated alert that uses a unique alert
                    ID. If the rule generates multiple alerts that use the same
                    alert IDs, ServiceNow creates and continually updates a
                    single incident record for the alert.
                description:
                  type: string
                  description: The description of the incident for Jira, ServiceNow ITSM,
                    ServiceNow SecOps, and Swimlane connectors.
                dest_ip:
                  description: >
                    A list of destination IP addresses related to the security
                    incident for ServiceNow SecOps connectors. The IPs are added
                    as observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                externalId:
                  type: string
                  description: >
                    The Jira, ServiceNow ITSM, or ServiceNow SecOps issue
                    identifier. If present, the incident is updated. Otherwise,
                    a new incident is created.
                impact:
                  type: string
                  description: The impact of the incident for ServiceNow ITSM connectors.
                issueType:
                  type: integer
                  description: The type of incident for Jira connectors. For example, 10006. To
                    obtain the list of valid values, set \`subAction\` to
                    \`issueTypes\`.
                labels:
                  type: array
                  items:
                    type: string
                  description: >
                    The labels for the incident for Jira connectors. NOTE:
                    Labels cannot contain spaces.
                malware_hash:
                  description: A list of malware hashes related to the security incident for
                    ServiceNow SecOps connectors. The hashes are added as
                    observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                malware_url:
                  type: string
                  description: A list of malware URLs related to the security incident for
                    ServiceNow SecOps connectors. The URLs are added as
                    observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                parent:
                  type: string
                  description: The ID or key of the parent issue for Jira connectors. Applies only
                    to \`Sub-task\` types of issues.
                priority:
                  type: string
                  description: The priority of the incident in Jira and ServiceNow SecOps
                    connectors.
                ruleName:
                  type: string
                  description: The rule name for Swimlane connectors.
                severity:
                  type: string
                  description: The severity of the incident for ServiceNow ITSM and Swimlane
                    connectors.
                short_description:
                  type: string
                  description: >
                    A short description of the incident for ServiceNow ITSM and
                    ServiceNow SecOps connectors. It is used for searching the
                    contents of the knowledge base.
                source_ip:
                  description: A list of source IP addresses related to the security incident for
                    ServiceNow SecOps connectors. The IPs are added as
                    observables to the security incident.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                subcategory:
                  type: string
                  description: The subcategory of the incident for ServiceNow ITSM and ServiceNow
                    SecOps connectors.
                summary:
                  type: string
                  description: A summary of the incident for Jira connectors.
                title:
                  type: string
                  description: >
                    A title for the incident for Jira connectors. It is used for
                    searching the contents of the knowledge base.
                urgency:
                  type: string
                  description: The urgency of the incident for ServiceNow ITSM connectors.
    action_response_properties:
      title: Action response properties
      description: The properties vary depending on the action type.
      type: object
      properties:
        actionTypeId:
          type: string
        config:
          type: object
        id:
          type: string
        isDeprecated:
          type: boolean
          description: Indicates whether the action type is deprecated.
        isMissingSecrets:
          type: boolean
          description: Indicates whether secrets are missing for the action.
        isPreconfigured:
          type: boolean
          description: Indicates whether it is a preconfigured action.
        name:
          type: string
    config_properties_index:
      title: Connector request properties for an index connector
      required:
        - index
      description: Defines properties for connectors when type is \`.index\`.
      type: object
      properties:
        executionTimeField:
          description: Specifies a field that will contain the time the alert condition
            was detected.
          default: null
          type: string
          nullable: true
        index:
          description: The Elasticsearch index to be written to.
          type: string
        refresh:
          description: >
            The refresh policy for the write request, which affects when changes
            are made visible to search. Refer to the refresh setting for
            Elasticsearch document APIs.
          default: false
          type: boolean
  examples:
    create_index_connector_request:
      summary: Create an index connector.
      value:
        name: my-connector
        connector_type_id: .index
        config:
          index: test-index
    create_index_connector_response:
      summary: A new index connector.
      value:
        id: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
        connector_type_id: .index
        name: my-connector
        config:
          index: test-index
          refresh: false
          executionTimeField: null
        is_preconfigured: false
        is_deprecated: false
        is_missing_secrets: false
    get_connector_response:
      summary: A list of connector types
      value:
        id: df770e30-8b8b-11ed-a780-3b746c987a81
        name: my_server_log_connector
        config: {}
        connector_type_id: .server-log
        is_preconfigured: false
        is_deprecated: false
        is_missing_secrets: false
    update_index_connector_request:
      summary: Update an index connector.
      value:
        name: updated-connector
        config:
          index: updated-index
    get_connectors_response:
      summary: A list of connectors
      value:
        - id: preconfigured-email-connector
          name: my-preconfigured-email-notification
          connector_type_id: .email
          is_preconfigured: true
          is_deprecated: false
          referenced_by_count: 0
        - id: e07d0c80-8b8b-11ed-a780-3b746c987a81
          name: my-index-connector
          config:
            index: test-index
            refresh: false
            executionTimeField: null
          connector_type_id: .index
          is_preconfigured: false
          is_deprecated: false
          referenced_by_count: 2
          is_missing_secrets: false
    get_connector_types_response:
      summary: A list of connector types
      value:
        - id: .swimlane
          name: Swimlane
          enabled: true
          enabled_in_config: true
          enabled_in_license: true
          minimum_license_required: gold
          supported_feature_ids:
            - alerting
            - cases
            - siem
        - id: .index
          name: Index
          enabled: true
          enabled_in_config: true
          enabled_in_license: true
          minimum_license_required: basic
          supported_feature_ids:
            - alerting
            - uptime
            - siem
        - id: .server-log
          name: Server log
          enabled: true
          enabled_in_config: true
          enabled_in_license: true
          minimum_license_required: basic
          supported_feature_ids:
            - alerting
            - uptime
    run_index_connector_request:
      summary: Run an index connector.
      value:
        params:
          documents:
            - id: my_doc_id
              name: my_doc_name
              message: hello, world
    run_jira_connector_request:
      summary: Run a Jira connector to retrieve the list of issue types.
      value:
        params:
          subAction: issueTypes
    run_server_log_connector_request:
      summary: Run a server log connector.
      value:
        params:
          level: warn
          message: Test warning message.
    run_servicenow_itom_connector_request:
      summary: Run a ServiceNow ITOM connector to retrieve the list of choices.
      value:
        params:
          subAction: getChoices
          subActionParams:
            fields:
              - severity
              - urgency
    run_swimlane_connector_request:
      summary: Run a Swimlane connector to create an incident.
      value:
        params:
          subAction: pushToService
          subActionParams:
            comments:
              - commentId: 1
                comment: A comment about the incident.
            incident:
              caseId: \\"1000\\"
              caseName: Case name
              description: Description of the incident.
    run_index_connector_response:
      summary: Response from running an index connector.
      value:
        connector_id: fd38c600-96a5-11ed-bb79-353b74189cba
        data:
          errors: false
          items:
            - create:
                _id: 4JtvwYUBrcyxt2NnfW3y
                _index: my-index
                _primary_term: 1
                _seq_no: 0
                _shards:
                  failed: 0
                  successful: 1
                  total: 2
                _version: 1
                result: created
                status: 201
          took: 135
        status: ok
    run_jira_connector_response:
      summary: Response from retrieving the list of issue types for a Jira connector.
      value:
        connector_id: b3aad810-edbe-11ec-82d1-11348ecbf4a6
        data:
          - id: 10024
            name: Improvement
          - id: 10006
            name: Task
          - id: 10007
            name: Sub-task
          - id: 10025
            name: New Feature
          - id: 10023
            name: Bug
          - id: 10000
            name: Epic
        status: ok
    run_server_log_connector_response:
      summary: Response from running a server log connector.
      value:
        connector_id: 7fc7b9a0-ecc9-11ec-8736-e7d63118c907
        status: ok
    run_servicenow_itom_connector_response:
      summary: Response from retrieving the list of choices for a ServiceNow ITOM
        connector.
      value:
        connector_id: 9d9be270-2fd2-11ed-b0e0-87533c532698
        data:
          - dependent_value: \\"\\"
            element: severity
            label: Critical
            value: 1
          - dependent_value: \\"\\"
            element: severity
            label: Major
            value: 2
          - dependent_value: \\"\\"
            element: severity
            label: Minor
            value: 3
          - dependent_value: \\"\\"
            element: severity
            label: Warning
            value: 4
          - dependent_value: \\"\\"
            element: severity
            label: OK
            value: 5
          - dependent_value: \\"\\"
            element: severity
            label: Clear
            value: 0
          - dependent_value: \\"\\"
            element: urgency
            label: 1 - High
            value: 1
          - dependent_value: \\"\\"
            element: urgency
            label: 2 - Medium
            value: 2
          - dependent_value: \\"\\"
            element: urgency
            label: 3 - Low
            value: 3
        status: ok
    run_swimlane_connector_response:
      summary: Response from creating a Swimlane incident.
      value:
        connector_id: a4746470-2f94-11ed-b0e0-87533c532698
        data:
          id: aKPmBHWzmdRQtx6Mx
          title: TEST-457
          url: https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx
          pushedDate: 2022-09-08T16:52:27.866Z
          comments:
            - commentId: 1
              pushedDate: 2022-09-08T16:52:27.865Z
        status: ok
  responses:
    \\"401\\":
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            type: object
            title: Unauthorized response
            properties:
              error:
                type: string
                example: Unauthorized
                enum:
                  - Unauthorized
              message:
                type: string
              statusCode:
                type: integer
                example: 401
                enum:
                  - 401
    \\"404\\":
      description: Object is not found.
      content:
        application/json:
          schema:
            type: object
            title: Not found response
            properties:
              error:
                type: string
                example: Not Found
                enum:
                  - Not Found
              message:
                type: string
                example: Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not found
              statusCode:
                type: integer
                example: 404
                enum:
                  - 404
    200_actions:
      description: Indicates a successful call.
      content:
        application/json:
          schema:
            $ref: \\"#/components/schemas/action_response_properties\\"
security:
  - basicAuth: []
  - apiKeyAuth: []
",
  },
]
`;
